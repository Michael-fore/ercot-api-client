# coding: utf-8

"""
    ERCOT Public API Client/Developer Documentation

    Client/Developer RESTFul web services documentation for ERCOT Market Information List (EMIL) products.

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictBool, StrictFloat, StrictInt, StrictStr
from typing import Optional, Union
from typing_extensions import Annotated
from openapi_client.models.report import Report

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class NP3565CDApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def get_data100(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        coast_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        coast_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        east_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        east_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        far_west_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        far_west_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        north_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        north_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        north_central_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        north_central_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        south_central_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        south_central_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        southern_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        southern_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        posted_datetime_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        posted_datetime_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        west_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        west_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        system_total_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        system_total_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        model: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        in_use_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Report:
        """Seven-Day Load Forecast by Model and Weather Zone

        Seven-Day Load Forecast by Model and Weather Zone

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending: Format - abc123.
        :type hour_ending: str
        :param coast_from: Format - ####.###.
        :type coast_from: float
        :param coast_to: Format - ####.###.
        :type coast_to: float
        :param east_from: Format - ####.###.
        :type east_from: float
        :param east_to: Format - ####.###.
        :type east_to: float
        :param far_west_from: Format - ####.###.
        :type far_west_from: float
        :param far_west_to: Format - ####.###.
        :type far_west_to: float
        :param north_from: Format - ####.###.
        :type north_from: float
        :param north_to: Format - ####.###.
        :type north_to: float
        :param north_central_from: Format - ####.###.
        :type north_central_from: float
        :param north_central_to: Format - ####.###.
        :type north_central_to: float
        :param south_central_from: Format - ####.###.
        :type south_central_from: float
        :param south_central_to: Format - ####.###.
        :type south_central_to: float
        :param southern_from: Format - ####.###.
        :type southern_from: float
        :param southern_to: Format - ####.###.
        :type southern_to: float
        :param posted_datetime_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type posted_datetime_from: str
        :param posted_datetime_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type posted_datetime_to: str
        :param west_from: Format - ####.###.
        :type west_from: float
        :param west_to: Format - ####.###.
        :type west_to: float
        :param system_total_from: Format - ####.###.
        :type system_total_from: float
        :param system_total_to: Format - ####.###.
        :type system_total_to: float
        :param model: Format - abc123.
        :type model: str
        :param in_use_flag: Format - true | false.
        :type in_use_flag: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data100_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            dst_flag=dst_flag,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending=hour_ending,
            coast_from=coast_from,
            coast_to=coast_to,
            east_from=east_from,
            east_to=east_to,
            far_west_from=far_west_from,
            far_west_to=far_west_to,
            north_from=north_from,
            north_to=north_to,
            north_central_from=north_central_from,
            north_central_to=north_central_to,
            south_central_from=south_central_from,
            south_central_to=south_central_to,
            southern_from=southern_from,
            southern_to=southern_to,
            posted_datetime_from=posted_datetime_from,
            posted_datetime_to=posted_datetime_to,
            west_from=west_from,
            west_to=west_to,
            system_total_from=system_total_from,
            system_total_to=system_total_to,
            model=model,
            in_use_flag=in_use_flag,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_data100_with_http_info(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        coast_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        coast_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        east_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        east_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        far_west_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        far_west_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        north_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        north_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        north_central_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        north_central_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        south_central_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        south_central_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        southern_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        southern_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        posted_datetime_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        posted_datetime_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        west_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        west_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        system_total_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        system_total_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        model: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        in_use_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Report]:
        """Seven-Day Load Forecast by Model and Weather Zone

        Seven-Day Load Forecast by Model and Weather Zone

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending: Format - abc123.
        :type hour_ending: str
        :param coast_from: Format - ####.###.
        :type coast_from: float
        :param coast_to: Format - ####.###.
        :type coast_to: float
        :param east_from: Format - ####.###.
        :type east_from: float
        :param east_to: Format - ####.###.
        :type east_to: float
        :param far_west_from: Format - ####.###.
        :type far_west_from: float
        :param far_west_to: Format - ####.###.
        :type far_west_to: float
        :param north_from: Format - ####.###.
        :type north_from: float
        :param north_to: Format - ####.###.
        :type north_to: float
        :param north_central_from: Format - ####.###.
        :type north_central_from: float
        :param north_central_to: Format - ####.###.
        :type north_central_to: float
        :param south_central_from: Format - ####.###.
        :type south_central_from: float
        :param south_central_to: Format - ####.###.
        :type south_central_to: float
        :param southern_from: Format - ####.###.
        :type southern_from: float
        :param southern_to: Format - ####.###.
        :type southern_to: float
        :param posted_datetime_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type posted_datetime_from: str
        :param posted_datetime_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type posted_datetime_to: str
        :param west_from: Format - ####.###.
        :type west_from: float
        :param west_to: Format - ####.###.
        :type west_to: float
        :param system_total_from: Format - ####.###.
        :type system_total_from: float
        :param system_total_to: Format - ####.###.
        :type system_total_to: float
        :param model: Format - abc123.
        :type model: str
        :param in_use_flag: Format - true | false.
        :type in_use_flag: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data100_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            dst_flag=dst_flag,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending=hour_ending,
            coast_from=coast_from,
            coast_to=coast_to,
            east_from=east_from,
            east_to=east_to,
            far_west_from=far_west_from,
            far_west_to=far_west_to,
            north_from=north_from,
            north_to=north_to,
            north_central_from=north_central_from,
            north_central_to=north_central_to,
            south_central_from=south_central_from,
            south_central_to=south_central_to,
            southern_from=southern_from,
            southern_to=southern_to,
            posted_datetime_from=posted_datetime_from,
            posted_datetime_to=posted_datetime_to,
            west_from=west_from,
            west_to=west_to,
            system_total_from=system_total_from,
            system_total_to=system_total_to,
            model=model,
            in_use_flag=in_use_flag,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_data100_without_preload_content(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        coast_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        coast_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        east_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        east_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        far_west_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        far_west_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        north_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        north_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        north_central_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        north_central_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        south_central_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        south_central_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        southern_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        southern_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        posted_datetime_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        posted_datetime_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        west_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        west_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        system_total_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        system_total_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        model: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        in_use_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Seven-Day Load Forecast by Model and Weather Zone

        Seven-Day Load Forecast by Model and Weather Zone

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending: Format - abc123.
        :type hour_ending: str
        :param coast_from: Format - ####.###.
        :type coast_from: float
        :param coast_to: Format - ####.###.
        :type coast_to: float
        :param east_from: Format - ####.###.
        :type east_from: float
        :param east_to: Format - ####.###.
        :type east_to: float
        :param far_west_from: Format - ####.###.
        :type far_west_from: float
        :param far_west_to: Format - ####.###.
        :type far_west_to: float
        :param north_from: Format - ####.###.
        :type north_from: float
        :param north_to: Format - ####.###.
        :type north_to: float
        :param north_central_from: Format - ####.###.
        :type north_central_from: float
        :param north_central_to: Format - ####.###.
        :type north_central_to: float
        :param south_central_from: Format - ####.###.
        :type south_central_from: float
        :param south_central_to: Format - ####.###.
        :type south_central_to: float
        :param southern_from: Format - ####.###.
        :type southern_from: float
        :param southern_to: Format - ####.###.
        :type southern_to: float
        :param posted_datetime_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type posted_datetime_from: str
        :param posted_datetime_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type posted_datetime_to: str
        :param west_from: Format - ####.###.
        :type west_from: float
        :param west_to: Format - ####.###.
        :type west_to: float
        :param system_total_from: Format - ####.###.
        :type system_total_from: float
        :param system_total_to: Format - ####.###.
        :type system_total_to: float
        :param model: Format - abc123.
        :type model: str
        :param in_use_flag: Format - true | false.
        :type in_use_flag: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data100_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            dst_flag=dst_flag,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending=hour_ending,
            coast_from=coast_from,
            coast_to=coast_to,
            east_from=east_from,
            east_to=east_to,
            far_west_from=far_west_from,
            far_west_to=far_west_to,
            north_from=north_from,
            north_to=north_to,
            north_central_from=north_central_from,
            north_central_to=north_central_to,
            south_central_from=south_central_from,
            south_central_to=south_central_to,
            southern_from=southern_from,
            southern_to=southern_to,
            posted_datetime_from=posted_datetime_from,
            posted_datetime_to=posted_datetime_to,
            west_from=west_from,
            west_to=west_to,
            system_total_from=system_total_from,
            system_total_to=system_total_to,
            model=model,
            in_use_flag=in_use_flag,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_data100_serialize(
        self,
        ocp_apim_subscription_key,
        dst_flag,
        delivery_date_from,
        delivery_date_to,
        hour_ending,
        coast_from,
        coast_to,
        east_from,
        east_to,
        far_west_from,
        far_west_to,
        north_from,
        north_to,
        north_central_from,
        north_central_to,
        south_central_from,
        south_central_to,
        southern_from,
        southern_to,
        posted_datetime_from,
        posted_datetime_to,
        west_from,
        west_to,
        system_total_from,
        system_total_to,
        model,
        in_use_flag,
        page,
        size,
        sort,
        dir,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if dst_flag is not None:
            
            _query_params.append(('DSTFlag', dst_flag))
            
        if delivery_date_from is not None:
            
            _query_params.append(('deliveryDateFrom', delivery_date_from))
            
        if delivery_date_to is not None:
            
            _query_params.append(('deliveryDateTo', delivery_date_to))
            
        if hour_ending is not None:
            
            _query_params.append(('hourEnding', hour_ending))
            
        if coast_from is not None:
            
            _query_params.append(('coastFrom', coast_from))
            
        if coast_to is not None:
            
            _query_params.append(('coastTo', coast_to))
            
        if east_from is not None:
            
            _query_params.append(('eastFrom', east_from))
            
        if east_to is not None:
            
            _query_params.append(('eastTo', east_to))
            
        if far_west_from is not None:
            
            _query_params.append(('farWestFrom', far_west_from))
            
        if far_west_to is not None:
            
            _query_params.append(('farWestTo', far_west_to))
            
        if north_from is not None:
            
            _query_params.append(('northFrom', north_from))
            
        if north_to is not None:
            
            _query_params.append(('northTo', north_to))
            
        if north_central_from is not None:
            
            _query_params.append(('northCentralFrom', north_central_from))
            
        if north_central_to is not None:
            
            _query_params.append(('northCentralTo', north_central_to))
            
        if south_central_from is not None:
            
            _query_params.append(('southCentralFrom', south_central_from))
            
        if south_central_to is not None:
            
            _query_params.append(('southCentralTo', south_central_to))
            
        if southern_from is not None:
            
            _query_params.append(('southernFrom', southern_from))
            
        if southern_to is not None:
            
            _query_params.append(('southernTo', southern_to))
            
        if posted_datetime_from is not None:
            
            _query_params.append(('postedDatetimeFrom', posted_datetime_from))
            
        if posted_datetime_to is not None:
            
            _query_params.append(('postedDatetimeTo', posted_datetime_to))
            
        if west_from is not None:
            
            _query_params.append(('westFrom', west_from))
            
        if west_to is not None:
            
            _query_params.append(('westTo', west_to))
            
        if system_total_from is not None:
            
            _query_params.append(('systemTotalFrom', system_total_from))
            
        if system_total_to is not None:
            
            _query_params.append(('systemTotalTo', system_total_to))
            
        if model is not None:
            
            _query_params.append(('model', model))
            
        if in_use_flag is not None:
            
            _query_params.append(('inUseFlag', in_use_flag))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if dir is not None:
            
            _query_params.append(('dir', dir))
            
        # process the header parameters
        if ocp_apim_subscription_key is not None:
            _header_params['Ocp-Apim-Subscription-Key'] = ocp_apim_subscription_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/np3-565-cd/lf_by_model_weather_zone',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


