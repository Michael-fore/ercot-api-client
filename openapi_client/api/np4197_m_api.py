# coding: utf-8

"""
    ERCOT Public API Client/Developer Documentation

    Client/Developer RESTFul web services documentation for ERCOT Market Information List (EMIL) products.

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictBool, StrictFloat, StrictInt, StrictStr
from typing import Optional, Union
from typing_extensions import Annotated
from openapi_client.models.report import Report

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class NP4197MApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def get_data18(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_hour_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_hour_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_interval_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_interval_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        settlement_point_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_type: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        spp_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        spp_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        spp_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        spp_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Report:
        """RTM Price Corrections for SPP

        RTM Price Corrections for SPP

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param delivery_hour_from: Format - ###.
        :type delivery_hour_from: int
        :param delivery_hour_to: Format - ###.
        :type delivery_hour_to: int
        :param delivery_interval_from: Format - ###.
        :type delivery_interval_from: int
        :param delivery_interval_to: Format - ###.
        :type delivery_interval_to: int
        :param settlement_point_name: Format - abc123.
        :type settlement_point_name: str
        :param settlement_point_type: Format - abc123.
        :type settlement_point_type: str
        :param spp_original_from: Format - ####.###.
        :type spp_original_from: float
        :param spp_original_to: Format - ####.###.
        :type spp_original_to: float
        :param spp_corrected_from: Format - ####.###.
        :type spp_corrected_from: float
        :param spp_corrected_to: Format - ####.###.
        :type spp_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data18_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            delivery_hour_from=delivery_hour_from,
            delivery_hour_to=delivery_hour_to,
            delivery_interval_from=delivery_interval_from,
            delivery_interval_to=delivery_interval_to,
            settlement_point_name=settlement_point_name,
            settlement_point_type=settlement_point_type,
            spp_original_from=spp_original_from,
            spp_original_to=spp_original_to,
            spp_corrected_from=spp_corrected_from,
            spp_corrected_to=spp_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_data18_with_http_info(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_hour_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_hour_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_interval_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_interval_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        settlement_point_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_type: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        spp_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        spp_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        spp_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        spp_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Report]:
        """RTM Price Corrections for SPP

        RTM Price Corrections for SPP

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param delivery_hour_from: Format - ###.
        :type delivery_hour_from: int
        :param delivery_hour_to: Format - ###.
        :type delivery_hour_to: int
        :param delivery_interval_from: Format - ###.
        :type delivery_interval_from: int
        :param delivery_interval_to: Format - ###.
        :type delivery_interval_to: int
        :param settlement_point_name: Format - abc123.
        :type settlement_point_name: str
        :param settlement_point_type: Format - abc123.
        :type settlement_point_type: str
        :param spp_original_from: Format - ####.###.
        :type spp_original_from: float
        :param spp_original_to: Format - ####.###.
        :type spp_original_to: float
        :param spp_corrected_from: Format - ####.###.
        :type spp_corrected_from: float
        :param spp_corrected_to: Format - ####.###.
        :type spp_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data18_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            delivery_hour_from=delivery_hour_from,
            delivery_hour_to=delivery_hour_to,
            delivery_interval_from=delivery_interval_from,
            delivery_interval_to=delivery_interval_to,
            settlement_point_name=settlement_point_name,
            settlement_point_type=settlement_point_type,
            spp_original_from=spp_original_from,
            spp_original_to=spp_original_to,
            spp_corrected_from=spp_corrected_from,
            spp_corrected_to=spp_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_data18_without_preload_content(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_hour_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_hour_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_interval_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_interval_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        settlement_point_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_type: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        spp_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        spp_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        spp_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        spp_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """RTM Price Corrections for SPP

        RTM Price Corrections for SPP

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param delivery_hour_from: Format - ###.
        :type delivery_hour_from: int
        :param delivery_hour_to: Format - ###.
        :type delivery_hour_to: int
        :param delivery_interval_from: Format - ###.
        :type delivery_interval_from: int
        :param delivery_interval_to: Format - ###.
        :type delivery_interval_to: int
        :param settlement_point_name: Format - abc123.
        :type settlement_point_name: str
        :param settlement_point_type: Format - abc123.
        :type settlement_point_type: str
        :param spp_original_from: Format - ####.###.
        :type spp_original_from: float
        :param spp_original_to: Format - ####.###.
        :type spp_original_to: float
        :param spp_corrected_from: Format - ####.###.
        :type spp_corrected_from: float
        :param spp_corrected_to: Format - ####.###.
        :type spp_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data18_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            delivery_hour_from=delivery_hour_from,
            delivery_hour_to=delivery_hour_to,
            delivery_interval_from=delivery_interval_from,
            delivery_interval_to=delivery_interval_to,
            settlement_point_name=settlement_point_name,
            settlement_point_type=settlement_point_type,
            spp_original_from=spp_original_from,
            spp_original_to=spp_original_to,
            spp_corrected_from=spp_corrected_from,
            spp_corrected_to=spp_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_data18_serialize(
        self,
        ocp_apim_subscription_key,
        delivery_date_from,
        delivery_date_to,
        delivery_hour_from,
        delivery_hour_to,
        delivery_interval_from,
        delivery_interval_to,
        settlement_point_name,
        settlement_point_type,
        spp_original_from,
        spp_original_to,
        spp_corrected_from,
        spp_corrected_to,
        price_correction_time_from,
        price_correction_time_to,
        dst_flag,
        page,
        size,
        sort,
        dir,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if delivery_date_from is not None:
            
            _query_params.append(('deliveryDateFrom', delivery_date_from))
            
        if delivery_date_to is not None:
            
            _query_params.append(('deliveryDateTo', delivery_date_to))
            
        if delivery_hour_from is not None:
            
            _query_params.append(('deliveryHourFrom', delivery_hour_from))
            
        if delivery_hour_to is not None:
            
            _query_params.append(('deliveryHourTo', delivery_hour_to))
            
        if delivery_interval_from is not None:
            
            _query_params.append(('deliveryIntervalFrom', delivery_interval_from))
            
        if delivery_interval_to is not None:
            
            _query_params.append(('deliveryIntervalTo', delivery_interval_to))
            
        if settlement_point_name is not None:
            
            _query_params.append(('settlementPointName', settlement_point_name))
            
        if settlement_point_type is not None:
            
            _query_params.append(('settlementPointType', settlement_point_type))
            
        if spp_original_from is not None:
            
            _query_params.append(('SPPOriginalFrom', spp_original_from))
            
        if spp_original_to is not None:
            
            _query_params.append(('SPPOriginalTo', spp_original_to))
            
        if spp_corrected_from is not None:
            
            _query_params.append(('SPPCorrectedFrom', spp_corrected_from))
            
        if spp_corrected_to is not None:
            
            _query_params.append(('SPPCorrectedTo', spp_corrected_to))
            
        if price_correction_time_from is not None:
            
            _query_params.append(('priceCorrectionTimeFrom', price_correction_time_from))
            
        if price_correction_time_to is not None:
            
            _query_params.append(('priceCorrectionTimeTo', price_correction_time_to))
            
        if dst_flag is not None:
            
            _query_params.append(('DSTFlag', dst_flag))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if dir is not None:
            
            _query_params.append(('dir', dir))
            
        # process the header parameters
        if ocp_apim_subscription_key is not None:
            _header_params['Ocp-Apim-Subscription-Key'] = ocp_apim_subscription_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/np4-197-m/rtm_price_corrections_spp',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_data19(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        settlement_point_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        lmp_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        sced_timestamp_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        sced_timestamp_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Report:
        """RTM Price Corrections SP LMP

        RTM Price Corrections SP LMP

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param settlement_point_name: Format - abc123.
        :type settlement_point_name: str
        :param lmp_original_from: Format - ####.###.
        :type lmp_original_from: float
        :param lmp_original_to: Format - ####.###.
        :type lmp_original_to: float
        :param lmp_corrected_from: Format - ####.###.
        :type lmp_corrected_from: float
        :param lmp_corrected_to: Format - ####.###.
        :type lmp_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param sced_timestamp_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_from: str
        :param sced_timestamp_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_to: str
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data19_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            settlement_point_name=settlement_point_name,
            lmp_original_from=lmp_original_from,
            lmp_original_to=lmp_original_to,
            lmp_corrected_from=lmp_corrected_from,
            lmp_corrected_to=lmp_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            sced_timestamp_from=sced_timestamp_from,
            sced_timestamp_to=sced_timestamp_to,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_data19_with_http_info(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        settlement_point_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        lmp_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        sced_timestamp_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        sced_timestamp_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Report]:
        """RTM Price Corrections SP LMP

        RTM Price Corrections SP LMP

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param settlement_point_name: Format - abc123.
        :type settlement_point_name: str
        :param lmp_original_from: Format - ####.###.
        :type lmp_original_from: float
        :param lmp_original_to: Format - ####.###.
        :type lmp_original_to: float
        :param lmp_corrected_from: Format - ####.###.
        :type lmp_corrected_from: float
        :param lmp_corrected_to: Format - ####.###.
        :type lmp_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param sced_timestamp_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_from: str
        :param sced_timestamp_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_to: str
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data19_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            settlement_point_name=settlement_point_name,
            lmp_original_from=lmp_original_from,
            lmp_original_to=lmp_original_to,
            lmp_corrected_from=lmp_corrected_from,
            lmp_corrected_to=lmp_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            sced_timestamp_from=sced_timestamp_from,
            sced_timestamp_to=sced_timestamp_to,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_data19_without_preload_content(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        settlement_point_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        lmp_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        sced_timestamp_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        sced_timestamp_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """RTM Price Corrections SP LMP

        RTM Price Corrections SP LMP

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param settlement_point_name: Format - abc123.
        :type settlement_point_name: str
        :param lmp_original_from: Format - ####.###.
        :type lmp_original_from: float
        :param lmp_original_to: Format - ####.###.
        :type lmp_original_to: float
        :param lmp_corrected_from: Format - ####.###.
        :type lmp_corrected_from: float
        :param lmp_corrected_to: Format - ####.###.
        :type lmp_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param sced_timestamp_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_from: str
        :param sced_timestamp_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_to: str
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data19_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            settlement_point_name=settlement_point_name,
            lmp_original_from=lmp_original_from,
            lmp_original_to=lmp_original_to,
            lmp_corrected_from=lmp_corrected_from,
            lmp_corrected_to=lmp_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            sced_timestamp_from=sced_timestamp_from,
            sced_timestamp_to=sced_timestamp_to,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_data19_serialize(
        self,
        ocp_apim_subscription_key,
        settlement_point_name,
        lmp_original_from,
        lmp_original_to,
        lmp_corrected_from,
        lmp_corrected_to,
        price_correction_time_from,
        price_correction_time_to,
        dst_flag,
        sced_timestamp_from,
        sced_timestamp_to,
        page,
        size,
        sort,
        dir,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if settlement_point_name is not None:
            
            _query_params.append(('settlementPointName', settlement_point_name))
            
        if lmp_original_from is not None:
            
            _query_params.append(('LMPOriginalFrom', lmp_original_from))
            
        if lmp_original_to is not None:
            
            _query_params.append(('LMPOriginalTo', lmp_original_to))
            
        if lmp_corrected_from is not None:
            
            _query_params.append(('LMPCorrectedFrom', lmp_corrected_from))
            
        if lmp_corrected_to is not None:
            
            _query_params.append(('LMPCorrectedTo', lmp_corrected_to))
            
        if price_correction_time_from is not None:
            
            _query_params.append(('priceCorrectionTimeFrom', price_correction_time_from))
            
        if price_correction_time_to is not None:
            
            _query_params.append(('priceCorrectionTimeTo', price_correction_time_to))
            
        if dst_flag is not None:
            
            _query_params.append(('DSTFlag', dst_flag))
            
        if sced_timestamp_from is not None:
            
            _query_params.append(('SCEDTimestampFrom', sced_timestamp_from))
            
        if sced_timestamp_to is not None:
            
            _query_params.append(('SCEDTimestampTo', sced_timestamp_to))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if dir is not None:
            
            _query_params.append(('dir', dir))
            
        # process the header parameters
        if ocp_apim_subscription_key is not None:
            _header_params['Ocp-Apim-Subscription-Key'] = ocp_apim_subscription_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/np4-197-m/rtm_price_corrections_splmp',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_data20(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_hour_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_hour_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_interval_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_interval_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        resource_type: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        resource_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        meter_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        price_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Report:
        """RTM Price Corrections for SOG Price

        RTM Price Corrections for SOG Price

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param delivery_hour_from: Format - ###.
        :type delivery_hour_from: int
        :param delivery_hour_to: Format - ###.
        :type delivery_hour_to: int
        :param delivery_interval_from: Format - ###.
        :type delivery_interval_from: int
        :param delivery_interval_to: Format - ###.
        :type delivery_interval_to: int
        :param resource_type: Format - abc123.
        :type resource_type: str
        :param resource_name: Format - abc123.
        :type resource_name: str
        :param meter_name: Format - abc123.
        :type meter_name: str
        :param price_original_from: Format - ####.###.
        :type price_original_from: float
        :param price_original_to: Format - ####.###.
        :type price_original_to: float
        :param price_corrected_from: Format - ####.###.
        :type price_corrected_from: float
        :param price_corrected_to: Format - ####.###.
        :type price_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data20_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            delivery_hour_from=delivery_hour_from,
            delivery_hour_to=delivery_hour_to,
            delivery_interval_from=delivery_interval_from,
            delivery_interval_to=delivery_interval_to,
            resource_type=resource_type,
            resource_name=resource_name,
            meter_name=meter_name,
            price_original_from=price_original_from,
            price_original_to=price_original_to,
            price_corrected_from=price_corrected_from,
            price_corrected_to=price_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_data20_with_http_info(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_hour_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_hour_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_interval_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_interval_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        resource_type: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        resource_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        meter_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        price_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Report]:
        """RTM Price Corrections for SOG Price

        RTM Price Corrections for SOG Price

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param delivery_hour_from: Format - ###.
        :type delivery_hour_from: int
        :param delivery_hour_to: Format - ###.
        :type delivery_hour_to: int
        :param delivery_interval_from: Format - ###.
        :type delivery_interval_from: int
        :param delivery_interval_to: Format - ###.
        :type delivery_interval_to: int
        :param resource_type: Format - abc123.
        :type resource_type: str
        :param resource_name: Format - abc123.
        :type resource_name: str
        :param meter_name: Format - abc123.
        :type meter_name: str
        :param price_original_from: Format - ####.###.
        :type price_original_from: float
        :param price_original_to: Format - ####.###.
        :type price_original_to: float
        :param price_corrected_from: Format - ####.###.
        :type price_corrected_from: float
        :param price_corrected_to: Format - ####.###.
        :type price_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data20_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            delivery_hour_from=delivery_hour_from,
            delivery_hour_to=delivery_hour_to,
            delivery_interval_from=delivery_interval_from,
            delivery_interval_to=delivery_interval_to,
            resource_type=resource_type,
            resource_name=resource_name,
            meter_name=meter_name,
            price_original_from=price_original_from,
            price_original_to=price_original_to,
            price_corrected_from=price_corrected_from,
            price_corrected_to=price_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_data20_without_preload_content(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_hour_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_hour_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_interval_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_interval_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        resource_type: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        resource_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        meter_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        price_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """RTM Price Corrections for SOG Price

        RTM Price Corrections for SOG Price

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param delivery_hour_from: Format - ###.
        :type delivery_hour_from: int
        :param delivery_hour_to: Format - ###.
        :type delivery_hour_to: int
        :param delivery_interval_from: Format - ###.
        :type delivery_interval_from: int
        :param delivery_interval_to: Format - ###.
        :type delivery_interval_to: int
        :param resource_type: Format - abc123.
        :type resource_type: str
        :param resource_name: Format - abc123.
        :type resource_name: str
        :param meter_name: Format - abc123.
        :type meter_name: str
        :param price_original_from: Format - ####.###.
        :type price_original_from: float
        :param price_original_to: Format - ####.###.
        :type price_original_to: float
        :param price_corrected_from: Format - ####.###.
        :type price_corrected_from: float
        :param price_corrected_to: Format - ####.###.
        :type price_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data20_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            delivery_hour_from=delivery_hour_from,
            delivery_hour_to=delivery_hour_to,
            delivery_interval_from=delivery_interval_from,
            delivery_interval_to=delivery_interval_to,
            resource_type=resource_type,
            resource_name=resource_name,
            meter_name=meter_name,
            price_original_from=price_original_from,
            price_original_to=price_original_to,
            price_corrected_from=price_corrected_from,
            price_corrected_to=price_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_data20_serialize(
        self,
        ocp_apim_subscription_key,
        delivery_date_from,
        delivery_date_to,
        delivery_hour_from,
        delivery_hour_to,
        delivery_interval_from,
        delivery_interval_to,
        resource_type,
        resource_name,
        meter_name,
        price_original_from,
        price_original_to,
        price_corrected_from,
        price_corrected_to,
        price_correction_time_from,
        price_correction_time_to,
        dst_flag,
        page,
        size,
        sort,
        dir,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if delivery_date_from is not None:
            
            _query_params.append(('deliveryDateFrom', delivery_date_from))
            
        if delivery_date_to is not None:
            
            _query_params.append(('deliveryDateTo', delivery_date_to))
            
        if delivery_hour_from is not None:
            
            _query_params.append(('deliveryHourFrom', delivery_hour_from))
            
        if delivery_hour_to is not None:
            
            _query_params.append(('deliveryHourTo', delivery_hour_to))
            
        if delivery_interval_from is not None:
            
            _query_params.append(('deliveryIntervalFrom', delivery_interval_from))
            
        if delivery_interval_to is not None:
            
            _query_params.append(('deliveryIntervalTo', delivery_interval_to))
            
        if resource_type is not None:
            
            _query_params.append(('resourceType', resource_type))
            
        if resource_name is not None:
            
            _query_params.append(('resourceName', resource_name))
            
        if meter_name is not None:
            
            _query_params.append(('meterName', meter_name))
            
        if price_original_from is not None:
            
            _query_params.append(('priceOriginalFrom', price_original_from))
            
        if price_original_to is not None:
            
            _query_params.append(('priceOriginalTo', price_original_to))
            
        if price_corrected_from is not None:
            
            _query_params.append(('priceCorrectedFrom', price_corrected_from))
            
        if price_corrected_to is not None:
            
            _query_params.append(('priceCorrectedTo', price_corrected_to))
            
        if price_correction_time_from is not None:
            
            _query_params.append(('priceCorrectionTimeFrom', price_correction_time_from))
            
        if price_correction_time_to is not None:
            
            _query_params.append(('priceCorrectionTimeTo', price_correction_time_to))
            
        if dst_flag is not None:
            
            _query_params.append(('DSTFlag', dst_flag))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if dir is not None:
            
            _query_params.append(('dir', dir))
            
        # process the header parameters
        if ocp_apim_subscription_key is not None:
            _header_params['Ocp-Apim-Subscription-Key'] = ocp_apim_subscription_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/np4-197-m/rtm_price_corrections_sogprice',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_data21(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        sced_timestamp_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        sced_timestamp_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        resource_type: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        resource_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        meter_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        meter_lmp_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        meter_lmp_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        meter_lmp_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        meter_lmp_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtorpa_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtorpa_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtorpa_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtorpa_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtordpa_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtordpa_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtordpa_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtordpa_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        final_lmp_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        final_lmp_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        final_lmp_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        final_lmp_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Report:
        """RTM Price Corrections for SOG LMP

        RTM Price Corrections for SOG LMP

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param sced_timestamp_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_from: str
        :param sced_timestamp_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_to: str
        :param resource_type: Format - abc123.
        :type resource_type: str
        :param resource_name: Format - abc123.
        :type resource_name: str
        :param meter_name: Format - abc123.
        :type meter_name: str
        :param meter_lmp_original_from: Format - ####.###.
        :type meter_lmp_original_from: float
        :param meter_lmp_original_to: Format - ####.###.
        :type meter_lmp_original_to: float
        :param meter_lmp_corrected_from: Format - ####.###.
        :type meter_lmp_corrected_from: float
        :param meter_lmp_corrected_to: Format - ####.###.
        :type meter_lmp_corrected_to: float
        :param rtorpa_original_from: Format - ####.###.
        :type rtorpa_original_from: float
        :param rtorpa_original_to: Format - ####.###.
        :type rtorpa_original_to: float
        :param rtorpa_corrected_from: Format - ####.###.
        :type rtorpa_corrected_from: float
        :param rtorpa_corrected_to: Format - ####.###.
        :type rtorpa_corrected_to: float
        :param rtordpa_original_from: Format - ####.###.
        :type rtordpa_original_from: float
        :param rtordpa_original_to: Format - ####.###.
        :type rtordpa_original_to: float
        :param rtordpa_corrected_from: Format - ####.###.
        :type rtordpa_corrected_from: float
        :param rtordpa_corrected_to: Format - ####.###.
        :type rtordpa_corrected_to: float
        :param final_lmp_original_from: Format - ####.###.
        :type final_lmp_original_from: float
        :param final_lmp_original_to: Format - ####.###.
        :type final_lmp_original_to: float
        :param final_lmp_corrected_from: Format - ####.###.
        :type final_lmp_corrected_from: float
        :param final_lmp_corrected_to: Format - ####.###.
        :type final_lmp_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data21_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            dst_flag=dst_flag,
            sced_timestamp_from=sced_timestamp_from,
            sced_timestamp_to=sced_timestamp_to,
            resource_type=resource_type,
            resource_name=resource_name,
            meter_name=meter_name,
            meter_lmp_original_from=meter_lmp_original_from,
            meter_lmp_original_to=meter_lmp_original_to,
            meter_lmp_corrected_from=meter_lmp_corrected_from,
            meter_lmp_corrected_to=meter_lmp_corrected_to,
            rtorpa_original_from=rtorpa_original_from,
            rtorpa_original_to=rtorpa_original_to,
            rtorpa_corrected_from=rtorpa_corrected_from,
            rtorpa_corrected_to=rtorpa_corrected_to,
            rtordpa_original_from=rtordpa_original_from,
            rtordpa_original_to=rtordpa_original_to,
            rtordpa_corrected_from=rtordpa_corrected_from,
            rtordpa_corrected_to=rtordpa_corrected_to,
            final_lmp_original_from=final_lmp_original_from,
            final_lmp_original_to=final_lmp_original_to,
            final_lmp_corrected_from=final_lmp_corrected_from,
            final_lmp_corrected_to=final_lmp_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_data21_with_http_info(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        sced_timestamp_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        sced_timestamp_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        resource_type: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        resource_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        meter_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        meter_lmp_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        meter_lmp_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        meter_lmp_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        meter_lmp_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtorpa_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtorpa_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtorpa_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtorpa_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtordpa_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtordpa_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtordpa_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtordpa_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        final_lmp_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        final_lmp_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        final_lmp_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        final_lmp_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Report]:
        """RTM Price Corrections for SOG LMP

        RTM Price Corrections for SOG LMP

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param sced_timestamp_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_from: str
        :param sced_timestamp_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_to: str
        :param resource_type: Format - abc123.
        :type resource_type: str
        :param resource_name: Format - abc123.
        :type resource_name: str
        :param meter_name: Format - abc123.
        :type meter_name: str
        :param meter_lmp_original_from: Format - ####.###.
        :type meter_lmp_original_from: float
        :param meter_lmp_original_to: Format - ####.###.
        :type meter_lmp_original_to: float
        :param meter_lmp_corrected_from: Format - ####.###.
        :type meter_lmp_corrected_from: float
        :param meter_lmp_corrected_to: Format - ####.###.
        :type meter_lmp_corrected_to: float
        :param rtorpa_original_from: Format - ####.###.
        :type rtorpa_original_from: float
        :param rtorpa_original_to: Format - ####.###.
        :type rtorpa_original_to: float
        :param rtorpa_corrected_from: Format - ####.###.
        :type rtorpa_corrected_from: float
        :param rtorpa_corrected_to: Format - ####.###.
        :type rtorpa_corrected_to: float
        :param rtordpa_original_from: Format - ####.###.
        :type rtordpa_original_from: float
        :param rtordpa_original_to: Format - ####.###.
        :type rtordpa_original_to: float
        :param rtordpa_corrected_from: Format - ####.###.
        :type rtordpa_corrected_from: float
        :param rtordpa_corrected_to: Format - ####.###.
        :type rtordpa_corrected_to: float
        :param final_lmp_original_from: Format - ####.###.
        :type final_lmp_original_from: float
        :param final_lmp_original_to: Format - ####.###.
        :type final_lmp_original_to: float
        :param final_lmp_corrected_from: Format - ####.###.
        :type final_lmp_corrected_from: float
        :param final_lmp_corrected_to: Format - ####.###.
        :type final_lmp_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data21_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            dst_flag=dst_flag,
            sced_timestamp_from=sced_timestamp_from,
            sced_timestamp_to=sced_timestamp_to,
            resource_type=resource_type,
            resource_name=resource_name,
            meter_name=meter_name,
            meter_lmp_original_from=meter_lmp_original_from,
            meter_lmp_original_to=meter_lmp_original_to,
            meter_lmp_corrected_from=meter_lmp_corrected_from,
            meter_lmp_corrected_to=meter_lmp_corrected_to,
            rtorpa_original_from=rtorpa_original_from,
            rtorpa_original_to=rtorpa_original_to,
            rtorpa_corrected_from=rtorpa_corrected_from,
            rtorpa_corrected_to=rtorpa_corrected_to,
            rtordpa_original_from=rtordpa_original_from,
            rtordpa_original_to=rtordpa_original_to,
            rtordpa_corrected_from=rtordpa_corrected_from,
            rtordpa_corrected_to=rtordpa_corrected_to,
            final_lmp_original_from=final_lmp_original_from,
            final_lmp_original_to=final_lmp_original_to,
            final_lmp_corrected_from=final_lmp_corrected_from,
            final_lmp_corrected_to=final_lmp_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_data21_without_preload_content(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        sced_timestamp_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        sced_timestamp_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        resource_type: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        resource_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        meter_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        meter_lmp_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        meter_lmp_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        meter_lmp_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        meter_lmp_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtorpa_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtorpa_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtorpa_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtorpa_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtordpa_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtordpa_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtordpa_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rtordpa_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        final_lmp_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        final_lmp_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        final_lmp_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        final_lmp_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """RTM Price Corrections for SOG LMP

        RTM Price Corrections for SOG LMP

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param sced_timestamp_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_from: str
        :param sced_timestamp_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_to: str
        :param resource_type: Format - abc123.
        :type resource_type: str
        :param resource_name: Format - abc123.
        :type resource_name: str
        :param meter_name: Format - abc123.
        :type meter_name: str
        :param meter_lmp_original_from: Format - ####.###.
        :type meter_lmp_original_from: float
        :param meter_lmp_original_to: Format - ####.###.
        :type meter_lmp_original_to: float
        :param meter_lmp_corrected_from: Format - ####.###.
        :type meter_lmp_corrected_from: float
        :param meter_lmp_corrected_to: Format - ####.###.
        :type meter_lmp_corrected_to: float
        :param rtorpa_original_from: Format - ####.###.
        :type rtorpa_original_from: float
        :param rtorpa_original_to: Format - ####.###.
        :type rtorpa_original_to: float
        :param rtorpa_corrected_from: Format - ####.###.
        :type rtorpa_corrected_from: float
        :param rtorpa_corrected_to: Format - ####.###.
        :type rtorpa_corrected_to: float
        :param rtordpa_original_from: Format - ####.###.
        :type rtordpa_original_from: float
        :param rtordpa_original_to: Format - ####.###.
        :type rtordpa_original_to: float
        :param rtordpa_corrected_from: Format - ####.###.
        :type rtordpa_corrected_from: float
        :param rtordpa_corrected_to: Format - ####.###.
        :type rtordpa_corrected_to: float
        :param final_lmp_original_from: Format - ####.###.
        :type final_lmp_original_from: float
        :param final_lmp_original_to: Format - ####.###.
        :type final_lmp_original_to: float
        :param final_lmp_corrected_from: Format - ####.###.
        :type final_lmp_corrected_from: float
        :param final_lmp_corrected_to: Format - ####.###.
        :type final_lmp_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data21_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            dst_flag=dst_flag,
            sced_timestamp_from=sced_timestamp_from,
            sced_timestamp_to=sced_timestamp_to,
            resource_type=resource_type,
            resource_name=resource_name,
            meter_name=meter_name,
            meter_lmp_original_from=meter_lmp_original_from,
            meter_lmp_original_to=meter_lmp_original_to,
            meter_lmp_corrected_from=meter_lmp_corrected_from,
            meter_lmp_corrected_to=meter_lmp_corrected_to,
            rtorpa_original_from=rtorpa_original_from,
            rtorpa_original_to=rtorpa_original_to,
            rtorpa_corrected_from=rtorpa_corrected_from,
            rtorpa_corrected_to=rtorpa_corrected_to,
            rtordpa_original_from=rtordpa_original_from,
            rtordpa_original_to=rtordpa_original_to,
            rtordpa_corrected_from=rtordpa_corrected_from,
            rtordpa_corrected_to=rtordpa_corrected_to,
            final_lmp_original_from=final_lmp_original_from,
            final_lmp_original_to=final_lmp_original_to,
            final_lmp_corrected_from=final_lmp_corrected_from,
            final_lmp_corrected_to=final_lmp_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_data21_serialize(
        self,
        ocp_apim_subscription_key,
        dst_flag,
        sced_timestamp_from,
        sced_timestamp_to,
        resource_type,
        resource_name,
        meter_name,
        meter_lmp_original_from,
        meter_lmp_original_to,
        meter_lmp_corrected_from,
        meter_lmp_corrected_to,
        rtorpa_original_from,
        rtorpa_original_to,
        rtorpa_corrected_from,
        rtorpa_corrected_to,
        rtordpa_original_from,
        rtordpa_original_to,
        rtordpa_corrected_from,
        rtordpa_corrected_to,
        final_lmp_original_from,
        final_lmp_original_to,
        final_lmp_corrected_from,
        final_lmp_corrected_to,
        price_correction_time_from,
        price_correction_time_to,
        page,
        size,
        sort,
        dir,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if dst_flag is not None:
            
            _query_params.append(('DSTFlag', dst_flag))
            
        if sced_timestamp_from is not None:
            
            _query_params.append(('SCEDTimestampFrom', sced_timestamp_from))
            
        if sced_timestamp_to is not None:
            
            _query_params.append(('SCEDTimestampTo', sced_timestamp_to))
            
        if resource_type is not None:
            
            _query_params.append(('resourceType', resource_type))
            
        if resource_name is not None:
            
            _query_params.append(('resourceName', resource_name))
            
        if meter_name is not None:
            
            _query_params.append(('meterName', meter_name))
            
        if meter_lmp_original_from is not None:
            
            _query_params.append(('meterLMPOriginalFrom', meter_lmp_original_from))
            
        if meter_lmp_original_to is not None:
            
            _query_params.append(('meterLMPOriginalTo', meter_lmp_original_to))
            
        if meter_lmp_corrected_from is not None:
            
            _query_params.append(('meterLMPCorrectedFrom', meter_lmp_corrected_from))
            
        if meter_lmp_corrected_to is not None:
            
            _query_params.append(('meterLMPCorrectedTo', meter_lmp_corrected_to))
            
        if rtorpa_original_from is not None:
            
            _query_params.append(('RTORPAOriginalFrom', rtorpa_original_from))
            
        if rtorpa_original_to is not None:
            
            _query_params.append(('RTORPAOriginalTo', rtorpa_original_to))
            
        if rtorpa_corrected_from is not None:
            
            _query_params.append(('RTORPACorrectedFrom', rtorpa_corrected_from))
            
        if rtorpa_corrected_to is not None:
            
            _query_params.append(('RTORPACorrectedTo', rtorpa_corrected_to))
            
        if rtordpa_original_from is not None:
            
            _query_params.append(('RTORDPAOriginalFrom', rtordpa_original_from))
            
        if rtordpa_original_to is not None:
            
            _query_params.append(('RTORDPAOriginalTo', rtordpa_original_to))
            
        if rtordpa_corrected_from is not None:
            
            _query_params.append(('RTORDPACorrectedFrom', rtordpa_corrected_from))
            
        if rtordpa_corrected_to is not None:
            
            _query_params.append(('RTORDPACorrectedTo', rtordpa_corrected_to))
            
        if final_lmp_original_from is not None:
            
            _query_params.append(('finalLMPOriginalFrom', final_lmp_original_from))
            
        if final_lmp_original_to is not None:
            
            _query_params.append(('finalLMPOriginalTo', final_lmp_original_to))
            
        if final_lmp_corrected_from is not None:
            
            _query_params.append(('finalLMPCorrectedFrom', final_lmp_corrected_from))
            
        if final_lmp_corrected_to is not None:
            
            _query_params.append(('finalLMPCorrectedTo', final_lmp_corrected_to))
            
        if price_correction_time_from is not None:
            
            _query_params.append(('priceCorrectionTimeFrom', price_correction_time_from))
            
        if price_correction_time_to is not None:
            
            _query_params.append(('priceCorrectionTimeTo', price_correction_time_to))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if dir is not None:
            
            _query_params.append(('dir', dir))
            
        # process the header parameters
        if ocp_apim_subscription_key is not None:
            _header_params['Ocp-Apim-Subscription-Key'] = ocp_apim_subscription_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/np4-197-m/rtm_price_corrections_soglmp',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_data22(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        sced_timestamp_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        sced_timestamp_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        constraint_id_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        constraint_id_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        constraint_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        contingency_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        shadow_price_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        shadow_price_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        shadow_price_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        shadow_price_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        limit_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        limit_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        limit_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        limit_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        value_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        value_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        value_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        value_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Report:
        """RTM Price Corrections for Shadow Prices

        RTM Price Corrections for Shadow Prices

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param sced_timestamp_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_from: str
        :param sced_timestamp_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_to: str
        :param constraint_id_from: Format - ###.
        :type constraint_id_from: int
        :param constraint_id_to: Format - ###.
        :type constraint_id_to: int
        :param constraint_name: Format - abc123.
        :type constraint_name: str
        :param contingency_name: Format - abc123.
        :type contingency_name: str
        :param shadow_price_original_from: Format - ####.###.
        :type shadow_price_original_from: float
        :param shadow_price_original_to: Format - ####.###.
        :type shadow_price_original_to: float
        :param shadow_price_corrected_from: Format - ####.###.
        :type shadow_price_corrected_from: float
        :param shadow_price_corrected_to: Format - ####.###.
        :type shadow_price_corrected_to: float
        :param limit_original_from: Format - ####.###.
        :type limit_original_from: float
        :param limit_original_to: Format - ####.###.
        :type limit_original_to: float
        :param limit_corrected_from: Format - ####.###.
        :type limit_corrected_from: float
        :param limit_corrected_to: Format - ####.###.
        :type limit_corrected_to: float
        :param value_original_from: Format - ####.###.
        :type value_original_from: float
        :param value_original_to: Format - ####.###.
        :type value_original_to: float
        :param value_corrected_from: Format - ####.###.
        :type value_corrected_from: float
        :param value_corrected_to: Format - ####.###.
        :type value_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data22_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            sced_timestamp_from=sced_timestamp_from,
            sced_timestamp_to=sced_timestamp_to,
            constraint_id_from=constraint_id_from,
            constraint_id_to=constraint_id_to,
            constraint_name=constraint_name,
            contingency_name=contingency_name,
            shadow_price_original_from=shadow_price_original_from,
            shadow_price_original_to=shadow_price_original_to,
            shadow_price_corrected_from=shadow_price_corrected_from,
            shadow_price_corrected_to=shadow_price_corrected_to,
            limit_original_from=limit_original_from,
            limit_original_to=limit_original_to,
            limit_corrected_from=limit_corrected_from,
            limit_corrected_to=limit_corrected_to,
            value_original_from=value_original_from,
            value_original_to=value_original_to,
            value_corrected_from=value_corrected_from,
            value_corrected_to=value_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_data22_with_http_info(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        sced_timestamp_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        sced_timestamp_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        constraint_id_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        constraint_id_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        constraint_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        contingency_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        shadow_price_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        shadow_price_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        shadow_price_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        shadow_price_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        limit_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        limit_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        limit_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        limit_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        value_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        value_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        value_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        value_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Report]:
        """RTM Price Corrections for Shadow Prices

        RTM Price Corrections for Shadow Prices

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param sced_timestamp_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_from: str
        :param sced_timestamp_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_to: str
        :param constraint_id_from: Format - ###.
        :type constraint_id_from: int
        :param constraint_id_to: Format - ###.
        :type constraint_id_to: int
        :param constraint_name: Format - abc123.
        :type constraint_name: str
        :param contingency_name: Format - abc123.
        :type contingency_name: str
        :param shadow_price_original_from: Format - ####.###.
        :type shadow_price_original_from: float
        :param shadow_price_original_to: Format - ####.###.
        :type shadow_price_original_to: float
        :param shadow_price_corrected_from: Format - ####.###.
        :type shadow_price_corrected_from: float
        :param shadow_price_corrected_to: Format - ####.###.
        :type shadow_price_corrected_to: float
        :param limit_original_from: Format - ####.###.
        :type limit_original_from: float
        :param limit_original_to: Format - ####.###.
        :type limit_original_to: float
        :param limit_corrected_from: Format - ####.###.
        :type limit_corrected_from: float
        :param limit_corrected_to: Format - ####.###.
        :type limit_corrected_to: float
        :param value_original_from: Format - ####.###.
        :type value_original_from: float
        :param value_original_to: Format - ####.###.
        :type value_original_to: float
        :param value_corrected_from: Format - ####.###.
        :type value_corrected_from: float
        :param value_corrected_to: Format - ####.###.
        :type value_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data22_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            sced_timestamp_from=sced_timestamp_from,
            sced_timestamp_to=sced_timestamp_to,
            constraint_id_from=constraint_id_from,
            constraint_id_to=constraint_id_to,
            constraint_name=constraint_name,
            contingency_name=contingency_name,
            shadow_price_original_from=shadow_price_original_from,
            shadow_price_original_to=shadow_price_original_to,
            shadow_price_corrected_from=shadow_price_corrected_from,
            shadow_price_corrected_to=shadow_price_corrected_to,
            limit_original_from=limit_original_from,
            limit_original_to=limit_original_to,
            limit_corrected_from=limit_corrected_from,
            limit_corrected_to=limit_corrected_to,
            value_original_from=value_original_from,
            value_original_to=value_original_to,
            value_corrected_from=value_corrected_from,
            value_corrected_to=value_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_data22_without_preload_content(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        sced_timestamp_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        sced_timestamp_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        constraint_id_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        constraint_id_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        constraint_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        contingency_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        shadow_price_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        shadow_price_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        shadow_price_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        shadow_price_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        limit_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        limit_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        limit_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        limit_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        value_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        value_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        value_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        value_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """RTM Price Corrections for Shadow Prices

        RTM Price Corrections for Shadow Prices

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param sced_timestamp_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_from: str
        :param sced_timestamp_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_to: str
        :param constraint_id_from: Format - ###.
        :type constraint_id_from: int
        :param constraint_id_to: Format - ###.
        :type constraint_id_to: int
        :param constraint_name: Format - abc123.
        :type constraint_name: str
        :param contingency_name: Format - abc123.
        :type contingency_name: str
        :param shadow_price_original_from: Format - ####.###.
        :type shadow_price_original_from: float
        :param shadow_price_original_to: Format - ####.###.
        :type shadow_price_original_to: float
        :param shadow_price_corrected_from: Format - ####.###.
        :type shadow_price_corrected_from: float
        :param shadow_price_corrected_to: Format - ####.###.
        :type shadow_price_corrected_to: float
        :param limit_original_from: Format - ####.###.
        :type limit_original_from: float
        :param limit_original_to: Format - ####.###.
        :type limit_original_to: float
        :param limit_corrected_from: Format - ####.###.
        :type limit_corrected_from: float
        :param limit_corrected_to: Format - ####.###.
        :type limit_corrected_to: float
        :param value_original_from: Format - ####.###.
        :type value_original_from: float
        :param value_original_to: Format - ####.###.
        :type value_original_to: float
        :param value_corrected_from: Format - ####.###.
        :type value_corrected_from: float
        :param value_corrected_to: Format - ####.###.
        :type value_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data22_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            sced_timestamp_from=sced_timestamp_from,
            sced_timestamp_to=sced_timestamp_to,
            constraint_id_from=constraint_id_from,
            constraint_id_to=constraint_id_to,
            constraint_name=constraint_name,
            contingency_name=contingency_name,
            shadow_price_original_from=shadow_price_original_from,
            shadow_price_original_to=shadow_price_original_to,
            shadow_price_corrected_from=shadow_price_corrected_from,
            shadow_price_corrected_to=shadow_price_corrected_to,
            limit_original_from=limit_original_from,
            limit_original_to=limit_original_to,
            limit_corrected_from=limit_corrected_from,
            limit_corrected_to=limit_corrected_to,
            value_original_from=value_original_from,
            value_original_to=value_original_to,
            value_corrected_from=value_corrected_from,
            value_corrected_to=value_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_data22_serialize(
        self,
        ocp_apim_subscription_key,
        sced_timestamp_from,
        sced_timestamp_to,
        constraint_id_from,
        constraint_id_to,
        constraint_name,
        contingency_name,
        shadow_price_original_from,
        shadow_price_original_to,
        shadow_price_corrected_from,
        shadow_price_corrected_to,
        limit_original_from,
        limit_original_to,
        limit_corrected_from,
        limit_corrected_to,
        value_original_from,
        value_original_to,
        value_corrected_from,
        value_corrected_to,
        price_correction_time_from,
        price_correction_time_to,
        dst_flag,
        page,
        size,
        sort,
        dir,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if sced_timestamp_from is not None:
            
            _query_params.append(('SCEDTimestampFrom', sced_timestamp_from))
            
        if sced_timestamp_to is not None:
            
            _query_params.append(('SCEDTimestampTo', sced_timestamp_to))
            
        if constraint_id_from is not None:
            
            _query_params.append(('constraintIdFrom', constraint_id_from))
            
        if constraint_id_to is not None:
            
            _query_params.append(('constraintIdTo', constraint_id_to))
            
        if constraint_name is not None:
            
            _query_params.append(('constraintName', constraint_name))
            
        if contingency_name is not None:
            
            _query_params.append(('contingencyName', contingency_name))
            
        if shadow_price_original_from is not None:
            
            _query_params.append(('shadowPriceOriginalFrom', shadow_price_original_from))
            
        if shadow_price_original_to is not None:
            
            _query_params.append(('shadowPriceOriginalTo', shadow_price_original_to))
            
        if shadow_price_corrected_from is not None:
            
            _query_params.append(('shadowPriceCorrectedFrom', shadow_price_corrected_from))
            
        if shadow_price_corrected_to is not None:
            
            _query_params.append(('shadowPriceCorrectedTo', shadow_price_corrected_to))
            
        if limit_original_from is not None:
            
            _query_params.append(('limitOriginalFrom', limit_original_from))
            
        if limit_original_to is not None:
            
            _query_params.append(('limitOriginalTo', limit_original_to))
            
        if limit_corrected_from is not None:
            
            _query_params.append(('limitCorrectedFrom', limit_corrected_from))
            
        if limit_corrected_to is not None:
            
            _query_params.append(('limitCorrectedTo', limit_corrected_to))
            
        if value_original_from is not None:
            
            _query_params.append(('valueOriginalFrom', value_original_from))
            
        if value_original_to is not None:
            
            _query_params.append(('valueOriginalTo', value_original_to))
            
        if value_corrected_from is not None:
            
            _query_params.append(('valueCorrectedFrom', value_corrected_from))
            
        if value_corrected_to is not None:
            
            _query_params.append(('valueCorrectedTo', value_corrected_to))
            
        if price_correction_time_from is not None:
            
            _query_params.append(('priceCorrectionTimeFrom', price_correction_time_from))
            
        if price_correction_time_to is not None:
            
            _query_params.append(('priceCorrectionTimeTo', price_correction_time_to))
            
        if dst_flag is not None:
            
            _query_params.append(('DSTFlag', dst_flag))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if dir is not None:
            
            _query_params.append(('dir', dir))
            
        # process the header parameters
        if ocp_apim_subscription_key is not None:
            _header_params['Ocp-Apim-Subscription-Key'] = ocp_apim_subscription_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/np4-197-m/rtm_price_corrections_shadow',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_data23(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        lmp_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        sced_timestamp_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        sced_timestamp_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        electrical_bus: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        lmp_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Report:
        """RTM Price Corrections for EB LMP

        RTM Price Corrections for EB LMP

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param lmp_corrected_from: Format - ####.###.
        :type lmp_corrected_from: float
        :param lmp_corrected_to: Format - ####.###.
        :type lmp_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param sced_timestamp_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_from: str
        :param sced_timestamp_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_to: str
        :param electrical_bus: Format - abc123.
        :type electrical_bus: str
        :param lmp_original_from: Format - ####.###.
        :type lmp_original_from: float
        :param lmp_original_to: Format - ####.###.
        :type lmp_original_to: float
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data23_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            lmp_corrected_from=lmp_corrected_from,
            lmp_corrected_to=lmp_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            sced_timestamp_from=sced_timestamp_from,
            sced_timestamp_to=sced_timestamp_to,
            electrical_bus=electrical_bus,
            lmp_original_from=lmp_original_from,
            lmp_original_to=lmp_original_to,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_data23_with_http_info(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        lmp_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        sced_timestamp_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        sced_timestamp_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        electrical_bus: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        lmp_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Report]:
        """RTM Price Corrections for EB LMP

        RTM Price Corrections for EB LMP

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param lmp_corrected_from: Format - ####.###.
        :type lmp_corrected_from: float
        :param lmp_corrected_to: Format - ####.###.
        :type lmp_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param sced_timestamp_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_from: str
        :param sced_timestamp_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_to: str
        :param electrical_bus: Format - abc123.
        :type electrical_bus: str
        :param lmp_original_from: Format - ####.###.
        :type lmp_original_from: float
        :param lmp_original_to: Format - ####.###.
        :type lmp_original_to: float
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data23_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            lmp_corrected_from=lmp_corrected_from,
            lmp_corrected_to=lmp_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            sced_timestamp_from=sced_timestamp_from,
            sced_timestamp_to=sced_timestamp_to,
            electrical_bus=electrical_bus,
            lmp_original_from=lmp_original_from,
            lmp_original_to=lmp_original_to,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_data23_without_preload_content(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        lmp_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        sced_timestamp_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        sced_timestamp_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        electrical_bus: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        lmp_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """RTM Price Corrections for EB LMP

        RTM Price Corrections for EB LMP

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param lmp_corrected_from: Format - ####.###.
        :type lmp_corrected_from: float
        :param lmp_corrected_to: Format - ####.###.
        :type lmp_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param sced_timestamp_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_from: str
        :param sced_timestamp_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type sced_timestamp_to: str
        :param electrical_bus: Format - abc123.
        :type electrical_bus: str
        :param lmp_original_from: Format - ####.###.
        :type lmp_original_from: float
        :param lmp_original_to: Format - ####.###.
        :type lmp_original_to: float
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data23_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            lmp_corrected_from=lmp_corrected_from,
            lmp_corrected_to=lmp_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            sced_timestamp_from=sced_timestamp_from,
            sced_timestamp_to=sced_timestamp_to,
            electrical_bus=electrical_bus,
            lmp_original_from=lmp_original_from,
            lmp_original_to=lmp_original_to,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_data23_serialize(
        self,
        ocp_apim_subscription_key,
        lmp_corrected_from,
        lmp_corrected_to,
        price_correction_time_from,
        price_correction_time_to,
        dst_flag,
        sced_timestamp_from,
        sced_timestamp_to,
        electrical_bus,
        lmp_original_from,
        lmp_original_to,
        page,
        size,
        sort,
        dir,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if lmp_corrected_from is not None:
            
            _query_params.append(('LMPCorrectedFrom', lmp_corrected_from))
            
        if lmp_corrected_to is not None:
            
            _query_params.append(('LMPCorrectedTo', lmp_corrected_to))
            
        if price_correction_time_from is not None:
            
            _query_params.append(('priceCorrectionTimeFrom', price_correction_time_from))
            
        if price_correction_time_to is not None:
            
            _query_params.append(('priceCorrectionTimeTo', price_correction_time_to))
            
        if dst_flag is not None:
            
            _query_params.append(('DSTFlag', dst_flag))
            
        if sced_timestamp_from is not None:
            
            _query_params.append(('SCEDTimestampFrom', sced_timestamp_from))
            
        if sced_timestamp_to is not None:
            
            _query_params.append(('SCEDTimestampTo', sced_timestamp_to))
            
        if electrical_bus is not None:
            
            _query_params.append(('electricalBus', electrical_bus))
            
        if lmp_original_from is not None:
            
            _query_params.append(('LMPOriginalFrom', lmp_original_from))
            
        if lmp_original_to is not None:
            
            _query_params.append(('LMPOriginalTo', lmp_original_to))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if dir is not None:
            
            _query_params.append(('dir', dir))
            
        # process the header parameters
        if ocp_apim_subscription_key is not None:
            _header_params['Ocp-Apim-Subscription-Key'] = ocp_apim_subscription_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/np4-197-m/rtm_price_corrections_eblmp',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


