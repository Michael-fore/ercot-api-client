# coding: utf-8

"""
    ERCOT Public API Client/Developer Documentation

    Client/Developer RESTFul web services documentation for ERCOT Market Information List (EMIL) products.

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictBool, StrictFloat, StrictInt, StrictStr
from typing import Optional, Union
from typing_extensions import Annotated
from openapi_client.models.report import Report

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class NP3966ERApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def get_data38(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        total_self_arranged_asrrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asrrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        hour_ending_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        hour_ending_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        total_self_arranged_asregup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asregupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asregdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asregdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asnspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asnspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asnspnm_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asnspnmto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asrrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asrrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asrrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asrrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Report:
        """60 Day DAM QSE Self Arranged AS

        60 Day DAM QSE Self Arranged AS

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param total_self_arranged_asrrsufr_from: Format - ####.###.
        :type total_self_arranged_asrrsufr_from: float
        :param total_self_arranged_asrrsufrto: Format - ####.###.
        :type total_self_arranged_asrrsufrto: float
        :param delivery_date_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type delivery_date_to: str
        :param hour_ending_from: Format - ###.
        :type hour_ending_from: int
        :param hour_ending_to: Format - ###.
        :type hour_ending_to: int
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param total_self_arranged_asregup_from: Format - ####.###.
        :type total_self_arranged_asregup_from: float
        :param total_self_arranged_asregupto: Format - ####.###.
        :type total_self_arranged_asregupto: float
        :param total_self_arranged_asregdn_from: Format - ####.###.
        :type total_self_arranged_asregdn_from: float
        :param total_self_arranged_asregdnto: Format - ####.###.
        :type total_self_arranged_asregdnto: float
        :param total_self_arranged_asnspin_from: Format - ####.###.
        :type total_self_arranged_asnspin_from: float
        :param total_self_arranged_asnspinto: Format - ####.###.
        :type total_self_arranged_asnspinto: float
        :param total_self_arranged_asnspnm_from: Format - ####.###.
        :type total_self_arranged_asnspnm_from: float
        :param total_self_arranged_asnspnmto: Format - ####.###.
        :type total_self_arranged_asnspnmto: float
        :param total_self_arranged_asrrspfr_from: Format - ####.###.
        :type total_self_arranged_asrrspfr_from: float
        :param total_self_arranged_asrrspfrto: Format - ####.###.
        :type total_self_arranged_asrrspfrto: float
        :param total_self_arranged_asrrsffr_from: Format - ####.###.
        :type total_self_arranged_asrrsffr_from: float
        :param total_self_arranged_asrrsffrto: Format - ####.###.
        :type total_self_arranged_asrrsffrto: float
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data38_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            total_self_arranged_asrrsufr_from=total_self_arranged_asrrsufr_from,
            total_self_arranged_asrrsufrto=total_self_arranged_asrrsufrto,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            total_self_arranged_asregup_from=total_self_arranged_asregup_from,
            total_self_arranged_asregupto=total_self_arranged_asregupto,
            total_self_arranged_asregdn_from=total_self_arranged_asregdn_from,
            total_self_arranged_asregdnto=total_self_arranged_asregdnto,
            total_self_arranged_asnspin_from=total_self_arranged_asnspin_from,
            total_self_arranged_asnspinto=total_self_arranged_asnspinto,
            total_self_arranged_asnspnm_from=total_self_arranged_asnspnm_from,
            total_self_arranged_asnspnmto=total_self_arranged_asnspnmto,
            total_self_arranged_asrrspfr_from=total_self_arranged_asrrspfr_from,
            total_self_arranged_asrrspfrto=total_self_arranged_asrrspfrto,
            total_self_arranged_asrrsffr_from=total_self_arranged_asrrsffr_from,
            total_self_arranged_asrrsffrto=total_self_arranged_asrrsffrto,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_data38_with_http_info(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        total_self_arranged_asrrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asrrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        hour_ending_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        hour_ending_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        total_self_arranged_asregup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asregupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asregdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asregdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asnspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asnspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asnspnm_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asnspnmto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asrrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asrrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asrrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asrrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Report]:
        """60 Day DAM QSE Self Arranged AS

        60 Day DAM QSE Self Arranged AS

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param total_self_arranged_asrrsufr_from: Format - ####.###.
        :type total_self_arranged_asrrsufr_from: float
        :param total_self_arranged_asrrsufrto: Format - ####.###.
        :type total_self_arranged_asrrsufrto: float
        :param delivery_date_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type delivery_date_to: str
        :param hour_ending_from: Format - ###.
        :type hour_ending_from: int
        :param hour_ending_to: Format - ###.
        :type hour_ending_to: int
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param total_self_arranged_asregup_from: Format - ####.###.
        :type total_self_arranged_asregup_from: float
        :param total_self_arranged_asregupto: Format - ####.###.
        :type total_self_arranged_asregupto: float
        :param total_self_arranged_asregdn_from: Format - ####.###.
        :type total_self_arranged_asregdn_from: float
        :param total_self_arranged_asregdnto: Format - ####.###.
        :type total_self_arranged_asregdnto: float
        :param total_self_arranged_asnspin_from: Format - ####.###.
        :type total_self_arranged_asnspin_from: float
        :param total_self_arranged_asnspinto: Format - ####.###.
        :type total_self_arranged_asnspinto: float
        :param total_self_arranged_asnspnm_from: Format - ####.###.
        :type total_self_arranged_asnspnm_from: float
        :param total_self_arranged_asnspnmto: Format - ####.###.
        :type total_self_arranged_asnspnmto: float
        :param total_self_arranged_asrrspfr_from: Format - ####.###.
        :type total_self_arranged_asrrspfr_from: float
        :param total_self_arranged_asrrspfrto: Format - ####.###.
        :type total_self_arranged_asrrspfrto: float
        :param total_self_arranged_asrrsffr_from: Format - ####.###.
        :type total_self_arranged_asrrsffr_from: float
        :param total_self_arranged_asrrsffrto: Format - ####.###.
        :type total_self_arranged_asrrsffrto: float
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data38_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            total_self_arranged_asrrsufr_from=total_self_arranged_asrrsufr_from,
            total_self_arranged_asrrsufrto=total_self_arranged_asrrsufrto,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            total_self_arranged_asregup_from=total_self_arranged_asregup_from,
            total_self_arranged_asregupto=total_self_arranged_asregupto,
            total_self_arranged_asregdn_from=total_self_arranged_asregdn_from,
            total_self_arranged_asregdnto=total_self_arranged_asregdnto,
            total_self_arranged_asnspin_from=total_self_arranged_asnspin_from,
            total_self_arranged_asnspinto=total_self_arranged_asnspinto,
            total_self_arranged_asnspnm_from=total_self_arranged_asnspnm_from,
            total_self_arranged_asnspnmto=total_self_arranged_asnspnmto,
            total_self_arranged_asrrspfr_from=total_self_arranged_asrrspfr_from,
            total_self_arranged_asrrspfrto=total_self_arranged_asrrspfrto,
            total_self_arranged_asrrsffr_from=total_self_arranged_asrrsffr_from,
            total_self_arranged_asrrsffrto=total_self_arranged_asrrsffrto,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_data38_without_preload_content(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        total_self_arranged_asrrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asrrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        hour_ending_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        hour_ending_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        total_self_arranged_asregup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asregupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asregdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asregdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asnspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asnspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asnspnm_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asnspnmto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asrrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asrrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asrrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        total_self_arranged_asrrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """60 Day DAM QSE Self Arranged AS

        60 Day DAM QSE Self Arranged AS

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param total_self_arranged_asrrsufr_from: Format - ####.###.
        :type total_self_arranged_asrrsufr_from: float
        :param total_self_arranged_asrrsufrto: Format - ####.###.
        :type total_self_arranged_asrrsufrto: float
        :param delivery_date_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type delivery_date_to: str
        :param hour_ending_from: Format - ###.
        :type hour_ending_from: int
        :param hour_ending_to: Format - ###.
        :type hour_ending_to: int
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param total_self_arranged_asregup_from: Format - ####.###.
        :type total_self_arranged_asregup_from: float
        :param total_self_arranged_asregupto: Format - ####.###.
        :type total_self_arranged_asregupto: float
        :param total_self_arranged_asregdn_from: Format - ####.###.
        :type total_self_arranged_asregdn_from: float
        :param total_self_arranged_asregdnto: Format - ####.###.
        :type total_self_arranged_asregdnto: float
        :param total_self_arranged_asnspin_from: Format - ####.###.
        :type total_self_arranged_asnspin_from: float
        :param total_self_arranged_asnspinto: Format - ####.###.
        :type total_self_arranged_asnspinto: float
        :param total_self_arranged_asnspnm_from: Format - ####.###.
        :type total_self_arranged_asnspnm_from: float
        :param total_self_arranged_asnspnmto: Format - ####.###.
        :type total_self_arranged_asnspnmto: float
        :param total_self_arranged_asrrspfr_from: Format - ####.###.
        :type total_self_arranged_asrrspfr_from: float
        :param total_self_arranged_asrrspfrto: Format - ####.###.
        :type total_self_arranged_asrrspfrto: float
        :param total_self_arranged_asrrsffr_from: Format - ####.###.
        :type total_self_arranged_asrrsffr_from: float
        :param total_self_arranged_asrrsffrto: Format - ####.###.
        :type total_self_arranged_asrrsffrto: float
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data38_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            total_self_arranged_asrrsufr_from=total_self_arranged_asrrsufr_from,
            total_self_arranged_asrrsufrto=total_self_arranged_asrrsufrto,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            total_self_arranged_asregup_from=total_self_arranged_asregup_from,
            total_self_arranged_asregupto=total_self_arranged_asregupto,
            total_self_arranged_asregdn_from=total_self_arranged_asregdn_from,
            total_self_arranged_asregdnto=total_self_arranged_asregdnto,
            total_self_arranged_asnspin_from=total_self_arranged_asnspin_from,
            total_self_arranged_asnspinto=total_self_arranged_asnspinto,
            total_self_arranged_asnspnm_from=total_self_arranged_asnspnm_from,
            total_self_arranged_asnspnmto=total_self_arranged_asnspnmto,
            total_self_arranged_asrrspfr_from=total_self_arranged_asrrspfr_from,
            total_self_arranged_asrrspfrto=total_self_arranged_asrrspfrto,
            total_self_arranged_asrrsffr_from=total_self_arranged_asrrsffr_from,
            total_self_arranged_asrrsffrto=total_self_arranged_asrrsffrto,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_data38_serialize(
        self,
        ocp_apim_subscription_key,
        total_self_arranged_asrrsufr_from,
        total_self_arranged_asrrsufrto,
        delivery_date_from,
        delivery_date_to,
        hour_ending_from,
        hour_ending_to,
        qse_name,
        total_self_arranged_asregup_from,
        total_self_arranged_asregupto,
        total_self_arranged_asregdn_from,
        total_self_arranged_asregdnto,
        total_self_arranged_asnspin_from,
        total_self_arranged_asnspinto,
        total_self_arranged_asnspnm_from,
        total_self_arranged_asnspnmto,
        total_self_arranged_asrrspfr_from,
        total_self_arranged_asrrspfrto,
        total_self_arranged_asrrsffr_from,
        total_self_arranged_asrrsffrto,
        page,
        size,
        sort,
        dir,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if total_self_arranged_asrrsufr_from is not None:
            
            _query_params.append(('totalSelfArrangedASRRSUFRFrom', total_self_arranged_asrrsufr_from))
            
        if total_self_arranged_asrrsufrto is not None:
            
            _query_params.append(('totalSelfArrangedASRRSUFRTo', total_self_arranged_asrrsufrto))
            
        if delivery_date_from is not None:
            
            _query_params.append(('deliveryDateFrom', delivery_date_from))
            
        if delivery_date_to is not None:
            
            _query_params.append(('deliveryDateTo', delivery_date_to))
            
        if hour_ending_from is not None:
            
            _query_params.append(('hourEndingFrom', hour_ending_from))
            
        if hour_ending_to is not None:
            
            _query_params.append(('hourEndingTo', hour_ending_to))
            
        if qse_name is not None:
            
            _query_params.append(('qseName', qse_name))
            
        if total_self_arranged_asregup_from is not None:
            
            _query_params.append(('totalSelfArrangedASREGUPFrom', total_self_arranged_asregup_from))
            
        if total_self_arranged_asregupto is not None:
            
            _query_params.append(('totalSelfArrangedASREGUPTo', total_self_arranged_asregupto))
            
        if total_self_arranged_asregdn_from is not None:
            
            _query_params.append(('totalSelfArrangedASREGDNFrom', total_self_arranged_asregdn_from))
            
        if total_self_arranged_asregdnto is not None:
            
            _query_params.append(('totalSelfArrangedASREGDNTo', total_self_arranged_asregdnto))
            
        if total_self_arranged_asnspin_from is not None:
            
            _query_params.append(('totalSelfArrangedASNSPINFrom', total_self_arranged_asnspin_from))
            
        if total_self_arranged_asnspinto is not None:
            
            _query_params.append(('totalSelfArrangedASNSPINTo', total_self_arranged_asnspinto))
            
        if total_self_arranged_asnspnm_from is not None:
            
            _query_params.append(('totalSelfArrangedASNSPNMFrom', total_self_arranged_asnspnm_from))
            
        if total_self_arranged_asnspnmto is not None:
            
            _query_params.append(('totalSelfArrangedASNSPNMTo', total_self_arranged_asnspnmto))
            
        if total_self_arranged_asrrspfr_from is not None:
            
            _query_params.append(('totalSelfArrangedASRRSPFRFrom', total_self_arranged_asrrspfr_from))
            
        if total_self_arranged_asrrspfrto is not None:
            
            _query_params.append(('totalSelfArrangedASRRSPFRTo', total_self_arranged_asrrspfrto))
            
        if total_self_arranged_asrrsffr_from is not None:
            
            _query_params.append(('totalSelfArrangedASRRSFFRFrom', total_self_arranged_asrrsffr_from))
            
        if total_self_arranged_asrrsffrto is not None:
            
            _query_params.append(('totalSelfArrangedASRRSFFRTo', total_self_arranged_asrrsffrto))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if dir is not None:
            
            _query_params.append(('dir', dir))
            
        # process the header parameters
        if ocp_apim_subscription_key is not None:
            _header_params['Ocp-Apim-Subscription-Key'] = ocp_apim_subscription_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/np3-966-er/60_dam_qse_self_as',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_data39(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_source: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_sink: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        mw_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        mwto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        offer_id: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        crrid: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Report:
        """60 Day DAM PTP Obligation Option Awards

        60 Day DAM PTP Obligation Option Awards

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param settlement_point_source: Format - abc123.
        :type settlement_point_source: str
        :param settlement_point_sink: Format - abc123.
        :type settlement_point_sink: str
        :param mw_from: Format - ####.###.
        :type mw_from: float
        :param mwto: Format - ####.###.
        :type mwto: float
        :param price_from: Format - ####.###.
        :type price_from: float
        :param price_to: Format - ####.###.
        :type price_to: float
        :param offer_id: Format - abc123.
        :type offer_id: str
        :param crrid: Format - abc123.
        :type crrid: str
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data39_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            settlement_point_source=settlement_point_source,
            settlement_point_sink=settlement_point_sink,
            mw_from=mw_from,
            mwto=mwto,
            price_from=price_from,
            price_to=price_to,
            offer_id=offer_id,
            crrid=crrid,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_data39_with_http_info(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_source: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_sink: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        mw_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        mwto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        offer_id: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        crrid: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Report]:
        """60 Day DAM PTP Obligation Option Awards

        60 Day DAM PTP Obligation Option Awards

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param settlement_point_source: Format - abc123.
        :type settlement_point_source: str
        :param settlement_point_sink: Format - abc123.
        :type settlement_point_sink: str
        :param mw_from: Format - ####.###.
        :type mw_from: float
        :param mwto: Format - ####.###.
        :type mwto: float
        :param price_from: Format - ####.###.
        :type price_from: float
        :param price_to: Format - ####.###.
        :type price_to: float
        :param offer_id: Format - abc123.
        :type offer_id: str
        :param crrid: Format - abc123.
        :type crrid: str
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data39_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            settlement_point_source=settlement_point_source,
            settlement_point_sink=settlement_point_sink,
            mw_from=mw_from,
            mwto=mwto,
            price_from=price_from,
            price_to=price_to,
            offer_id=offer_id,
            crrid=crrid,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_data39_without_preload_content(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_source: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_sink: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        mw_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        mwto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        offer_id: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        crrid: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """60 Day DAM PTP Obligation Option Awards

        60 Day DAM PTP Obligation Option Awards

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param settlement_point_source: Format - abc123.
        :type settlement_point_source: str
        :param settlement_point_sink: Format - abc123.
        :type settlement_point_sink: str
        :param mw_from: Format - ####.###.
        :type mw_from: float
        :param mwto: Format - ####.###.
        :type mwto: float
        :param price_from: Format - ####.###.
        :type price_from: float
        :param price_to: Format - ####.###.
        :type price_to: float
        :param offer_id: Format - abc123.
        :type offer_id: str
        :param crrid: Format - abc123.
        :type crrid: str
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data39_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            settlement_point_source=settlement_point_source,
            settlement_point_sink=settlement_point_sink,
            mw_from=mw_from,
            mwto=mwto,
            price_from=price_from,
            price_to=price_to,
            offer_id=offer_id,
            crrid=crrid,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_data39_serialize(
        self,
        ocp_apim_subscription_key,
        delivery_date_from,
        delivery_date_to,
        hour_ending_from,
        hour_ending_to,
        qse_name,
        settlement_point_source,
        settlement_point_sink,
        mw_from,
        mwto,
        price_from,
        price_to,
        offer_id,
        crrid,
        page,
        size,
        sort,
        dir,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if delivery_date_from is not None:
            
            _query_params.append(('deliveryDateFrom', delivery_date_from))
            
        if delivery_date_to is not None:
            
            _query_params.append(('deliveryDateTo', delivery_date_to))
            
        if hour_ending_from is not None:
            
            _query_params.append(('hourEndingFrom', hour_ending_from))
            
        if hour_ending_to is not None:
            
            _query_params.append(('hourEndingTo', hour_ending_to))
            
        if qse_name is not None:
            
            _query_params.append(('qseName', qse_name))
            
        if settlement_point_source is not None:
            
            _query_params.append(('settlementPointSource', settlement_point_source))
            
        if settlement_point_sink is not None:
            
            _query_params.append(('settlementPointSink', settlement_point_sink))
            
        if mw_from is not None:
            
            _query_params.append(('MWFrom', mw_from))
            
        if mwto is not None:
            
            _query_params.append(('MWTo', mwto))
            
        if price_from is not None:
            
            _query_params.append(('priceFrom', price_from))
            
        if price_to is not None:
            
            _query_params.append(('priceTo', price_to))
            
        if offer_id is not None:
            
            _query_params.append(('offerId', offer_id))
            
        if crrid is not None:
            
            _query_params.append(('CRRId', crrid))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if dir is not None:
            
            _query_params.append(('dir', dir))
            
        # process the header parameters
        if ocp_apim_subscription_key is not None:
            _header_params['Ocp-Apim-Subscription-Key'] = ocp_apim_subscription_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/np3-966-er/60_dam_ptp_obl_opt_awards',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_data40(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_source: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_sink: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        mw_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        mwto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        price_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        offer_id: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        multi_hour_block: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        crrid_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        crrid_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Report:
        """60 Day DAM PTP Obligation Option

        60 Day DAM PTP Obligation Option

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param settlement_point_source: Format - abc123.
        :type settlement_point_source: str
        :param settlement_point_sink: Format - abc123.
        :type settlement_point_sink: str
        :param mw_from: Format - ####.###.
        :type mw_from: float
        :param mwto: Format - ####.###.
        :type mwto: float
        :param price_from: Format - ###.
        :type price_from: int
        :param price_to: Format - ###.
        :type price_to: int
        :param offer_id: Format - abc123.
        :type offer_id: str
        :param multi_hour_block: Format - true | false.
        :type multi_hour_block: bool
        :param crrid_from: Format - ###.
        :type crrid_from: int
        :param crrid_to: Format - ###.
        :type crrid_to: int
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data40_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            settlement_point_source=settlement_point_source,
            settlement_point_sink=settlement_point_sink,
            mw_from=mw_from,
            mwto=mwto,
            price_from=price_from,
            price_to=price_to,
            offer_id=offer_id,
            multi_hour_block=multi_hour_block,
            crrid_from=crrid_from,
            crrid_to=crrid_to,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_data40_with_http_info(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_source: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_sink: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        mw_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        mwto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        price_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        offer_id: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        multi_hour_block: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        crrid_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        crrid_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Report]:
        """60 Day DAM PTP Obligation Option

        60 Day DAM PTP Obligation Option

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param settlement_point_source: Format - abc123.
        :type settlement_point_source: str
        :param settlement_point_sink: Format - abc123.
        :type settlement_point_sink: str
        :param mw_from: Format - ####.###.
        :type mw_from: float
        :param mwto: Format - ####.###.
        :type mwto: float
        :param price_from: Format - ###.
        :type price_from: int
        :param price_to: Format - ###.
        :type price_to: int
        :param offer_id: Format - abc123.
        :type offer_id: str
        :param multi_hour_block: Format - true | false.
        :type multi_hour_block: bool
        :param crrid_from: Format - ###.
        :type crrid_from: int
        :param crrid_to: Format - ###.
        :type crrid_to: int
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data40_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            settlement_point_source=settlement_point_source,
            settlement_point_sink=settlement_point_sink,
            mw_from=mw_from,
            mwto=mwto,
            price_from=price_from,
            price_to=price_to,
            offer_id=offer_id,
            multi_hour_block=multi_hour_block,
            crrid_from=crrid_from,
            crrid_to=crrid_to,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_data40_without_preload_content(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_source: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_sink: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        mw_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        mwto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        price_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        offer_id: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        multi_hour_block: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        crrid_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        crrid_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """60 Day DAM PTP Obligation Option

        60 Day DAM PTP Obligation Option

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param settlement_point_source: Format - abc123.
        :type settlement_point_source: str
        :param settlement_point_sink: Format - abc123.
        :type settlement_point_sink: str
        :param mw_from: Format - ####.###.
        :type mw_from: float
        :param mwto: Format - ####.###.
        :type mwto: float
        :param price_from: Format - ###.
        :type price_from: int
        :param price_to: Format - ###.
        :type price_to: int
        :param offer_id: Format - abc123.
        :type offer_id: str
        :param multi_hour_block: Format - true | false.
        :type multi_hour_block: bool
        :param crrid_from: Format - ###.
        :type crrid_from: int
        :param crrid_to: Format - ###.
        :type crrid_to: int
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data40_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            settlement_point_source=settlement_point_source,
            settlement_point_sink=settlement_point_sink,
            mw_from=mw_from,
            mwto=mwto,
            price_from=price_from,
            price_to=price_to,
            offer_id=offer_id,
            multi_hour_block=multi_hour_block,
            crrid_from=crrid_from,
            crrid_to=crrid_to,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_data40_serialize(
        self,
        ocp_apim_subscription_key,
        delivery_date_from,
        delivery_date_to,
        hour_ending_from,
        hour_ending_to,
        qse_name,
        settlement_point_source,
        settlement_point_sink,
        mw_from,
        mwto,
        price_from,
        price_to,
        offer_id,
        multi_hour_block,
        crrid_from,
        crrid_to,
        page,
        size,
        sort,
        dir,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if delivery_date_from is not None:
            
            _query_params.append(('deliveryDateFrom', delivery_date_from))
            
        if delivery_date_to is not None:
            
            _query_params.append(('deliveryDateTo', delivery_date_to))
            
        if hour_ending_from is not None:
            
            _query_params.append(('hourEndingFrom', hour_ending_from))
            
        if hour_ending_to is not None:
            
            _query_params.append(('hourEndingTo', hour_ending_to))
            
        if qse_name is not None:
            
            _query_params.append(('qseName', qse_name))
            
        if settlement_point_source is not None:
            
            _query_params.append(('settlementPointSource', settlement_point_source))
            
        if settlement_point_sink is not None:
            
            _query_params.append(('settlementPointSink', settlement_point_sink))
            
        if mw_from is not None:
            
            _query_params.append(('MWFrom', mw_from))
            
        if mwto is not None:
            
            _query_params.append(('MWTo', mwto))
            
        if price_from is not None:
            
            _query_params.append(('priceFrom', price_from))
            
        if price_to is not None:
            
            _query_params.append(('priceTo', price_to))
            
        if offer_id is not None:
            
            _query_params.append(('offerId', offer_id))
            
        if multi_hour_block is not None:
            
            _query_params.append(('multiHourBlock', multi_hour_block))
            
        if crrid_from is not None:
            
            _query_params.append(('CRRIdFrom', crrid_from))
            
        if crrid_to is not None:
            
            _query_params.append(('CRRIdTo', crrid_to))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if dir is not None:
            
            _query_params.append(('dir', dir))
            
        # process the header parameters
        if ocp_apim_subscription_key is not None:
            _header_params['Ocp-Apim-Subscription-Key'] = ocp_apim_subscription_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/np3-966-er/60_dam_ptp_obl_opt',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_data41(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_source: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_sink: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        ptp_bid_mw_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        ptp_bid_mwto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        ptp_bid_price_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        ptp_bid_price_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        bid_id: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        multi_hour_block: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Report:
        """60 Day DAM PTP Obligation Bids

        60 Day DAM PTP Obligation Bids

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param settlement_point_source: Format - abc123.
        :type settlement_point_source: str
        :param settlement_point_sink: Format - abc123.
        :type settlement_point_sink: str
        :param ptp_bid_mw_from: Format - ####.###.
        :type ptp_bid_mw_from: float
        :param ptp_bid_mwto: Format - ####.###.
        :type ptp_bid_mwto: float
        :param ptp_bid_price_from: Format - ####.###.
        :type ptp_bid_price_from: float
        :param ptp_bid_price_to: Format - ####.###.
        :type ptp_bid_price_to: float
        :param bid_id: Format - abc123.
        :type bid_id: str
        :param multi_hour_block: Format - true | false.
        :type multi_hour_block: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data41_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            settlement_point_source=settlement_point_source,
            settlement_point_sink=settlement_point_sink,
            ptp_bid_mw_from=ptp_bid_mw_from,
            ptp_bid_mwto=ptp_bid_mwto,
            ptp_bid_price_from=ptp_bid_price_from,
            ptp_bid_price_to=ptp_bid_price_to,
            bid_id=bid_id,
            multi_hour_block=multi_hour_block,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_data41_with_http_info(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_source: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_sink: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        ptp_bid_mw_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        ptp_bid_mwto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        ptp_bid_price_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        ptp_bid_price_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        bid_id: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        multi_hour_block: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Report]:
        """60 Day DAM PTP Obligation Bids

        60 Day DAM PTP Obligation Bids

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param settlement_point_source: Format - abc123.
        :type settlement_point_source: str
        :param settlement_point_sink: Format - abc123.
        :type settlement_point_sink: str
        :param ptp_bid_mw_from: Format - ####.###.
        :type ptp_bid_mw_from: float
        :param ptp_bid_mwto: Format - ####.###.
        :type ptp_bid_mwto: float
        :param ptp_bid_price_from: Format - ####.###.
        :type ptp_bid_price_from: float
        :param ptp_bid_price_to: Format - ####.###.
        :type ptp_bid_price_to: float
        :param bid_id: Format - abc123.
        :type bid_id: str
        :param multi_hour_block: Format - true | false.
        :type multi_hour_block: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data41_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            settlement_point_source=settlement_point_source,
            settlement_point_sink=settlement_point_sink,
            ptp_bid_mw_from=ptp_bid_mw_from,
            ptp_bid_mwto=ptp_bid_mwto,
            ptp_bid_price_from=ptp_bid_price_from,
            ptp_bid_price_to=ptp_bid_price_to,
            bid_id=bid_id,
            multi_hour_block=multi_hour_block,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_data41_without_preload_content(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_source: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_sink: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        ptp_bid_mw_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        ptp_bid_mwto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        ptp_bid_price_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        ptp_bid_price_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        bid_id: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        multi_hour_block: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """60 Day DAM PTP Obligation Bids

        60 Day DAM PTP Obligation Bids

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param settlement_point_source: Format - abc123.
        :type settlement_point_source: str
        :param settlement_point_sink: Format - abc123.
        :type settlement_point_sink: str
        :param ptp_bid_mw_from: Format - ####.###.
        :type ptp_bid_mw_from: float
        :param ptp_bid_mwto: Format - ####.###.
        :type ptp_bid_mwto: float
        :param ptp_bid_price_from: Format - ####.###.
        :type ptp_bid_price_from: float
        :param ptp_bid_price_to: Format - ####.###.
        :type ptp_bid_price_to: float
        :param bid_id: Format - abc123.
        :type bid_id: str
        :param multi_hour_block: Format - true | false.
        :type multi_hour_block: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data41_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            settlement_point_source=settlement_point_source,
            settlement_point_sink=settlement_point_sink,
            ptp_bid_mw_from=ptp_bid_mw_from,
            ptp_bid_mwto=ptp_bid_mwto,
            ptp_bid_price_from=ptp_bid_price_from,
            ptp_bid_price_to=ptp_bid_price_to,
            bid_id=bid_id,
            multi_hour_block=multi_hour_block,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_data41_serialize(
        self,
        ocp_apim_subscription_key,
        delivery_date_from,
        delivery_date_to,
        hour_ending_from,
        hour_ending_to,
        qse_name,
        settlement_point_source,
        settlement_point_sink,
        ptp_bid_mw_from,
        ptp_bid_mwto,
        ptp_bid_price_from,
        ptp_bid_price_to,
        bid_id,
        multi_hour_block,
        page,
        size,
        sort,
        dir,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if delivery_date_from is not None:
            
            _query_params.append(('deliveryDateFrom', delivery_date_from))
            
        if delivery_date_to is not None:
            
            _query_params.append(('deliveryDateTo', delivery_date_to))
            
        if hour_ending_from is not None:
            
            _query_params.append(('hourEndingFrom', hour_ending_from))
            
        if hour_ending_to is not None:
            
            _query_params.append(('hourEndingTo', hour_ending_to))
            
        if qse_name is not None:
            
            _query_params.append(('qseName', qse_name))
            
        if settlement_point_source is not None:
            
            _query_params.append(('settlementPointSource', settlement_point_source))
            
        if settlement_point_sink is not None:
            
            _query_params.append(('settlementPointSink', settlement_point_sink))
            
        if ptp_bid_mw_from is not None:
            
            _query_params.append(('PTPBidMWFrom', ptp_bid_mw_from))
            
        if ptp_bid_mwto is not None:
            
            _query_params.append(('PTPBidMWTo', ptp_bid_mwto))
            
        if ptp_bid_price_from is not None:
            
            _query_params.append(('PTPBidPriceFrom', ptp_bid_price_from))
            
        if ptp_bid_price_to is not None:
            
            _query_params.append(('PTPBidPriceTo', ptp_bid_price_to))
            
        if bid_id is not None:
            
            _query_params.append(('bidId', bid_id))
            
        if multi_hour_block is not None:
            
            _query_params.append(('multiHourBlock', multi_hour_block))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if dir is not None:
            
            _query_params.append(('dir', dir))
            
        # process the header parameters
        if ocp_apim_subscription_key is not None:
            _header_params['Ocp-Apim-Subscription-Key'] = ocp_apim_subscription_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/np3-966-er/60_dam_ptp_obl_bids',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_data42(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        settlement_point_source: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_sink: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        ptp_bid_award_mw_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        ptp_bid_award_mwto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        ptp_bid_price_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        ptp_bid_price_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        bid_id: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Report:
        """60 Day DAM PTP Obligation Bid Awards

        60 Day DAM PTP Obligation Bid Awards

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param settlement_point_source: Format - abc123.
        :type settlement_point_source: str
        :param settlement_point_sink: Format - abc123.
        :type settlement_point_sink: str
        :param ptp_bid_award_mw_from: Format - ####.###.
        :type ptp_bid_award_mw_from: float
        :param ptp_bid_award_mwto: Format - ####.###.
        :type ptp_bid_award_mwto: float
        :param ptp_bid_price_from: Format - ####.###.
        :type ptp_bid_price_from: float
        :param ptp_bid_price_to: Format - ####.###.
        :type ptp_bid_price_to: float
        :param bid_id: Format - abc123.
        :type bid_id: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data42_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            settlement_point_source=settlement_point_source,
            settlement_point_sink=settlement_point_sink,
            ptp_bid_award_mw_from=ptp_bid_award_mw_from,
            ptp_bid_award_mwto=ptp_bid_award_mwto,
            ptp_bid_price_from=ptp_bid_price_from,
            ptp_bid_price_to=ptp_bid_price_to,
            bid_id=bid_id,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_data42_with_http_info(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        settlement_point_source: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_sink: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        ptp_bid_award_mw_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        ptp_bid_award_mwto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        ptp_bid_price_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        ptp_bid_price_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        bid_id: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Report]:
        """60 Day DAM PTP Obligation Bid Awards

        60 Day DAM PTP Obligation Bid Awards

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param settlement_point_source: Format - abc123.
        :type settlement_point_source: str
        :param settlement_point_sink: Format - abc123.
        :type settlement_point_sink: str
        :param ptp_bid_award_mw_from: Format - ####.###.
        :type ptp_bid_award_mw_from: float
        :param ptp_bid_award_mwto: Format - ####.###.
        :type ptp_bid_award_mwto: float
        :param ptp_bid_price_from: Format - ####.###.
        :type ptp_bid_price_from: float
        :param ptp_bid_price_to: Format - ####.###.
        :type ptp_bid_price_to: float
        :param bid_id: Format - abc123.
        :type bid_id: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data42_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            settlement_point_source=settlement_point_source,
            settlement_point_sink=settlement_point_sink,
            ptp_bid_award_mw_from=ptp_bid_award_mw_from,
            ptp_bid_award_mwto=ptp_bid_award_mwto,
            ptp_bid_price_from=ptp_bid_price_from,
            ptp_bid_price_to=ptp_bid_price_to,
            bid_id=bid_id,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_data42_without_preload_content(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        settlement_point_source: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        settlement_point_sink: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        ptp_bid_award_mw_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        ptp_bid_award_mwto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        ptp_bid_price_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        ptp_bid_price_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        bid_id: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """60 Day DAM PTP Obligation Bid Awards

        60 Day DAM PTP Obligation Bid Awards

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param settlement_point_source: Format - abc123.
        :type settlement_point_source: str
        :param settlement_point_sink: Format - abc123.
        :type settlement_point_sink: str
        :param ptp_bid_award_mw_from: Format - ####.###.
        :type ptp_bid_award_mw_from: float
        :param ptp_bid_award_mwto: Format - ####.###.
        :type ptp_bid_award_mwto: float
        :param ptp_bid_price_from: Format - ####.###.
        :type ptp_bid_price_from: float
        :param ptp_bid_price_to: Format - ####.###.
        :type ptp_bid_price_to: float
        :param bid_id: Format - abc123.
        :type bid_id: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data42_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            settlement_point_source=settlement_point_source,
            settlement_point_sink=settlement_point_sink,
            ptp_bid_award_mw_from=ptp_bid_award_mw_from,
            ptp_bid_award_mwto=ptp_bid_award_mwto,
            ptp_bid_price_from=ptp_bid_price_from,
            ptp_bid_price_to=ptp_bid_price_to,
            bid_id=bid_id,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_data42_serialize(
        self,
        ocp_apim_subscription_key,
        settlement_point_source,
        settlement_point_sink,
        ptp_bid_award_mw_from,
        ptp_bid_award_mwto,
        ptp_bid_price_from,
        ptp_bid_price_to,
        bid_id,
        delivery_date_from,
        delivery_date_to,
        hour_ending_from,
        hour_ending_to,
        qse_name,
        page,
        size,
        sort,
        dir,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if settlement_point_source is not None:
            
            _query_params.append(('settlementPointSource', settlement_point_source))
            
        if settlement_point_sink is not None:
            
            _query_params.append(('settlementPointSink', settlement_point_sink))
            
        if ptp_bid_award_mw_from is not None:
            
            _query_params.append(('PTPBidAwardMWFrom', ptp_bid_award_mw_from))
            
        if ptp_bid_award_mwto is not None:
            
            _query_params.append(('PTPBidAwardMWTo', ptp_bid_award_mwto))
            
        if ptp_bid_price_from is not None:
            
            _query_params.append(('PTPBidPriceFrom', ptp_bid_price_from))
            
        if ptp_bid_price_to is not None:
            
            _query_params.append(('PTPBidPriceTo', ptp_bid_price_to))
            
        if bid_id is not None:
            
            _query_params.append(('bidId', bid_id))
            
        if delivery_date_from is not None:
            
            _query_params.append(('deliveryDateFrom', delivery_date_from))
            
        if delivery_date_to is not None:
            
            _query_params.append(('deliveryDateTo', delivery_date_to))
            
        if hour_ending_from is not None:
            
            _query_params.append(('hourEndingFrom', hour_ending_from))
            
        if hour_ending_to is not None:
            
            _query_params.append(('hourEndingTo', hour_ending_to))
            
        if qse_name is not None:
            
            _query_params.append(('qseName', qse_name))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if dir is not None:
            
            _query_params.append(('dir', dir))
            
        # process the header parameters
        if ocp_apim_subscription_key is not None:
            _header_params['Ocp-Apim-Subscription-Key'] = ocp_apim_subscription_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/np3-966-er/60_dam_ptp_obl_bid_awards',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_data43(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        regupmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regupmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdn_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdn_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdnmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdnmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrspfr_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrspfr_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsffr_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsffr_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsufr_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsufr_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspin_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspin_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspinmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspinmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        load_resource_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        max_power_consumption_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        max_power_consumption_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        low_power_consumption_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        low_power_consumption_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regup_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regup_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Report:
        """60 Day DAM Load Resource Data

        60 Day DAM Load Resource Data

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param regupmcpc_from: Format - ####.###.
        :type regupmcpc_from: float
        :param regupmcpcto: Format - ####.###.
        :type regupmcpcto: float
        :param regdn_awarded_from: Format - ####.###.
        :type regdn_awarded_from: float
        :param regdn_awarded_to: Format - ####.###.
        :type regdn_awarded_to: float
        :param regdnmcpc_from: Format - ####.###.
        :type regdnmcpc_from: float
        :param regdnmcpcto: Format - ####.###.
        :type regdnmcpcto: float
        :param rrspfr_awarded_from: Format - ####.###.
        :type rrspfr_awarded_from: float
        :param rrspfr_awarded_to: Format - ####.###.
        :type rrspfr_awarded_to: float
        :param rrsffr_awarded_from: Format - ####.###.
        :type rrsffr_awarded_from: float
        :param rrsffr_awarded_to: Format - ####.###.
        :type rrsffr_awarded_to: float
        :param rrsufr_awarded_from: Format - ####.###.
        :type rrsufr_awarded_from: float
        :param rrsufr_awarded_to: Format - ####.###.
        :type rrsufr_awarded_to: float
        :param rrsmcpc_from: Format - ####.###.
        :type rrsmcpc_from: float
        :param rrsmcpcto: Format - ####.###.
        :type rrsmcpcto: float
        :param nspin_awarded_from: Format - ####.###.
        :type nspin_awarded_from: float
        :param nspin_awarded_to: Format - ####.###.
        :type nspin_awarded_to: float
        :param nspinmcpc_from: Format - ####.###.
        :type nspinmcpc_from: float
        :param nspinmcpcto: Format - ####.###.
        :type nspinmcpcto: float
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param load_resource_name: Format - abc123.
        :type load_resource_name: str
        :param max_power_consumption_from: Format - ####.###.
        :type max_power_consumption_from: float
        :param max_power_consumption_to: Format - ####.###.
        :type max_power_consumption_to: float
        :param low_power_consumption_from: Format - ####.###.
        :type low_power_consumption_from: float
        :param low_power_consumption_to: Format - ####.###.
        :type low_power_consumption_to: float
        :param regup_awarded_from: Format - ####.###.
        :type regup_awarded_from: float
        :param regup_awarded_to: Format - ####.###.
        :type regup_awarded_to: float
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data43_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            regupmcpc_from=regupmcpc_from,
            regupmcpcto=regupmcpcto,
            regdn_awarded_from=regdn_awarded_from,
            regdn_awarded_to=regdn_awarded_to,
            regdnmcpc_from=regdnmcpc_from,
            regdnmcpcto=regdnmcpcto,
            rrspfr_awarded_from=rrspfr_awarded_from,
            rrspfr_awarded_to=rrspfr_awarded_to,
            rrsffr_awarded_from=rrsffr_awarded_from,
            rrsffr_awarded_to=rrsffr_awarded_to,
            rrsufr_awarded_from=rrsufr_awarded_from,
            rrsufr_awarded_to=rrsufr_awarded_to,
            rrsmcpc_from=rrsmcpc_from,
            rrsmcpcto=rrsmcpcto,
            nspin_awarded_from=nspin_awarded_from,
            nspin_awarded_to=nspin_awarded_to,
            nspinmcpc_from=nspinmcpc_from,
            nspinmcpcto=nspinmcpcto,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            load_resource_name=load_resource_name,
            max_power_consumption_from=max_power_consumption_from,
            max_power_consumption_to=max_power_consumption_to,
            low_power_consumption_from=low_power_consumption_from,
            low_power_consumption_to=low_power_consumption_to,
            regup_awarded_from=regup_awarded_from,
            regup_awarded_to=regup_awarded_to,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_data43_with_http_info(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        regupmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regupmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdn_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdn_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdnmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdnmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrspfr_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrspfr_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsffr_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsffr_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsufr_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsufr_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspin_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspin_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspinmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspinmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        load_resource_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        max_power_consumption_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        max_power_consumption_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        low_power_consumption_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        low_power_consumption_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regup_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regup_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Report]:
        """60 Day DAM Load Resource Data

        60 Day DAM Load Resource Data

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param regupmcpc_from: Format - ####.###.
        :type regupmcpc_from: float
        :param regupmcpcto: Format - ####.###.
        :type regupmcpcto: float
        :param regdn_awarded_from: Format - ####.###.
        :type regdn_awarded_from: float
        :param regdn_awarded_to: Format - ####.###.
        :type regdn_awarded_to: float
        :param regdnmcpc_from: Format - ####.###.
        :type regdnmcpc_from: float
        :param regdnmcpcto: Format - ####.###.
        :type regdnmcpcto: float
        :param rrspfr_awarded_from: Format - ####.###.
        :type rrspfr_awarded_from: float
        :param rrspfr_awarded_to: Format - ####.###.
        :type rrspfr_awarded_to: float
        :param rrsffr_awarded_from: Format - ####.###.
        :type rrsffr_awarded_from: float
        :param rrsffr_awarded_to: Format - ####.###.
        :type rrsffr_awarded_to: float
        :param rrsufr_awarded_from: Format - ####.###.
        :type rrsufr_awarded_from: float
        :param rrsufr_awarded_to: Format - ####.###.
        :type rrsufr_awarded_to: float
        :param rrsmcpc_from: Format - ####.###.
        :type rrsmcpc_from: float
        :param rrsmcpcto: Format - ####.###.
        :type rrsmcpcto: float
        :param nspin_awarded_from: Format - ####.###.
        :type nspin_awarded_from: float
        :param nspin_awarded_to: Format - ####.###.
        :type nspin_awarded_to: float
        :param nspinmcpc_from: Format - ####.###.
        :type nspinmcpc_from: float
        :param nspinmcpcto: Format - ####.###.
        :type nspinmcpcto: float
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param load_resource_name: Format - abc123.
        :type load_resource_name: str
        :param max_power_consumption_from: Format - ####.###.
        :type max_power_consumption_from: float
        :param max_power_consumption_to: Format - ####.###.
        :type max_power_consumption_to: float
        :param low_power_consumption_from: Format - ####.###.
        :type low_power_consumption_from: float
        :param low_power_consumption_to: Format - ####.###.
        :type low_power_consumption_to: float
        :param regup_awarded_from: Format - ####.###.
        :type regup_awarded_from: float
        :param regup_awarded_to: Format - ####.###.
        :type regup_awarded_to: float
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data43_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            regupmcpc_from=regupmcpc_from,
            regupmcpcto=regupmcpcto,
            regdn_awarded_from=regdn_awarded_from,
            regdn_awarded_to=regdn_awarded_to,
            regdnmcpc_from=regdnmcpc_from,
            regdnmcpcto=regdnmcpcto,
            rrspfr_awarded_from=rrspfr_awarded_from,
            rrspfr_awarded_to=rrspfr_awarded_to,
            rrsffr_awarded_from=rrsffr_awarded_from,
            rrsffr_awarded_to=rrsffr_awarded_to,
            rrsufr_awarded_from=rrsufr_awarded_from,
            rrsufr_awarded_to=rrsufr_awarded_to,
            rrsmcpc_from=rrsmcpc_from,
            rrsmcpcto=rrsmcpcto,
            nspin_awarded_from=nspin_awarded_from,
            nspin_awarded_to=nspin_awarded_to,
            nspinmcpc_from=nspinmcpc_from,
            nspinmcpcto=nspinmcpcto,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            load_resource_name=load_resource_name,
            max_power_consumption_from=max_power_consumption_from,
            max_power_consumption_to=max_power_consumption_to,
            low_power_consumption_from=low_power_consumption_from,
            low_power_consumption_to=low_power_consumption_to,
            regup_awarded_from=regup_awarded_from,
            regup_awarded_to=regup_awarded_to,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_data43_without_preload_content(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        regupmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regupmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdn_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdn_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdnmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdnmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrspfr_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrspfr_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsffr_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsffr_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsufr_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsufr_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspin_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspin_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspinmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspinmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        load_resource_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        max_power_consumption_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        max_power_consumption_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        low_power_consumption_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        low_power_consumption_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regup_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regup_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """60 Day DAM Load Resource Data

        60 Day DAM Load Resource Data

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param regupmcpc_from: Format - ####.###.
        :type regupmcpc_from: float
        :param regupmcpcto: Format - ####.###.
        :type regupmcpcto: float
        :param regdn_awarded_from: Format - ####.###.
        :type regdn_awarded_from: float
        :param regdn_awarded_to: Format - ####.###.
        :type regdn_awarded_to: float
        :param regdnmcpc_from: Format - ####.###.
        :type regdnmcpc_from: float
        :param regdnmcpcto: Format - ####.###.
        :type regdnmcpcto: float
        :param rrspfr_awarded_from: Format - ####.###.
        :type rrspfr_awarded_from: float
        :param rrspfr_awarded_to: Format - ####.###.
        :type rrspfr_awarded_to: float
        :param rrsffr_awarded_from: Format - ####.###.
        :type rrsffr_awarded_from: float
        :param rrsffr_awarded_to: Format - ####.###.
        :type rrsffr_awarded_to: float
        :param rrsufr_awarded_from: Format - ####.###.
        :type rrsufr_awarded_from: float
        :param rrsufr_awarded_to: Format - ####.###.
        :type rrsufr_awarded_to: float
        :param rrsmcpc_from: Format - ####.###.
        :type rrsmcpc_from: float
        :param rrsmcpcto: Format - ####.###.
        :type rrsmcpcto: float
        :param nspin_awarded_from: Format - ####.###.
        :type nspin_awarded_from: float
        :param nspin_awarded_to: Format - ####.###.
        :type nspin_awarded_to: float
        :param nspinmcpc_from: Format - ####.###.
        :type nspinmcpc_from: float
        :param nspinmcpcto: Format - ####.###.
        :type nspinmcpcto: float
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param load_resource_name: Format - abc123.
        :type load_resource_name: str
        :param max_power_consumption_from: Format - ####.###.
        :type max_power_consumption_from: float
        :param max_power_consumption_to: Format - ####.###.
        :type max_power_consumption_to: float
        :param low_power_consumption_from: Format - ####.###.
        :type low_power_consumption_from: float
        :param low_power_consumption_to: Format - ####.###.
        :type low_power_consumption_to: float
        :param regup_awarded_from: Format - ####.###.
        :type regup_awarded_from: float
        :param regup_awarded_to: Format - ####.###.
        :type regup_awarded_to: float
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data43_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            regupmcpc_from=regupmcpc_from,
            regupmcpcto=regupmcpcto,
            regdn_awarded_from=regdn_awarded_from,
            regdn_awarded_to=regdn_awarded_to,
            regdnmcpc_from=regdnmcpc_from,
            regdnmcpcto=regdnmcpcto,
            rrspfr_awarded_from=rrspfr_awarded_from,
            rrspfr_awarded_to=rrspfr_awarded_to,
            rrsffr_awarded_from=rrsffr_awarded_from,
            rrsffr_awarded_to=rrsffr_awarded_to,
            rrsufr_awarded_from=rrsufr_awarded_from,
            rrsufr_awarded_to=rrsufr_awarded_to,
            rrsmcpc_from=rrsmcpc_from,
            rrsmcpcto=rrsmcpcto,
            nspin_awarded_from=nspin_awarded_from,
            nspin_awarded_to=nspin_awarded_to,
            nspinmcpc_from=nspinmcpc_from,
            nspinmcpcto=nspinmcpcto,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            load_resource_name=load_resource_name,
            max_power_consumption_from=max_power_consumption_from,
            max_power_consumption_to=max_power_consumption_to,
            low_power_consumption_from=low_power_consumption_from,
            low_power_consumption_to=low_power_consumption_to,
            regup_awarded_from=regup_awarded_from,
            regup_awarded_to=regup_awarded_to,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_data43_serialize(
        self,
        ocp_apim_subscription_key,
        regupmcpc_from,
        regupmcpcto,
        regdn_awarded_from,
        regdn_awarded_to,
        regdnmcpc_from,
        regdnmcpcto,
        rrspfr_awarded_from,
        rrspfr_awarded_to,
        rrsffr_awarded_from,
        rrsffr_awarded_to,
        rrsufr_awarded_from,
        rrsufr_awarded_to,
        rrsmcpc_from,
        rrsmcpcto,
        nspin_awarded_from,
        nspin_awarded_to,
        nspinmcpc_from,
        nspinmcpcto,
        delivery_date_from,
        delivery_date_to,
        hour_ending_from,
        hour_ending_to,
        load_resource_name,
        max_power_consumption_from,
        max_power_consumption_to,
        low_power_consumption_from,
        low_power_consumption_to,
        regup_awarded_from,
        regup_awarded_to,
        page,
        size,
        sort,
        dir,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if regupmcpc_from is not None:
            
            _query_params.append(('REGUPMCPCFrom', regupmcpc_from))
            
        if regupmcpcto is not None:
            
            _query_params.append(('REGUPMCPCTo', regupmcpcto))
            
        if regdn_awarded_from is not None:
            
            _query_params.append(('REGDNAwardedFrom', regdn_awarded_from))
            
        if regdn_awarded_to is not None:
            
            _query_params.append(('REGDNAwardedTo', regdn_awarded_to))
            
        if regdnmcpc_from is not None:
            
            _query_params.append(('REGDNMCPCFrom', regdnmcpc_from))
            
        if regdnmcpcto is not None:
            
            _query_params.append(('REGDNMCPCTo', regdnmcpcto))
            
        if rrspfr_awarded_from is not None:
            
            _query_params.append(('RRSPFRAwardedFrom', rrspfr_awarded_from))
            
        if rrspfr_awarded_to is not None:
            
            _query_params.append(('RRSPFRAwardedTo', rrspfr_awarded_to))
            
        if rrsffr_awarded_from is not None:
            
            _query_params.append(('RRSFFRAwardedFrom', rrsffr_awarded_from))
            
        if rrsffr_awarded_to is not None:
            
            _query_params.append(('RRSFFRAwardedTo', rrsffr_awarded_to))
            
        if rrsufr_awarded_from is not None:
            
            _query_params.append(('RRSUFRAwardedFrom', rrsufr_awarded_from))
            
        if rrsufr_awarded_to is not None:
            
            _query_params.append(('RRSUFRAwardedTo', rrsufr_awarded_to))
            
        if rrsmcpc_from is not None:
            
            _query_params.append(('RRSMCPCFrom', rrsmcpc_from))
            
        if rrsmcpcto is not None:
            
            _query_params.append(('RRSMCPCTo', rrsmcpcto))
            
        if nspin_awarded_from is not None:
            
            _query_params.append(('NSPINAwardedFrom', nspin_awarded_from))
            
        if nspin_awarded_to is not None:
            
            _query_params.append(('NSPINAwardedTo', nspin_awarded_to))
            
        if nspinmcpc_from is not None:
            
            _query_params.append(('NSPINMCPCFrom', nspinmcpc_from))
            
        if nspinmcpcto is not None:
            
            _query_params.append(('NSPINMCPCTo', nspinmcpcto))
            
        if delivery_date_from is not None:
            
            _query_params.append(('deliveryDateFrom', delivery_date_from))
            
        if delivery_date_to is not None:
            
            _query_params.append(('deliveryDateTo', delivery_date_to))
            
        if hour_ending_from is not None:
            
            _query_params.append(('hourEndingFrom', hour_ending_from))
            
        if hour_ending_to is not None:
            
            _query_params.append(('hourEndingTo', hour_ending_to))
            
        if load_resource_name is not None:
            
            _query_params.append(('loadResourceName', load_resource_name))
            
        if max_power_consumption_from is not None:
            
            _query_params.append(('maxPowerConsumptionFrom', max_power_consumption_from))
            
        if max_power_consumption_to is not None:
            
            _query_params.append(('maxPowerConsumptionTo', max_power_consumption_to))
            
        if low_power_consumption_from is not None:
            
            _query_params.append(('lowPowerConsumptionFrom', low_power_consumption_from))
            
        if low_power_consumption_to is not None:
            
            _query_params.append(('lowPowerConsumptionTo', low_power_consumption_to))
            
        if regup_awarded_from is not None:
            
            _query_params.append(('REGUPAwardedFrom', regup_awarded_from))
            
        if regup_awarded_to is not None:
            
            _query_params.append(('REGUPAwardedTo', regup_awarded_to))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if dir is not None:
            
            _query_params.append(('dir', dir))
            
        # process the header parameters
        if ocp_apim_subscription_key is not None:
            _header_params['Ocp-Apim-Subscription-Key'] = ocp_apim_subscription_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/np3-966-er/60_dam_load_res_data',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_data44(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        dme_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        load_resource_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        multi_hour_block: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        block_indicator1: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price1_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw1_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw1_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator2: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price2_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw2_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw2_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator3: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price3_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw3_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw3_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator4: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price4_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw4_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw4_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator5: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price5_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw5_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw5_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        nclr_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Report:
        """60 Day DAM Load Resources AS Offers

        60 Day DAM Load Resources AS Offers

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param dme_name: Format - abc123.
        :type dme_name: str
        :param load_resource_name: Format - abc123.
        :type load_resource_name: str
        :param multi_hour_block: Format - true | false.
        :type multi_hour_block: bool
        :param block_indicator1: Format - true | false.
        :type block_indicator1: bool
        :param price1_rrspfr_from: Format - ####.###.
        :type price1_rrspfr_from: float
        :param price1_rrspfrto: Format - ####.###.
        :type price1_rrspfrto: float
        :param price1_rrsffr_from: Format - ####.###.
        :type price1_rrsffr_from: float
        :param price1_rrsffrto: Format - ####.###.
        :type price1_rrsffrto: float
        :param price1_rrsufr_from: Format - ####.###.
        :type price1_rrsufr_from: float
        :param price1_rrsufrto: Format - ####.###.
        :type price1_rrsufrto: float
        :param price1_online_nspin_from: Format - ####.###.
        :type price1_online_nspin_from: float
        :param price1_online_nspinto: Format - ####.###.
        :type price1_online_nspinto: float
        :param price1_regup_from: Format - ####.###.
        :type price1_regup_from: float
        :param price1_regupto: Format - ####.###.
        :type price1_regupto: float
        :param price1_regdn_from: Format - ####.###.
        :type price1_regdn_from: float
        :param price1_regdnto: Format - ####.###.
        :type price1_regdnto: float
        :param price1_offline_nspin_from: Format - ####.###.
        :type price1_offline_nspin_from: float
        :param price1_offline_nspinto: Format - ####.###.
        :type price1_offline_nspinto: float
        :param quantity_mw1_from: Format - ###.
        :type quantity_mw1_from: int
        :param quantity_mw1_to: Format - ###.
        :type quantity_mw1_to: int
        :param block_indicator2: Format - true | false.
        :type block_indicator2: bool
        :param price2_rrspfr_from: Format - ####.###.
        :type price2_rrspfr_from: float
        :param price2_rrspfrto: Format - ####.###.
        :type price2_rrspfrto: float
        :param price2_rrsffr_from: Format - ####.###.
        :type price2_rrsffr_from: float
        :param price2_rrsffrto: Format - ####.###.
        :type price2_rrsffrto: float
        :param price2_rrsufr_from: Format - ####.###.
        :type price2_rrsufr_from: float
        :param price2_rrsufrto: Format - ####.###.
        :type price2_rrsufrto: float
        :param price2_online_nspin_from: Format - ####.###.
        :type price2_online_nspin_from: float
        :param price2_online_nspinto: Format - ####.###.
        :type price2_online_nspinto: float
        :param price2_regup_from: Format - ####.###.
        :type price2_regup_from: float
        :param price2_regupto: Format - ####.###.
        :type price2_regupto: float
        :param price2_regdn_from: Format - ####.###.
        :type price2_regdn_from: float
        :param price2_regdnto: Format - ####.###.
        :type price2_regdnto: float
        :param price2_offline_nspin_from: Format - ####.###.
        :type price2_offline_nspin_from: float
        :param price2_offline_nspinto: Format - ####.###.
        :type price2_offline_nspinto: float
        :param quantity_mw2_from: Format - ###.
        :type quantity_mw2_from: int
        :param quantity_mw2_to: Format - ###.
        :type quantity_mw2_to: int
        :param block_indicator3: Format - true | false.
        :type block_indicator3: bool
        :param price3_rrspfr_from: Format - ####.###.
        :type price3_rrspfr_from: float
        :param price3_rrspfrto: Format - ####.###.
        :type price3_rrspfrto: float
        :param price3_rrsffr_from: Format - ####.###.
        :type price3_rrsffr_from: float
        :param price3_rrsffrto: Format - ####.###.
        :type price3_rrsffrto: float
        :param price3_rrsufr_from: Format - ####.###.
        :type price3_rrsufr_from: float
        :param price3_rrsufrto: Format - ####.###.
        :type price3_rrsufrto: float
        :param price3_online_nspin_from: Format - ####.###.
        :type price3_online_nspin_from: float
        :param price3_online_nspinto: Format - ####.###.
        :type price3_online_nspinto: float
        :param price3_regup_from: Format - ####.###.
        :type price3_regup_from: float
        :param price3_regupto: Format - ####.###.
        :type price3_regupto: float
        :param price3_regdn_from: Format - ####.###.
        :type price3_regdn_from: float
        :param price3_regdnto: Format - ####.###.
        :type price3_regdnto: float
        :param price3_offline_nspin_from: Format - ####.###.
        :type price3_offline_nspin_from: float
        :param price3_offline_nspinto: Format - ####.###.
        :type price3_offline_nspinto: float
        :param quantity_mw3_from: Format - ###.
        :type quantity_mw3_from: int
        :param quantity_mw3_to: Format - ###.
        :type quantity_mw3_to: int
        :param block_indicator4: Format - true | false.
        :type block_indicator4: bool
        :param price4_rrspfr_from: Format - ####.###.
        :type price4_rrspfr_from: float
        :param price4_rrspfrto: Format - ####.###.
        :type price4_rrspfrto: float
        :param price4_rrsffr_from: Format - ####.###.
        :type price4_rrsffr_from: float
        :param price4_rrsffrto: Format - ####.###.
        :type price4_rrsffrto: float
        :param price4_rrsufr_from: Format - ####.###.
        :type price4_rrsufr_from: float
        :param price4_rrsufrto: Format - ####.###.
        :type price4_rrsufrto: float
        :param price4_online_nspin_from: Format - ####.###.
        :type price4_online_nspin_from: float
        :param price4_online_nspinto: Format - ####.###.
        :type price4_online_nspinto: float
        :param price4_regup_from: Format - ####.###.
        :type price4_regup_from: float
        :param price4_regupto: Format - ####.###.
        :type price4_regupto: float
        :param price4_regdn_from: Format - ####.###.
        :type price4_regdn_from: float
        :param price4_regdnto: Format - ####.###.
        :type price4_regdnto: float
        :param price4_offline_nspin_from: Format - ####.###.
        :type price4_offline_nspin_from: float
        :param price4_offline_nspinto: Format - ####.###.
        :type price4_offline_nspinto: float
        :param quantity_mw4_from: Format - ###.
        :type quantity_mw4_from: int
        :param quantity_mw4_to: Format - ###.
        :type quantity_mw4_to: int
        :param block_indicator5: Format - true | false.
        :type block_indicator5: bool
        :param price5_rrspfr_from: Format - ####.###.
        :type price5_rrspfr_from: float
        :param price5_rrspfrto: Format - ####.###.
        :type price5_rrspfrto: float
        :param price5_rrsffr_from: Format - ####.###.
        :type price5_rrsffr_from: float
        :param price5_rrsffrto: Format - ####.###.
        :type price5_rrsffrto: float
        :param price5_rrsufr_from: Format - ####.###.
        :type price5_rrsufr_from: float
        :param price5_rrsufrto: Format - ####.###.
        :type price5_rrsufrto: float
        :param price5_online_nspin_from: Format - ####.###.
        :type price5_online_nspin_from: float
        :param price5_online_nspinto: Format - ####.###.
        :type price5_online_nspinto: float
        :param price5_regup_from: Format - ####.###.
        :type price5_regup_from: float
        :param price5_regupto: Format - ####.###.
        :type price5_regupto: float
        :param price5_regdn_from: Format - ####.###.
        :type price5_regdn_from: float
        :param price5_regdnto: Format - ####.###.
        :type price5_regdnto: float
        :param price5_offline_nspin_from: Format - ####.###.
        :type price5_offline_nspin_from: float
        :param price5_offline_nspinto: Format - ####.###.
        :type price5_offline_nspinto: float
        :param quantity_mw5_from: Format - ###.
        :type quantity_mw5_from: int
        :param quantity_mw5_to: Format - ###.
        :type quantity_mw5_to: int
        :param nclr_flag: Format - true | false.
        :type nclr_flag: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data44_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            dme_name=dme_name,
            load_resource_name=load_resource_name,
            multi_hour_block=multi_hour_block,
            block_indicator1=block_indicator1,
            price1_rrspfr_from=price1_rrspfr_from,
            price1_rrspfrto=price1_rrspfrto,
            price1_rrsffr_from=price1_rrsffr_from,
            price1_rrsffrto=price1_rrsffrto,
            price1_rrsufr_from=price1_rrsufr_from,
            price1_rrsufrto=price1_rrsufrto,
            price1_online_nspin_from=price1_online_nspin_from,
            price1_online_nspinto=price1_online_nspinto,
            price1_regup_from=price1_regup_from,
            price1_regupto=price1_regupto,
            price1_regdn_from=price1_regdn_from,
            price1_regdnto=price1_regdnto,
            price1_offline_nspin_from=price1_offline_nspin_from,
            price1_offline_nspinto=price1_offline_nspinto,
            quantity_mw1_from=quantity_mw1_from,
            quantity_mw1_to=quantity_mw1_to,
            block_indicator2=block_indicator2,
            price2_rrspfr_from=price2_rrspfr_from,
            price2_rrspfrto=price2_rrspfrto,
            price2_rrsffr_from=price2_rrsffr_from,
            price2_rrsffrto=price2_rrsffrto,
            price2_rrsufr_from=price2_rrsufr_from,
            price2_rrsufrto=price2_rrsufrto,
            price2_online_nspin_from=price2_online_nspin_from,
            price2_online_nspinto=price2_online_nspinto,
            price2_regup_from=price2_regup_from,
            price2_regupto=price2_regupto,
            price2_regdn_from=price2_regdn_from,
            price2_regdnto=price2_regdnto,
            price2_offline_nspin_from=price2_offline_nspin_from,
            price2_offline_nspinto=price2_offline_nspinto,
            quantity_mw2_from=quantity_mw2_from,
            quantity_mw2_to=quantity_mw2_to,
            block_indicator3=block_indicator3,
            price3_rrspfr_from=price3_rrspfr_from,
            price3_rrspfrto=price3_rrspfrto,
            price3_rrsffr_from=price3_rrsffr_from,
            price3_rrsffrto=price3_rrsffrto,
            price3_rrsufr_from=price3_rrsufr_from,
            price3_rrsufrto=price3_rrsufrto,
            price3_online_nspin_from=price3_online_nspin_from,
            price3_online_nspinto=price3_online_nspinto,
            price3_regup_from=price3_regup_from,
            price3_regupto=price3_regupto,
            price3_regdn_from=price3_regdn_from,
            price3_regdnto=price3_regdnto,
            price3_offline_nspin_from=price3_offline_nspin_from,
            price3_offline_nspinto=price3_offline_nspinto,
            quantity_mw3_from=quantity_mw3_from,
            quantity_mw3_to=quantity_mw3_to,
            block_indicator4=block_indicator4,
            price4_rrspfr_from=price4_rrspfr_from,
            price4_rrspfrto=price4_rrspfrto,
            price4_rrsffr_from=price4_rrsffr_from,
            price4_rrsffrto=price4_rrsffrto,
            price4_rrsufr_from=price4_rrsufr_from,
            price4_rrsufrto=price4_rrsufrto,
            price4_online_nspin_from=price4_online_nspin_from,
            price4_online_nspinto=price4_online_nspinto,
            price4_regup_from=price4_regup_from,
            price4_regupto=price4_regupto,
            price4_regdn_from=price4_regdn_from,
            price4_regdnto=price4_regdnto,
            price4_offline_nspin_from=price4_offline_nspin_from,
            price4_offline_nspinto=price4_offline_nspinto,
            quantity_mw4_from=quantity_mw4_from,
            quantity_mw4_to=quantity_mw4_to,
            block_indicator5=block_indicator5,
            price5_rrspfr_from=price5_rrspfr_from,
            price5_rrspfrto=price5_rrspfrto,
            price5_rrsffr_from=price5_rrsffr_from,
            price5_rrsffrto=price5_rrsffrto,
            price5_rrsufr_from=price5_rrsufr_from,
            price5_rrsufrto=price5_rrsufrto,
            price5_online_nspin_from=price5_online_nspin_from,
            price5_online_nspinto=price5_online_nspinto,
            price5_regup_from=price5_regup_from,
            price5_regupto=price5_regupto,
            price5_regdn_from=price5_regdn_from,
            price5_regdnto=price5_regdnto,
            price5_offline_nspin_from=price5_offline_nspin_from,
            price5_offline_nspinto=price5_offline_nspinto,
            quantity_mw5_from=quantity_mw5_from,
            quantity_mw5_to=quantity_mw5_to,
            nclr_flag=nclr_flag,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_data44_with_http_info(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        dme_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        load_resource_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        multi_hour_block: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        block_indicator1: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price1_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw1_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw1_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator2: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price2_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw2_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw2_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator3: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price3_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw3_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw3_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator4: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price4_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw4_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw4_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator5: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price5_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw5_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw5_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        nclr_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Report]:
        """60 Day DAM Load Resources AS Offers

        60 Day DAM Load Resources AS Offers

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param dme_name: Format - abc123.
        :type dme_name: str
        :param load_resource_name: Format - abc123.
        :type load_resource_name: str
        :param multi_hour_block: Format - true | false.
        :type multi_hour_block: bool
        :param block_indicator1: Format - true | false.
        :type block_indicator1: bool
        :param price1_rrspfr_from: Format - ####.###.
        :type price1_rrspfr_from: float
        :param price1_rrspfrto: Format - ####.###.
        :type price1_rrspfrto: float
        :param price1_rrsffr_from: Format - ####.###.
        :type price1_rrsffr_from: float
        :param price1_rrsffrto: Format - ####.###.
        :type price1_rrsffrto: float
        :param price1_rrsufr_from: Format - ####.###.
        :type price1_rrsufr_from: float
        :param price1_rrsufrto: Format - ####.###.
        :type price1_rrsufrto: float
        :param price1_online_nspin_from: Format - ####.###.
        :type price1_online_nspin_from: float
        :param price1_online_nspinto: Format - ####.###.
        :type price1_online_nspinto: float
        :param price1_regup_from: Format - ####.###.
        :type price1_regup_from: float
        :param price1_regupto: Format - ####.###.
        :type price1_regupto: float
        :param price1_regdn_from: Format - ####.###.
        :type price1_regdn_from: float
        :param price1_regdnto: Format - ####.###.
        :type price1_regdnto: float
        :param price1_offline_nspin_from: Format - ####.###.
        :type price1_offline_nspin_from: float
        :param price1_offline_nspinto: Format - ####.###.
        :type price1_offline_nspinto: float
        :param quantity_mw1_from: Format - ###.
        :type quantity_mw1_from: int
        :param quantity_mw1_to: Format - ###.
        :type quantity_mw1_to: int
        :param block_indicator2: Format - true | false.
        :type block_indicator2: bool
        :param price2_rrspfr_from: Format - ####.###.
        :type price2_rrspfr_from: float
        :param price2_rrspfrto: Format - ####.###.
        :type price2_rrspfrto: float
        :param price2_rrsffr_from: Format - ####.###.
        :type price2_rrsffr_from: float
        :param price2_rrsffrto: Format - ####.###.
        :type price2_rrsffrto: float
        :param price2_rrsufr_from: Format - ####.###.
        :type price2_rrsufr_from: float
        :param price2_rrsufrto: Format - ####.###.
        :type price2_rrsufrto: float
        :param price2_online_nspin_from: Format - ####.###.
        :type price2_online_nspin_from: float
        :param price2_online_nspinto: Format - ####.###.
        :type price2_online_nspinto: float
        :param price2_regup_from: Format - ####.###.
        :type price2_regup_from: float
        :param price2_regupto: Format - ####.###.
        :type price2_regupto: float
        :param price2_regdn_from: Format - ####.###.
        :type price2_regdn_from: float
        :param price2_regdnto: Format - ####.###.
        :type price2_regdnto: float
        :param price2_offline_nspin_from: Format - ####.###.
        :type price2_offline_nspin_from: float
        :param price2_offline_nspinto: Format - ####.###.
        :type price2_offline_nspinto: float
        :param quantity_mw2_from: Format - ###.
        :type quantity_mw2_from: int
        :param quantity_mw2_to: Format - ###.
        :type quantity_mw2_to: int
        :param block_indicator3: Format - true | false.
        :type block_indicator3: bool
        :param price3_rrspfr_from: Format - ####.###.
        :type price3_rrspfr_from: float
        :param price3_rrspfrto: Format - ####.###.
        :type price3_rrspfrto: float
        :param price3_rrsffr_from: Format - ####.###.
        :type price3_rrsffr_from: float
        :param price3_rrsffrto: Format - ####.###.
        :type price3_rrsffrto: float
        :param price3_rrsufr_from: Format - ####.###.
        :type price3_rrsufr_from: float
        :param price3_rrsufrto: Format - ####.###.
        :type price3_rrsufrto: float
        :param price3_online_nspin_from: Format - ####.###.
        :type price3_online_nspin_from: float
        :param price3_online_nspinto: Format - ####.###.
        :type price3_online_nspinto: float
        :param price3_regup_from: Format - ####.###.
        :type price3_regup_from: float
        :param price3_regupto: Format - ####.###.
        :type price3_regupto: float
        :param price3_regdn_from: Format - ####.###.
        :type price3_regdn_from: float
        :param price3_regdnto: Format - ####.###.
        :type price3_regdnto: float
        :param price3_offline_nspin_from: Format - ####.###.
        :type price3_offline_nspin_from: float
        :param price3_offline_nspinto: Format - ####.###.
        :type price3_offline_nspinto: float
        :param quantity_mw3_from: Format - ###.
        :type quantity_mw3_from: int
        :param quantity_mw3_to: Format - ###.
        :type quantity_mw3_to: int
        :param block_indicator4: Format - true | false.
        :type block_indicator4: bool
        :param price4_rrspfr_from: Format - ####.###.
        :type price4_rrspfr_from: float
        :param price4_rrspfrto: Format - ####.###.
        :type price4_rrspfrto: float
        :param price4_rrsffr_from: Format - ####.###.
        :type price4_rrsffr_from: float
        :param price4_rrsffrto: Format - ####.###.
        :type price4_rrsffrto: float
        :param price4_rrsufr_from: Format - ####.###.
        :type price4_rrsufr_from: float
        :param price4_rrsufrto: Format - ####.###.
        :type price4_rrsufrto: float
        :param price4_online_nspin_from: Format - ####.###.
        :type price4_online_nspin_from: float
        :param price4_online_nspinto: Format - ####.###.
        :type price4_online_nspinto: float
        :param price4_regup_from: Format - ####.###.
        :type price4_regup_from: float
        :param price4_regupto: Format - ####.###.
        :type price4_regupto: float
        :param price4_regdn_from: Format - ####.###.
        :type price4_regdn_from: float
        :param price4_regdnto: Format - ####.###.
        :type price4_regdnto: float
        :param price4_offline_nspin_from: Format - ####.###.
        :type price4_offline_nspin_from: float
        :param price4_offline_nspinto: Format - ####.###.
        :type price4_offline_nspinto: float
        :param quantity_mw4_from: Format - ###.
        :type quantity_mw4_from: int
        :param quantity_mw4_to: Format - ###.
        :type quantity_mw4_to: int
        :param block_indicator5: Format - true | false.
        :type block_indicator5: bool
        :param price5_rrspfr_from: Format - ####.###.
        :type price5_rrspfr_from: float
        :param price5_rrspfrto: Format - ####.###.
        :type price5_rrspfrto: float
        :param price5_rrsffr_from: Format - ####.###.
        :type price5_rrsffr_from: float
        :param price5_rrsffrto: Format - ####.###.
        :type price5_rrsffrto: float
        :param price5_rrsufr_from: Format - ####.###.
        :type price5_rrsufr_from: float
        :param price5_rrsufrto: Format - ####.###.
        :type price5_rrsufrto: float
        :param price5_online_nspin_from: Format - ####.###.
        :type price5_online_nspin_from: float
        :param price5_online_nspinto: Format - ####.###.
        :type price5_online_nspinto: float
        :param price5_regup_from: Format - ####.###.
        :type price5_regup_from: float
        :param price5_regupto: Format - ####.###.
        :type price5_regupto: float
        :param price5_regdn_from: Format - ####.###.
        :type price5_regdn_from: float
        :param price5_regdnto: Format - ####.###.
        :type price5_regdnto: float
        :param price5_offline_nspin_from: Format - ####.###.
        :type price5_offline_nspin_from: float
        :param price5_offline_nspinto: Format - ####.###.
        :type price5_offline_nspinto: float
        :param quantity_mw5_from: Format - ###.
        :type quantity_mw5_from: int
        :param quantity_mw5_to: Format - ###.
        :type quantity_mw5_to: int
        :param nclr_flag: Format - true | false.
        :type nclr_flag: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data44_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            dme_name=dme_name,
            load_resource_name=load_resource_name,
            multi_hour_block=multi_hour_block,
            block_indicator1=block_indicator1,
            price1_rrspfr_from=price1_rrspfr_from,
            price1_rrspfrto=price1_rrspfrto,
            price1_rrsffr_from=price1_rrsffr_from,
            price1_rrsffrto=price1_rrsffrto,
            price1_rrsufr_from=price1_rrsufr_from,
            price1_rrsufrto=price1_rrsufrto,
            price1_online_nspin_from=price1_online_nspin_from,
            price1_online_nspinto=price1_online_nspinto,
            price1_regup_from=price1_regup_from,
            price1_regupto=price1_regupto,
            price1_regdn_from=price1_regdn_from,
            price1_regdnto=price1_regdnto,
            price1_offline_nspin_from=price1_offline_nspin_from,
            price1_offline_nspinto=price1_offline_nspinto,
            quantity_mw1_from=quantity_mw1_from,
            quantity_mw1_to=quantity_mw1_to,
            block_indicator2=block_indicator2,
            price2_rrspfr_from=price2_rrspfr_from,
            price2_rrspfrto=price2_rrspfrto,
            price2_rrsffr_from=price2_rrsffr_from,
            price2_rrsffrto=price2_rrsffrto,
            price2_rrsufr_from=price2_rrsufr_from,
            price2_rrsufrto=price2_rrsufrto,
            price2_online_nspin_from=price2_online_nspin_from,
            price2_online_nspinto=price2_online_nspinto,
            price2_regup_from=price2_regup_from,
            price2_regupto=price2_regupto,
            price2_regdn_from=price2_regdn_from,
            price2_regdnto=price2_regdnto,
            price2_offline_nspin_from=price2_offline_nspin_from,
            price2_offline_nspinto=price2_offline_nspinto,
            quantity_mw2_from=quantity_mw2_from,
            quantity_mw2_to=quantity_mw2_to,
            block_indicator3=block_indicator3,
            price3_rrspfr_from=price3_rrspfr_from,
            price3_rrspfrto=price3_rrspfrto,
            price3_rrsffr_from=price3_rrsffr_from,
            price3_rrsffrto=price3_rrsffrto,
            price3_rrsufr_from=price3_rrsufr_from,
            price3_rrsufrto=price3_rrsufrto,
            price3_online_nspin_from=price3_online_nspin_from,
            price3_online_nspinto=price3_online_nspinto,
            price3_regup_from=price3_regup_from,
            price3_regupto=price3_regupto,
            price3_regdn_from=price3_regdn_from,
            price3_regdnto=price3_regdnto,
            price3_offline_nspin_from=price3_offline_nspin_from,
            price3_offline_nspinto=price3_offline_nspinto,
            quantity_mw3_from=quantity_mw3_from,
            quantity_mw3_to=quantity_mw3_to,
            block_indicator4=block_indicator4,
            price4_rrspfr_from=price4_rrspfr_from,
            price4_rrspfrto=price4_rrspfrto,
            price4_rrsffr_from=price4_rrsffr_from,
            price4_rrsffrto=price4_rrsffrto,
            price4_rrsufr_from=price4_rrsufr_from,
            price4_rrsufrto=price4_rrsufrto,
            price4_online_nspin_from=price4_online_nspin_from,
            price4_online_nspinto=price4_online_nspinto,
            price4_regup_from=price4_regup_from,
            price4_regupto=price4_regupto,
            price4_regdn_from=price4_regdn_from,
            price4_regdnto=price4_regdnto,
            price4_offline_nspin_from=price4_offline_nspin_from,
            price4_offline_nspinto=price4_offline_nspinto,
            quantity_mw4_from=quantity_mw4_from,
            quantity_mw4_to=quantity_mw4_to,
            block_indicator5=block_indicator5,
            price5_rrspfr_from=price5_rrspfr_from,
            price5_rrspfrto=price5_rrspfrto,
            price5_rrsffr_from=price5_rrsffr_from,
            price5_rrsffrto=price5_rrsffrto,
            price5_rrsufr_from=price5_rrsufr_from,
            price5_rrsufrto=price5_rrsufrto,
            price5_online_nspin_from=price5_online_nspin_from,
            price5_online_nspinto=price5_online_nspinto,
            price5_regup_from=price5_regup_from,
            price5_regupto=price5_regupto,
            price5_regdn_from=price5_regdn_from,
            price5_regdnto=price5_regdnto,
            price5_offline_nspin_from=price5_offline_nspin_from,
            price5_offline_nspinto=price5_offline_nspinto,
            quantity_mw5_from=quantity_mw5_from,
            quantity_mw5_to=quantity_mw5_to,
            nclr_flag=nclr_flag,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_data44_without_preload_content(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        dme_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        load_resource_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        multi_hour_block: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        block_indicator1: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price1_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw1_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw1_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator2: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price2_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw2_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw2_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator3: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price3_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw3_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw3_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator4: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price4_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw4_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw4_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator5: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price5_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw5_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw5_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        nclr_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """60 Day DAM Load Resources AS Offers

        60 Day DAM Load Resources AS Offers

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param dme_name: Format - abc123.
        :type dme_name: str
        :param load_resource_name: Format - abc123.
        :type load_resource_name: str
        :param multi_hour_block: Format - true | false.
        :type multi_hour_block: bool
        :param block_indicator1: Format - true | false.
        :type block_indicator1: bool
        :param price1_rrspfr_from: Format - ####.###.
        :type price1_rrspfr_from: float
        :param price1_rrspfrto: Format - ####.###.
        :type price1_rrspfrto: float
        :param price1_rrsffr_from: Format - ####.###.
        :type price1_rrsffr_from: float
        :param price1_rrsffrto: Format - ####.###.
        :type price1_rrsffrto: float
        :param price1_rrsufr_from: Format - ####.###.
        :type price1_rrsufr_from: float
        :param price1_rrsufrto: Format - ####.###.
        :type price1_rrsufrto: float
        :param price1_online_nspin_from: Format - ####.###.
        :type price1_online_nspin_from: float
        :param price1_online_nspinto: Format - ####.###.
        :type price1_online_nspinto: float
        :param price1_regup_from: Format - ####.###.
        :type price1_regup_from: float
        :param price1_regupto: Format - ####.###.
        :type price1_regupto: float
        :param price1_regdn_from: Format - ####.###.
        :type price1_regdn_from: float
        :param price1_regdnto: Format - ####.###.
        :type price1_regdnto: float
        :param price1_offline_nspin_from: Format - ####.###.
        :type price1_offline_nspin_from: float
        :param price1_offline_nspinto: Format - ####.###.
        :type price1_offline_nspinto: float
        :param quantity_mw1_from: Format - ###.
        :type quantity_mw1_from: int
        :param quantity_mw1_to: Format - ###.
        :type quantity_mw1_to: int
        :param block_indicator2: Format - true | false.
        :type block_indicator2: bool
        :param price2_rrspfr_from: Format - ####.###.
        :type price2_rrspfr_from: float
        :param price2_rrspfrto: Format - ####.###.
        :type price2_rrspfrto: float
        :param price2_rrsffr_from: Format - ####.###.
        :type price2_rrsffr_from: float
        :param price2_rrsffrto: Format - ####.###.
        :type price2_rrsffrto: float
        :param price2_rrsufr_from: Format - ####.###.
        :type price2_rrsufr_from: float
        :param price2_rrsufrto: Format - ####.###.
        :type price2_rrsufrto: float
        :param price2_online_nspin_from: Format - ####.###.
        :type price2_online_nspin_from: float
        :param price2_online_nspinto: Format - ####.###.
        :type price2_online_nspinto: float
        :param price2_regup_from: Format - ####.###.
        :type price2_regup_from: float
        :param price2_regupto: Format - ####.###.
        :type price2_regupto: float
        :param price2_regdn_from: Format - ####.###.
        :type price2_regdn_from: float
        :param price2_regdnto: Format - ####.###.
        :type price2_regdnto: float
        :param price2_offline_nspin_from: Format - ####.###.
        :type price2_offline_nspin_from: float
        :param price2_offline_nspinto: Format - ####.###.
        :type price2_offline_nspinto: float
        :param quantity_mw2_from: Format - ###.
        :type quantity_mw2_from: int
        :param quantity_mw2_to: Format - ###.
        :type quantity_mw2_to: int
        :param block_indicator3: Format - true | false.
        :type block_indicator3: bool
        :param price3_rrspfr_from: Format - ####.###.
        :type price3_rrspfr_from: float
        :param price3_rrspfrto: Format - ####.###.
        :type price3_rrspfrto: float
        :param price3_rrsffr_from: Format - ####.###.
        :type price3_rrsffr_from: float
        :param price3_rrsffrto: Format - ####.###.
        :type price3_rrsffrto: float
        :param price3_rrsufr_from: Format - ####.###.
        :type price3_rrsufr_from: float
        :param price3_rrsufrto: Format - ####.###.
        :type price3_rrsufrto: float
        :param price3_online_nspin_from: Format - ####.###.
        :type price3_online_nspin_from: float
        :param price3_online_nspinto: Format - ####.###.
        :type price3_online_nspinto: float
        :param price3_regup_from: Format - ####.###.
        :type price3_regup_from: float
        :param price3_regupto: Format - ####.###.
        :type price3_regupto: float
        :param price3_regdn_from: Format - ####.###.
        :type price3_regdn_from: float
        :param price3_regdnto: Format - ####.###.
        :type price3_regdnto: float
        :param price3_offline_nspin_from: Format - ####.###.
        :type price3_offline_nspin_from: float
        :param price3_offline_nspinto: Format - ####.###.
        :type price3_offline_nspinto: float
        :param quantity_mw3_from: Format - ###.
        :type quantity_mw3_from: int
        :param quantity_mw3_to: Format - ###.
        :type quantity_mw3_to: int
        :param block_indicator4: Format - true | false.
        :type block_indicator4: bool
        :param price4_rrspfr_from: Format - ####.###.
        :type price4_rrspfr_from: float
        :param price4_rrspfrto: Format - ####.###.
        :type price4_rrspfrto: float
        :param price4_rrsffr_from: Format - ####.###.
        :type price4_rrsffr_from: float
        :param price4_rrsffrto: Format - ####.###.
        :type price4_rrsffrto: float
        :param price4_rrsufr_from: Format - ####.###.
        :type price4_rrsufr_from: float
        :param price4_rrsufrto: Format - ####.###.
        :type price4_rrsufrto: float
        :param price4_online_nspin_from: Format - ####.###.
        :type price4_online_nspin_from: float
        :param price4_online_nspinto: Format - ####.###.
        :type price4_online_nspinto: float
        :param price4_regup_from: Format - ####.###.
        :type price4_regup_from: float
        :param price4_regupto: Format - ####.###.
        :type price4_regupto: float
        :param price4_regdn_from: Format - ####.###.
        :type price4_regdn_from: float
        :param price4_regdnto: Format - ####.###.
        :type price4_regdnto: float
        :param price4_offline_nspin_from: Format - ####.###.
        :type price4_offline_nspin_from: float
        :param price4_offline_nspinto: Format - ####.###.
        :type price4_offline_nspinto: float
        :param quantity_mw4_from: Format - ###.
        :type quantity_mw4_from: int
        :param quantity_mw4_to: Format - ###.
        :type quantity_mw4_to: int
        :param block_indicator5: Format - true | false.
        :type block_indicator5: bool
        :param price5_rrspfr_from: Format - ####.###.
        :type price5_rrspfr_from: float
        :param price5_rrspfrto: Format - ####.###.
        :type price5_rrspfrto: float
        :param price5_rrsffr_from: Format - ####.###.
        :type price5_rrsffr_from: float
        :param price5_rrsffrto: Format - ####.###.
        :type price5_rrsffrto: float
        :param price5_rrsufr_from: Format - ####.###.
        :type price5_rrsufr_from: float
        :param price5_rrsufrto: Format - ####.###.
        :type price5_rrsufrto: float
        :param price5_online_nspin_from: Format - ####.###.
        :type price5_online_nspin_from: float
        :param price5_online_nspinto: Format - ####.###.
        :type price5_online_nspinto: float
        :param price5_regup_from: Format - ####.###.
        :type price5_regup_from: float
        :param price5_regupto: Format - ####.###.
        :type price5_regupto: float
        :param price5_regdn_from: Format - ####.###.
        :type price5_regdn_from: float
        :param price5_regdnto: Format - ####.###.
        :type price5_regdnto: float
        :param price5_offline_nspin_from: Format - ####.###.
        :type price5_offline_nspin_from: float
        :param price5_offline_nspinto: Format - ####.###.
        :type price5_offline_nspinto: float
        :param quantity_mw5_from: Format - ###.
        :type quantity_mw5_from: int
        :param quantity_mw5_to: Format - ###.
        :type quantity_mw5_to: int
        :param nclr_flag: Format - true | false.
        :type nclr_flag: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data44_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            dme_name=dme_name,
            load_resource_name=load_resource_name,
            multi_hour_block=multi_hour_block,
            block_indicator1=block_indicator1,
            price1_rrspfr_from=price1_rrspfr_from,
            price1_rrspfrto=price1_rrspfrto,
            price1_rrsffr_from=price1_rrsffr_from,
            price1_rrsffrto=price1_rrsffrto,
            price1_rrsufr_from=price1_rrsufr_from,
            price1_rrsufrto=price1_rrsufrto,
            price1_online_nspin_from=price1_online_nspin_from,
            price1_online_nspinto=price1_online_nspinto,
            price1_regup_from=price1_regup_from,
            price1_regupto=price1_regupto,
            price1_regdn_from=price1_regdn_from,
            price1_regdnto=price1_regdnto,
            price1_offline_nspin_from=price1_offline_nspin_from,
            price1_offline_nspinto=price1_offline_nspinto,
            quantity_mw1_from=quantity_mw1_from,
            quantity_mw1_to=quantity_mw1_to,
            block_indicator2=block_indicator2,
            price2_rrspfr_from=price2_rrspfr_from,
            price2_rrspfrto=price2_rrspfrto,
            price2_rrsffr_from=price2_rrsffr_from,
            price2_rrsffrto=price2_rrsffrto,
            price2_rrsufr_from=price2_rrsufr_from,
            price2_rrsufrto=price2_rrsufrto,
            price2_online_nspin_from=price2_online_nspin_from,
            price2_online_nspinto=price2_online_nspinto,
            price2_regup_from=price2_regup_from,
            price2_regupto=price2_regupto,
            price2_regdn_from=price2_regdn_from,
            price2_regdnto=price2_regdnto,
            price2_offline_nspin_from=price2_offline_nspin_from,
            price2_offline_nspinto=price2_offline_nspinto,
            quantity_mw2_from=quantity_mw2_from,
            quantity_mw2_to=quantity_mw2_to,
            block_indicator3=block_indicator3,
            price3_rrspfr_from=price3_rrspfr_from,
            price3_rrspfrto=price3_rrspfrto,
            price3_rrsffr_from=price3_rrsffr_from,
            price3_rrsffrto=price3_rrsffrto,
            price3_rrsufr_from=price3_rrsufr_from,
            price3_rrsufrto=price3_rrsufrto,
            price3_online_nspin_from=price3_online_nspin_from,
            price3_online_nspinto=price3_online_nspinto,
            price3_regup_from=price3_regup_from,
            price3_regupto=price3_regupto,
            price3_regdn_from=price3_regdn_from,
            price3_regdnto=price3_regdnto,
            price3_offline_nspin_from=price3_offline_nspin_from,
            price3_offline_nspinto=price3_offline_nspinto,
            quantity_mw3_from=quantity_mw3_from,
            quantity_mw3_to=quantity_mw3_to,
            block_indicator4=block_indicator4,
            price4_rrspfr_from=price4_rrspfr_from,
            price4_rrspfrto=price4_rrspfrto,
            price4_rrsffr_from=price4_rrsffr_from,
            price4_rrsffrto=price4_rrsffrto,
            price4_rrsufr_from=price4_rrsufr_from,
            price4_rrsufrto=price4_rrsufrto,
            price4_online_nspin_from=price4_online_nspin_from,
            price4_online_nspinto=price4_online_nspinto,
            price4_regup_from=price4_regup_from,
            price4_regupto=price4_regupto,
            price4_regdn_from=price4_regdn_from,
            price4_regdnto=price4_regdnto,
            price4_offline_nspin_from=price4_offline_nspin_from,
            price4_offline_nspinto=price4_offline_nspinto,
            quantity_mw4_from=quantity_mw4_from,
            quantity_mw4_to=quantity_mw4_to,
            block_indicator5=block_indicator5,
            price5_rrspfr_from=price5_rrspfr_from,
            price5_rrspfrto=price5_rrspfrto,
            price5_rrsffr_from=price5_rrsffr_from,
            price5_rrsffrto=price5_rrsffrto,
            price5_rrsufr_from=price5_rrsufr_from,
            price5_rrsufrto=price5_rrsufrto,
            price5_online_nspin_from=price5_online_nspin_from,
            price5_online_nspinto=price5_online_nspinto,
            price5_regup_from=price5_regup_from,
            price5_regupto=price5_regupto,
            price5_regdn_from=price5_regdn_from,
            price5_regdnto=price5_regdnto,
            price5_offline_nspin_from=price5_offline_nspin_from,
            price5_offline_nspinto=price5_offline_nspinto,
            quantity_mw5_from=quantity_mw5_from,
            quantity_mw5_to=quantity_mw5_to,
            nclr_flag=nclr_flag,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_data44_serialize(
        self,
        ocp_apim_subscription_key,
        delivery_date_from,
        delivery_date_to,
        hour_ending_from,
        hour_ending_to,
        qse_name,
        dme_name,
        load_resource_name,
        multi_hour_block,
        block_indicator1,
        price1_rrspfr_from,
        price1_rrspfrto,
        price1_rrsffr_from,
        price1_rrsffrto,
        price1_rrsufr_from,
        price1_rrsufrto,
        price1_online_nspin_from,
        price1_online_nspinto,
        price1_regup_from,
        price1_regupto,
        price1_regdn_from,
        price1_regdnto,
        price1_offline_nspin_from,
        price1_offline_nspinto,
        quantity_mw1_from,
        quantity_mw1_to,
        block_indicator2,
        price2_rrspfr_from,
        price2_rrspfrto,
        price2_rrsffr_from,
        price2_rrsffrto,
        price2_rrsufr_from,
        price2_rrsufrto,
        price2_online_nspin_from,
        price2_online_nspinto,
        price2_regup_from,
        price2_regupto,
        price2_regdn_from,
        price2_regdnto,
        price2_offline_nspin_from,
        price2_offline_nspinto,
        quantity_mw2_from,
        quantity_mw2_to,
        block_indicator3,
        price3_rrspfr_from,
        price3_rrspfrto,
        price3_rrsffr_from,
        price3_rrsffrto,
        price3_rrsufr_from,
        price3_rrsufrto,
        price3_online_nspin_from,
        price3_online_nspinto,
        price3_regup_from,
        price3_regupto,
        price3_regdn_from,
        price3_regdnto,
        price3_offline_nspin_from,
        price3_offline_nspinto,
        quantity_mw3_from,
        quantity_mw3_to,
        block_indicator4,
        price4_rrspfr_from,
        price4_rrspfrto,
        price4_rrsffr_from,
        price4_rrsffrto,
        price4_rrsufr_from,
        price4_rrsufrto,
        price4_online_nspin_from,
        price4_online_nspinto,
        price4_regup_from,
        price4_regupto,
        price4_regdn_from,
        price4_regdnto,
        price4_offline_nspin_from,
        price4_offline_nspinto,
        quantity_mw4_from,
        quantity_mw4_to,
        block_indicator5,
        price5_rrspfr_from,
        price5_rrspfrto,
        price5_rrsffr_from,
        price5_rrsffrto,
        price5_rrsufr_from,
        price5_rrsufrto,
        price5_online_nspin_from,
        price5_online_nspinto,
        price5_regup_from,
        price5_regupto,
        price5_regdn_from,
        price5_regdnto,
        price5_offline_nspin_from,
        price5_offline_nspinto,
        quantity_mw5_from,
        quantity_mw5_to,
        nclr_flag,
        page,
        size,
        sort,
        dir,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if delivery_date_from is not None:
            
            _query_params.append(('deliveryDateFrom', delivery_date_from))
            
        if delivery_date_to is not None:
            
            _query_params.append(('deliveryDateTo', delivery_date_to))
            
        if hour_ending_from is not None:
            
            _query_params.append(('hourEndingFrom', hour_ending_from))
            
        if hour_ending_to is not None:
            
            _query_params.append(('hourEndingTo', hour_ending_to))
            
        if qse_name is not None:
            
            _query_params.append(('qseName', qse_name))
            
        if dme_name is not None:
            
            _query_params.append(('dmeName', dme_name))
            
        if load_resource_name is not None:
            
            _query_params.append(('loadResourceName', load_resource_name))
            
        if multi_hour_block is not None:
            
            _query_params.append(('multiHourBlock', multi_hour_block))
            
        if block_indicator1 is not None:
            
            _query_params.append(('blockIndicator1', block_indicator1))
            
        if price1_rrspfr_from is not None:
            
            _query_params.append(('price1RRSPFRFrom', price1_rrspfr_from))
            
        if price1_rrspfrto is not None:
            
            _query_params.append(('price1RRSPFRTo', price1_rrspfrto))
            
        if price1_rrsffr_from is not None:
            
            _query_params.append(('price1RRSFFRFrom', price1_rrsffr_from))
            
        if price1_rrsffrto is not None:
            
            _query_params.append(('price1RRSFFRTo', price1_rrsffrto))
            
        if price1_rrsufr_from is not None:
            
            _query_params.append(('price1RRSUFRFrom', price1_rrsufr_from))
            
        if price1_rrsufrto is not None:
            
            _query_params.append(('price1RRSUFRTo', price1_rrsufrto))
            
        if price1_online_nspin_from is not None:
            
            _query_params.append(('price1OnlineNSPINFrom', price1_online_nspin_from))
            
        if price1_online_nspinto is not None:
            
            _query_params.append(('price1OnlineNSPINTo', price1_online_nspinto))
            
        if price1_regup_from is not None:
            
            _query_params.append(('price1REGUPFrom', price1_regup_from))
            
        if price1_regupto is not None:
            
            _query_params.append(('price1REGUPTo', price1_regupto))
            
        if price1_regdn_from is not None:
            
            _query_params.append(('price1REGDNFrom', price1_regdn_from))
            
        if price1_regdnto is not None:
            
            _query_params.append(('price1REGDNTo', price1_regdnto))
            
        if price1_offline_nspin_from is not None:
            
            _query_params.append(('price1OfflineNSPINFrom', price1_offline_nspin_from))
            
        if price1_offline_nspinto is not None:
            
            _query_params.append(('price1OfflineNSPINTo', price1_offline_nspinto))
            
        if quantity_mw1_from is not None:
            
            _query_params.append(('quantityMW1From', quantity_mw1_from))
            
        if quantity_mw1_to is not None:
            
            _query_params.append(('quantityMW1To', quantity_mw1_to))
            
        if block_indicator2 is not None:
            
            _query_params.append(('blockIndicator2', block_indicator2))
            
        if price2_rrspfr_from is not None:
            
            _query_params.append(('price2RRSPFRFrom', price2_rrspfr_from))
            
        if price2_rrspfrto is not None:
            
            _query_params.append(('price2RRSPFRTo', price2_rrspfrto))
            
        if price2_rrsffr_from is not None:
            
            _query_params.append(('price2RRSFFRFrom', price2_rrsffr_from))
            
        if price2_rrsffrto is not None:
            
            _query_params.append(('price2RRSFFRTo', price2_rrsffrto))
            
        if price2_rrsufr_from is not None:
            
            _query_params.append(('price2RRSUFRFrom', price2_rrsufr_from))
            
        if price2_rrsufrto is not None:
            
            _query_params.append(('price2RRSUFRTo', price2_rrsufrto))
            
        if price2_online_nspin_from is not None:
            
            _query_params.append(('price2OnlineNSPINFrom', price2_online_nspin_from))
            
        if price2_online_nspinto is not None:
            
            _query_params.append(('price2OnlineNSPINTo', price2_online_nspinto))
            
        if price2_regup_from is not None:
            
            _query_params.append(('price2REGUPFrom', price2_regup_from))
            
        if price2_regupto is not None:
            
            _query_params.append(('price2REGUPTo', price2_regupto))
            
        if price2_regdn_from is not None:
            
            _query_params.append(('price2REGDNFrom', price2_regdn_from))
            
        if price2_regdnto is not None:
            
            _query_params.append(('price2REGDNTo', price2_regdnto))
            
        if price2_offline_nspin_from is not None:
            
            _query_params.append(('price2OfflineNSPINFrom', price2_offline_nspin_from))
            
        if price2_offline_nspinto is not None:
            
            _query_params.append(('price2OfflineNSPINTo', price2_offline_nspinto))
            
        if quantity_mw2_from is not None:
            
            _query_params.append(('quantityMW2From', quantity_mw2_from))
            
        if quantity_mw2_to is not None:
            
            _query_params.append(('quantityMW2To', quantity_mw2_to))
            
        if block_indicator3 is not None:
            
            _query_params.append(('blockIndicator3', block_indicator3))
            
        if price3_rrspfr_from is not None:
            
            _query_params.append(('price3RRSPFRFrom', price3_rrspfr_from))
            
        if price3_rrspfrto is not None:
            
            _query_params.append(('price3RRSPFRTo', price3_rrspfrto))
            
        if price3_rrsffr_from is not None:
            
            _query_params.append(('price3RRSFFRFrom', price3_rrsffr_from))
            
        if price3_rrsffrto is not None:
            
            _query_params.append(('price3RRSFFRTo', price3_rrsffrto))
            
        if price3_rrsufr_from is not None:
            
            _query_params.append(('price3RRSUFRFrom', price3_rrsufr_from))
            
        if price3_rrsufrto is not None:
            
            _query_params.append(('price3RRSUFRTo', price3_rrsufrto))
            
        if price3_online_nspin_from is not None:
            
            _query_params.append(('price3OnlineNSPINFrom', price3_online_nspin_from))
            
        if price3_online_nspinto is not None:
            
            _query_params.append(('price3OnlineNSPINTo', price3_online_nspinto))
            
        if price3_regup_from is not None:
            
            _query_params.append(('price3REGUPFrom', price3_regup_from))
            
        if price3_regupto is not None:
            
            _query_params.append(('price3REGUPTo', price3_regupto))
            
        if price3_regdn_from is not None:
            
            _query_params.append(('price3REGDNFrom', price3_regdn_from))
            
        if price3_regdnto is not None:
            
            _query_params.append(('price3REGDNTo', price3_regdnto))
            
        if price3_offline_nspin_from is not None:
            
            _query_params.append(('price3OfflineNSPINFrom', price3_offline_nspin_from))
            
        if price3_offline_nspinto is not None:
            
            _query_params.append(('price3OfflineNSPINTo', price3_offline_nspinto))
            
        if quantity_mw3_from is not None:
            
            _query_params.append(('quantityMW3From', quantity_mw3_from))
            
        if quantity_mw3_to is not None:
            
            _query_params.append(('quantityMW3To', quantity_mw3_to))
            
        if block_indicator4 is not None:
            
            _query_params.append(('blockIndicator4', block_indicator4))
            
        if price4_rrspfr_from is not None:
            
            _query_params.append(('price4RRSPFRFrom', price4_rrspfr_from))
            
        if price4_rrspfrto is not None:
            
            _query_params.append(('price4RRSPFRTo', price4_rrspfrto))
            
        if price4_rrsffr_from is not None:
            
            _query_params.append(('price4RRSFFRFrom', price4_rrsffr_from))
            
        if price4_rrsffrto is not None:
            
            _query_params.append(('price4RRSFFRTo', price4_rrsffrto))
            
        if price4_rrsufr_from is not None:
            
            _query_params.append(('price4RRSUFRFrom', price4_rrsufr_from))
            
        if price4_rrsufrto is not None:
            
            _query_params.append(('price4RRSUFRTo', price4_rrsufrto))
            
        if price4_online_nspin_from is not None:
            
            _query_params.append(('price4OnlineNSPINFrom', price4_online_nspin_from))
            
        if price4_online_nspinto is not None:
            
            _query_params.append(('price4OnlineNSPINTo', price4_online_nspinto))
            
        if price4_regup_from is not None:
            
            _query_params.append(('price4REGUPFrom', price4_regup_from))
            
        if price4_regupto is not None:
            
            _query_params.append(('price4REGUPTo', price4_regupto))
            
        if price4_regdn_from is not None:
            
            _query_params.append(('price4REGDNFrom', price4_regdn_from))
            
        if price4_regdnto is not None:
            
            _query_params.append(('price4REGDNTo', price4_regdnto))
            
        if price4_offline_nspin_from is not None:
            
            _query_params.append(('price4OfflineNSPINFrom', price4_offline_nspin_from))
            
        if price4_offline_nspinto is not None:
            
            _query_params.append(('price4OfflineNSPINTo', price4_offline_nspinto))
            
        if quantity_mw4_from is not None:
            
            _query_params.append(('quantityMW4From', quantity_mw4_from))
            
        if quantity_mw4_to is not None:
            
            _query_params.append(('quantityMW4To', quantity_mw4_to))
            
        if block_indicator5 is not None:
            
            _query_params.append(('blockIndicator5', block_indicator5))
            
        if price5_rrspfr_from is not None:
            
            _query_params.append(('price5RRSPFRFrom', price5_rrspfr_from))
            
        if price5_rrspfrto is not None:
            
            _query_params.append(('price5RRSPFRTo', price5_rrspfrto))
            
        if price5_rrsffr_from is not None:
            
            _query_params.append(('price5RRSFFRFrom', price5_rrsffr_from))
            
        if price5_rrsffrto is not None:
            
            _query_params.append(('price5RRSFFRTo', price5_rrsffrto))
            
        if price5_rrsufr_from is not None:
            
            _query_params.append(('price5RRSUFRFrom', price5_rrsufr_from))
            
        if price5_rrsufrto is not None:
            
            _query_params.append(('price5RRSUFRTo', price5_rrsufrto))
            
        if price5_online_nspin_from is not None:
            
            _query_params.append(('price5OnlineNSPINFrom', price5_online_nspin_from))
            
        if price5_online_nspinto is not None:
            
            _query_params.append(('price5OnlineNSPINTo', price5_online_nspinto))
            
        if price5_regup_from is not None:
            
            _query_params.append(('price5REGUPFrom', price5_regup_from))
            
        if price5_regupto is not None:
            
            _query_params.append(('price5REGUPTo', price5_regupto))
            
        if price5_regdn_from is not None:
            
            _query_params.append(('price5REGDNFrom', price5_regdn_from))
            
        if price5_regdnto is not None:
            
            _query_params.append(('price5REGDNTo', price5_regdnto))
            
        if price5_offline_nspin_from is not None:
            
            _query_params.append(('price5OfflineNSPINFrom', price5_offline_nspin_from))
            
        if price5_offline_nspinto is not None:
            
            _query_params.append(('price5OfflineNSPINTo', price5_offline_nspinto))
            
        if quantity_mw5_from is not None:
            
            _query_params.append(('quantityMW5From', quantity_mw5_from))
            
        if quantity_mw5_to is not None:
            
            _query_params.append(('quantityMW5To', quantity_mw5_to))
            
        if nclr_flag is not None:
            
            _query_params.append(('NCLRFlag', nclr_flag))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if dir is not None:
            
            _query_params.append(('dir', dir))
            
        # process the header parameters
        if ocp_apim_subscription_key is not None:
            _header_params['Ocp-Apim-Subscription-Key'] = ocp_apim_subscription_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/np3-966-er/60_dam_load_res_as_offers',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_data45(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        dme_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        resource_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        resource_type: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        qse_submitted_curve_mw1_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw1_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price1_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price1_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw2_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw2_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price2_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price2_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw3_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw3_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price3_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price3_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw4_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw4_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price4_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price4_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw5_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw5_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price5_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price5_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw6_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw6_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price6_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price6_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw7_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw7_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price7_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price7_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw8_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw8_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price8_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price8_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw9_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw9_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price9_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price9_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw10_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw10_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price10_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price10_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        start_up_hot_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        start_up_hot_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        start_up_inter_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        start_up_inter_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        start_up_cold_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        start_up_cold_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        min_gen_cost_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        min_gen_cost_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        hsl_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        hslto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lsl_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lslto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        resource_status: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        awarded_quantity_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        awarded_quantity_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        settlement_point_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        energy_settlement_point_price_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_settlement_point_price_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regup_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regup_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regupmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regupmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdn_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdn_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdnmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdnmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrspfr_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrspfr_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsffr_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsffr_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsufr_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsufr_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspin_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspin_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspinmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspinmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Report:
        """60 Day DAM Generation Resource Data

        60 Day DAM Generation Resource Data

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param dme_name: Format - abc123.
        :type dme_name: str
        :param resource_name: Format - abc123.
        :type resource_name: str
        :param resource_type: Format - abc123.
        :type resource_type: str
        :param qse_submitted_curve_mw1_from: Format - ####.###.
        :type qse_submitted_curve_mw1_from: float
        :param qse_submitted_curve_mw1_to: Format - ####.###.
        :type qse_submitted_curve_mw1_to: float
        :param qse_submitted_curve_price1_from: Format - ####.###.
        :type qse_submitted_curve_price1_from: float
        :param qse_submitted_curve_price1_to: Format - ####.###.
        :type qse_submitted_curve_price1_to: float
        :param qse_submitted_curve_mw2_from: Format - ####.###.
        :type qse_submitted_curve_mw2_from: float
        :param qse_submitted_curve_mw2_to: Format - ####.###.
        :type qse_submitted_curve_mw2_to: float
        :param qse_submitted_curve_price2_from: Format - ####.###.
        :type qse_submitted_curve_price2_from: float
        :param qse_submitted_curve_price2_to: Format - ####.###.
        :type qse_submitted_curve_price2_to: float
        :param qse_submitted_curve_mw3_from: Format - ####.###.
        :type qse_submitted_curve_mw3_from: float
        :param qse_submitted_curve_mw3_to: Format - ####.###.
        :type qse_submitted_curve_mw3_to: float
        :param qse_submitted_curve_price3_from: Format - ####.###.
        :type qse_submitted_curve_price3_from: float
        :param qse_submitted_curve_price3_to: Format - ####.###.
        :type qse_submitted_curve_price3_to: float
        :param qse_submitted_curve_mw4_from: Format - ####.###.
        :type qse_submitted_curve_mw4_from: float
        :param qse_submitted_curve_mw4_to: Format - ####.###.
        :type qse_submitted_curve_mw4_to: float
        :param qse_submitted_curve_price4_from: Format - ####.###.
        :type qse_submitted_curve_price4_from: float
        :param qse_submitted_curve_price4_to: Format - ####.###.
        :type qse_submitted_curve_price4_to: float
        :param qse_submitted_curve_mw5_from: Format - ####.###.
        :type qse_submitted_curve_mw5_from: float
        :param qse_submitted_curve_mw5_to: Format - ####.###.
        :type qse_submitted_curve_mw5_to: float
        :param qse_submitted_curve_price5_from: Format - ####.###.
        :type qse_submitted_curve_price5_from: float
        :param qse_submitted_curve_price5_to: Format - ####.###.
        :type qse_submitted_curve_price5_to: float
        :param qse_submitted_curve_mw6_from: Format - ####.###.
        :type qse_submitted_curve_mw6_from: float
        :param qse_submitted_curve_mw6_to: Format - ####.###.
        :type qse_submitted_curve_mw6_to: float
        :param qse_submitted_curve_price6_from: Format - ####.###.
        :type qse_submitted_curve_price6_from: float
        :param qse_submitted_curve_price6_to: Format - ####.###.
        :type qse_submitted_curve_price6_to: float
        :param qse_submitted_curve_mw7_from: Format - ####.###.
        :type qse_submitted_curve_mw7_from: float
        :param qse_submitted_curve_mw7_to: Format - ####.###.
        :type qse_submitted_curve_mw7_to: float
        :param qse_submitted_curve_price7_from: Format - ####.###.
        :type qse_submitted_curve_price7_from: float
        :param qse_submitted_curve_price7_to: Format - ####.###.
        :type qse_submitted_curve_price7_to: float
        :param qse_submitted_curve_mw8_from: Format - ####.###.
        :type qse_submitted_curve_mw8_from: float
        :param qse_submitted_curve_mw8_to: Format - ####.###.
        :type qse_submitted_curve_mw8_to: float
        :param qse_submitted_curve_price8_from: Format - ####.###.
        :type qse_submitted_curve_price8_from: float
        :param qse_submitted_curve_price8_to: Format - ####.###.
        :type qse_submitted_curve_price8_to: float
        :param qse_submitted_curve_mw9_from: Format - ####.###.
        :type qse_submitted_curve_mw9_from: float
        :param qse_submitted_curve_mw9_to: Format - ####.###.
        :type qse_submitted_curve_mw9_to: float
        :param qse_submitted_curve_price9_from: Format - ####.###.
        :type qse_submitted_curve_price9_from: float
        :param qse_submitted_curve_price9_to: Format - ####.###.
        :type qse_submitted_curve_price9_to: float
        :param qse_submitted_curve_mw10_from: Format - ####.###.
        :type qse_submitted_curve_mw10_from: float
        :param qse_submitted_curve_mw10_to: Format - ####.###.
        :type qse_submitted_curve_mw10_to: float
        :param qse_submitted_curve_price10_from: Format - ####.###.
        :type qse_submitted_curve_price10_from: float
        :param qse_submitted_curve_price10_to: Format - ####.###.
        :type qse_submitted_curve_price10_to: float
        :param start_up_hot_from: Format - ####.###.
        :type start_up_hot_from: float
        :param start_up_hot_to: Format - ####.###.
        :type start_up_hot_to: float
        :param start_up_inter_from: Format - ####.###.
        :type start_up_inter_from: float
        :param start_up_inter_to: Format - ####.###.
        :type start_up_inter_to: float
        :param start_up_cold_from: Format - ####.###.
        :type start_up_cold_from: float
        :param start_up_cold_to: Format - ####.###.
        :type start_up_cold_to: float
        :param min_gen_cost_from: Format - ####.###.
        :type min_gen_cost_from: float
        :param min_gen_cost_to: Format - ####.###.
        :type min_gen_cost_to: float
        :param hsl_from: Format - ####.###.
        :type hsl_from: float
        :param hslto: Format - ####.###.
        :type hslto: float
        :param lsl_from: Format - ####.###.
        :type lsl_from: float
        :param lslto: Format - ####.###.
        :type lslto: float
        :param resource_status: Format - abc123.
        :type resource_status: str
        :param awarded_quantity_from: Format - ###.
        :type awarded_quantity_from: int
        :param awarded_quantity_to: Format - ###.
        :type awarded_quantity_to: int
        :param settlement_point_name: Format - abc123.
        :type settlement_point_name: str
        :param energy_settlement_point_price_from: Format - ####.###.
        :type energy_settlement_point_price_from: float
        :param energy_settlement_point_price_to: Format - ####.###.
        :type energy_settlement_point_price_to: float
        :param regup_awarded_from: Format - ####.###.
        :type regup_awarded_from: float
        :param regup_awarded_to: Format - ####.###.
        :type regup_awarded_to: float
        :param regupmcpc_from: Format - ####.###.
        :type regupmcpc_from: float
        :param regupmcpcto: Format - ####.###.
        :type regupmcpcto: float
        :param regdn_awarded_from: Format - ####.###.
        :type regdn_awarded_from: float
        :param regdn_awarded_to: Format - ####.###.
        :type regdn_awarded_to: float
        :param regdnmcpc_from: Format - ####.###.
        :type regdnmcpc_from: float
        :param regdnmcpcto: Format - ####.###.
        :type regdnmcpcto: float
        :param rrspfr_awarded_from: Format - ####.###.
        :type rrspfr_awarded_from: float
        :param rrspfr_awarded_to: Format - ####.###.
        :type rrspfr_awarded_to: float
        :param rrsffr_awarded_from: Format - ####.###.
        :type rrsffr_awarded_from: float
        :param rrsffr_awarded_to: Format - ####.###.
        :type rrsffr_awarded_to: float
        :param rrsufr_awarded_from: Format - ####.###.
        :type rrsufr_awarded_from: float
        :param rrsufr_awarded_to: Format - ####.###.
        :type rrsufr_awarded_to: float
        :param rrsmcpc_from: Format - ####.###.
        :type rrsmcpc_from: float
        :param rrsmcpcto: Format - ####.###.
        :type rrsmcpcto: float
        :param nspin_awarded_from: Format - ####.###.
        :type nspin_awarded_from: float
        :param nspin_awarded_to: Format - ####.###.
        :type nspin_awarded_to: float
        :param nspinmcpc_from: Format - ####.###.
        :type nspinmcpc_from: float
        :param nspinmcpcto: Format - ####.###.
        :type nspinmcpcto: float
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data45_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            dme_name=dme_name,
            resource_name=resource_name,
            resource_type=resource_type,
            qse_submitted_curve_mw1_from=qse_submitted_curve_mw1_from,
            qse_submitted_curve_mw1_to=qse_submitted_curve_mw1_to,
            qse_submitted_curve_price1_from=qse_submitted_curve_price1_from,
            qse_submitted_curve_price1_to=qse_submitted_curve_price1_to,
            qse_submitted_curve_mw2_from=qse_submitted_curve_mw2_from,
            qse_submitted_curve_mw2_to=qse_submitted_curve_mw2_to,
            qse_submitted_curve_price2_from=qse_submitted_curve_price2_from,
            qse_submitted_curve_price2_to=qse_submitted_curve_price2_to,
            qse_submitted_curve_mw3_from=qse_submitted_curve_mw3_from,
            qse_submitted_curve_mw3_to=qse_submitted_curve_mw3_to,
            qse_submitted_curve_price3_from=qse_submitted_curve_price3_from,
            qse_submitted_curve_price3_to=qse_submitted_curve_price3_to,
            qse_submitted_curve_mw4_from=qse_submitted_curve_mw4_from,
            qse_submitted_curve_mw4_to=qse_submitted_curve_mw4_to,
            qse_submitted_curve_price4_from=qse_submitted_curve_price4_from,
            qse_submitted_curve_price4_to=qse_submitted_curve_price4_to,
            qse_submitted_curve_mw5_from=qse_submitted_curve_mw5_from,
            qse_submitted_curve_mw5_to=qse_submitted_curve_mw5_to,
            qse_submitted_curve_price5_from=qse_submitted_curve_price5_from,
            qse_submitted_curve_price5_to=qse_submitted_curve_price5_to,
            qse_submitted_curve_mw6_from=qse_submitted_curve_mw6_from,
            qse_submitted_curve_mw6_to=qse_submitted_curve_mw6_to,
            qse_submitted_curve_price6_from=qse_submitted_curve_price6_from,
            qse_submitted_curve_price6_to=qse_submitted_curve_price6_to,
            qse_submitted_curve_mw7_from=qse_submitted_curve_mw7_from,
            qse_submitted_curve_mw7_to=qse_submitted_curve_mw7_to,
            qse_submitted_curve_price7_from=qse_submitted_curve_price7_from,
            qse_submitted_curve_price7_to=qse_submitted_curve_price7_to,
            qse_submitted_curve_mw8_from=qse_submitted_curve_mw8_from,
            qse_submitted_curve_mw8_to=qse_submitted_curve_mw8_to,
            qse_submitted_curve_price8_from=qse_submitted_curve_price8_from,
            qse_submitted_curve_price8_to=qse_submitted_curve_price8_to,
            qse_submitted_curve_mw9_from=qse_submitted_curve_mw9_from,
            qse_submitted_curve_mw9_to=qse_submitted_curve_mw9_to,
            qse_submitted_curve_price9_from=qse_submitted_curve_price9_from,
            qse_submitted_curve_price9_to=qse_submitted_curve_price9_to,
            qse_submitted_curve_mw10_from=qse_submitted_curve_mw10_from,
            qse_submitted_curve_mw10_to=qse_submitted_curve_mw10_to,
            qse_submitted_curve_price10_from=qse_submitted_curve_price10_from,
            qse_submitted_curve_price10_to=qse_submitted_curve_price10_to,
            start_up_hot_from=start_up_hot_from,
            start_up_hot_to=start_up_hot_to,
            start_up_inter_from=start_up_inter_from,
            start_up_inter_to=start_up_inter_to,
            start_up_cold_from=start_up_cold_from,
            start_up_cold_to=start_up_cold_to,
            min_gen_cost_from=min_gen_cost_from,
            min_gen_cost_to=min_gen_cost_to,
            hsl_from=hsl_from,
            hslto=hslto,
            lsl_from=lsl_from,
            lslto=lslto,
            resource_status=resource_status,
            awarded_quantity_from=awarded_quantity_from,
            awarded_quantity_to=awarded_quantity_to,
            settlement_point_name=settlement_point_name,
            energy_settlement_point_price_from=energy_settlement_point_price_from,
            energy_settlement_point_price_to=energy_settlement_point_price_to,
            regup_awarded_from=regup_awarded_from,
            regup_awarded_to=regup_awarded_to,
            regupmcpc_from=regupmcpc_from,
            regupmcpcto=regupmcpcto,
            regdn_awarded_from=regdn_awarded_from,
            regdn_awarded_to=regdn_awarded_to,
            regdnmcpc_from=regdnmcpc_from,
            regdnmcpcto=regdnmcpcto,
            rrspfr_awarded_from=rrspfr_awarded_from,
            rrspfr_awarded_to=rrspfr_awarded_to,
            rrsffr_awarded_from=rrsffr_awarded_from,
            rrsffr_awarded_to=rrsffr_awarded_to,
            rrsufr_awarded_from=rrsufr_awarded_from,
            rrsufr_awarded_to=rrsufr_awarded_to,
            rrsmcpc_from=rrsmcpc_from,
            rrsmcpcto=rrsmcpcto,
            nspin_awarded_from=nspin_awarded_from,
            nspin_awarded_to=nspin_awarded_to,
            nspinmcpc_from=nspinmcpc_from,
            nspinmcpcto=nspinmcpcto,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_data45_with_http_info(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        dme_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        resource_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        resource_type: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        qse_submitted_curve_mw1_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw1_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price1_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price1_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw2_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw2_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price2_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price2_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw3_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw3_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price3_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price3_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw4_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw4_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price4_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price4_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw5_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw5_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price5_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price5_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw6_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw6_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price6_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price6_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw7_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw7_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price7_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price7_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw8_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw8_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price8_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price8_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw9_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw9_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price9_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price9_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw10_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw10_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price10_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price10_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        start_up_hot_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        start_up_hot_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        start_up_inter_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        start_up_inter_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        start_up_cold_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        start_up_cold_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        min_gen_cost_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        min_gen_cost_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        hsl_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        hslto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lsl_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lslto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        resource_status: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        awarded_quantity_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        awarded_quantity_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        settlement_point_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        energy_settlement_point_price_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_settlement_point_price_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regup_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regup_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regupmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regupmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdn_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdn_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdnmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdnmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrspfr_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrspfr_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsffr_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsffr_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsufr_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsufr_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspin_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspin_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspinmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspinmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Report]:
        """60 Day DAM Generation Resource Data

        60 Day DAM Generation Resource Data

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param dme_name: Format - abc123.
        :type dme_name: str
        :param resource_name: Format - abc123.
        :type resource_name: str
        :param resource_type: Format - abc123.
        :type resource_type: str
        :param qse_submitted_curve_mw1_from: Format - ####.###.
        :type qse_submitted_curve_mw1_from: float
        :param qse_submitted_curve_mw1_to: Format - ####.###.
        :type qse_submitted_curve_mw1_to: float
        :param qse_submitted_curve_price1_from: Format - ####.###.
        :type qse_submitted_curve_price1_from: float
        :param qse_submitted_curve_price1_to: Format - ####.###.
        :type qse_submitted_curve_price1_to: float
        :param qse_submitted_curve_mw2_from: Format - ####.###.
        :type qse_submitted_curve_mw2_from: float
        :param qse_submitted_curve_mw2_to: Format - ####.###.
        :type qse_submitted_curve_mw2_to: float
        :param qse_submitted_curve_price2_from: Format - ####.###.
        :type qse_submitted_curve_price2_from: float
        :param qse_submitted_curve_price2_to: Format - ####.###.
        :type qse_submitted_curve_price2_to: float
        :param qse_submitted_curve_mw3_from: Format - ####.###.
        :type qse_submitted_curve_mw3_from: float
        :param qse_submitted_curve_mw3_to: Format - ####.###.
        :type qse_submitted_curve_mw3_to: float
        :param qse_submitted_curve_price3_from: Format - ####.###.
        :type qse_submitted_curve_price3_from: float
        :param qse_submitted_curve_price3_to: Format - ####.###.
        :type qse_submitted_curve_price3_to: float
        :param qse_submitted_curve_mw4_from: Format - ####.###.
        :type qse_submitted_curve_mw4_from: float
        :param qse_submitted_curve_mw4_to: Format - ####.###.
        :type qse_submitted_curve_mw4_to: float
        :param qse_submitted_curve_price4_from: Format - ####.###.
        :type qse_submitted_curve_price4_from: float
        :param qse_submitted_curve_price4_to: Format - ####.###.
        :type qse_submitted_curve_price4_to: float
        :param qse_submitted_curve_mw5_from: Format - ####.###.
        :type qse_submitted_curve_mw5_from: float
        :param qse_submitted_curve_mw5_to: Format - ####.###.
        :type qse_submitted_curve_mw5_to: float
        :param qse_submitted_curve_price5_from: Format - ####.###.
        :type qse_submitted_curve_price5_from: float
        :param qse_submitted_curve_price5_to: Format - ####.###.
        :type qse_submitted_curve_price5_to: float
        :param qse_submitted_curve_mw6_from: Format - ####.###.
        :type qse_submitted_curve_mw6_from: float
        :param qse_submitted_curve_mw6_to: Format - ####.###.
        :type qse_submitted_curve_mw6_to: float
        :param qse_submitted_curve_price6_from: Format - ####.###.
        :type qse_submitted_curve_price6_from: float
        :param qse_submitted_curve_price6_to: Format - ####.###.
        :type qse_submitted_curve_price6_to: float
        :param qse_submitted_curve_mw7_from: Format - ####.###.
        :type qse_submitted_curve_mw7_from: float
        :param qse_submitted_curve_mw7_to: Format - ####.###.
        :type qse_submitted_curve_mw7_to: float
        :param qse_submitted_curve_price7_from: Format - ####.###.
        :type qse_submitted_curve_price7_from: float
        :param qse_submitted_curve_price7_to: Format - ####.###.
        :type qse_submitted_curve_price7_to: float
        :param qse_submitted_curve_mw8_from: Format - ####.###.
        :type qse_submitted_curve_mw8_from: float
        :param qse_submitted_curve_mw8_to: Format - ####.###.
        :type qse_submitted_curve_mw8_to: float
        :param qse_submitted_curve_price8_from: Format - ####.###.
        :type qse_submitted_curve_price8_from: float
        :param qse_submitted_curve_price8_to: Format - ####.###.
        :type qse_submitted_curve_price8_to: float
        :param qse_submitted_curve_mw9_from: Format - ####.###.
        :type qse_submitted_curve_mw9_from: float
        :param qse_submitted_curve_mw9_to: Format - ####.###.
        :type qse_submitted_curve_mw9_to: float
        :param qse_submitted_curve_price9_from: Format - ####.###.
        :type qse_submitted_curve_price9_from: float
        :param qse_submitted_curve_price9_to: Format - ####.###.
        :type qse_submitted_curve_price9_to: float
        :param qse_submitted_curve_mw10_from: Format - ####.###.
        :type qse_submitted_curve_mw10_from: float
        :param qse_submitted_curve_mw10_to: Format - ####.###.
        :type qse_submitted_curve_mw10_to: float
        :param qse_submitted_curve_price10_from: Format - ####.###.
        :type qse_submitted_curve_price10_from: float
        :param qse_submitted_curve_price10_to: Format - ####.###.
        :type qse_submitted_curve_price10_to: float
        :param start_up_hot_from: Format - ####.###.
        :type start_up_hot_from: float
        :param start_up_hot_to: Format - ####.###.
        :type start_up_hot_to: float
        :param start_up_inter_from: Format - ####.###.
        :type start_up_inter_from: float
        :param start_up_inter_to: Format - ####.###.
        :type start_up_inter_to: float
        :param start_up_cold_from: Format - ####.###.
        :type start_up_cold_from: float
        :param start_up_cold_to: Format - ####.###.
        :type start_up_cold_to: float
        :param min_gen_cost_from: Format - ####.###.
        :type min_gen_cost_from: float
        :param min_gen_cost_to: Format - ####.###.
        :type min_gen_cost_to: float
        :param hsl_from: Format - ####.###.
        :type hsl_from: float
        :param hslto: Format - ####.###.
        :type hslto: float
        :param lsl_from: Format - ####.###.
        :type lsl_from: float
        :param lslto: Format - ####.###.
        :type lslto: float
        :param resource_status: Format - abc123.
        :type resource_status: str
        :param awarded_quantity_from: Format - ###.
        :type awarded_quantity_from: int
        :param awarded_quantity_to: Format - ###.
        :type awarded_quantity_to: int
        :param settlement_point_name: Format - abc123.
        :type settlement_point_name: str
        :param energy_settlement_point_price_from: Format - ####.###.
        :type energy_settlement_point_price_from: float
        :param energy_settlement_point_price_to: Format - ####.###.
        :type energy_settlement_point_price_to: float
        :param regup_awarded_from: Format - ####.###.
        :type regup_awarded_from: float
        :param regup_awarded_to: Format - ####.###.
        :type regup_awarded_to: float
        :param regupmcpc_from: Format - ####.###.
        :type regupmcpc_from: float
        :param regupmcpcto: Format - ####.###.
        :type regupmcpcto: float
        :param regdn_awarded_from: Format - ####.###.
        :type regdn_awarded_from: float
        :param regdn_awarded_to: Format - ####.###.
        :type regdn_awarded_to: float
        :param regdnmcpc_from: Format - ####.###.
        :type regdnmcpc_from: float
        :param regdnmcpcto: Format - ####.###.
        :type regdnmcpcto: float
        :param rrspfr_awarded_from: Format - ####.###.
        :type rrspfr_awarded_from: float
        :param rrspfr_awarded_to: Format - ####.###.
        :type rrspfr_awarded_to: float
        :param rrsffr_awarded_from: Format - ####.###.
        :type rrsffr_awarded_from: float
        :param rrsffr_awarded_to: Format - ####.###.
        :type rrsffr_awarded_to: float
        :param rrsufr_awarded_from: Format - ####.###.
        :type rrsufr_awarded_from: float
        :param rrsufr_awarded_to: Format - ####.###.
        :type rrsufr_awarded_to: float
        :param rrsmcpc_from: Format - ####.###.
        :type rrsmcpc_from: float
        :param rrsmcpcto: Format - ####.###.
        :type rrsmcpcto: float
        :param nspin_awarded_from: Format - ####.###.
        :type nspin_awarded_from: float
        :param nspin_awarded_to: Format - ####.###.
        :type nspin_awarded_to: float
        :param nspinmcpc_from: Format - ####.###.
        :type nspinmcpc_from: float
        :param nspinmcpcto: Format - ####.###.
        :type nspinmcpcto: float
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data45_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            dme_name=dme_name,
            resource_name=resource_name,
            resource_type=resource_type,
            qse_submitted_curve_mw1_from=qse_submitted_curve_mw1_from,
            qse_submitted_curve_mw1_to=qse_submitted_curve_mw1_to,
            qse_submitted_curve_price1_from=qse_submitted_curve_price1_from,
            qse_submitted_curve_price1_to=qse_submitted_curve_price1_to,
            qse_submitted_curve_mw2_from=qse_submitted_curve_mw2_from,
            qse_submitted_curve_mw2_to=qse_submitted_curve_mw2_to,
            qse_submitted_curve_price2_from=qse_submitted_curve_price2_from,
            qse_submitted_curve_price2_to=qse_submitted_curve_price2_to,
            qse_submitted_curve_mw3_from=qse_submitted_curve_mw3_from,
            qse_submitted_curve_mw3_to=qse_submitted_curve_mw3_to,
            qse_submitted_curve_price3_from=qse_submitted_curve_price3_from,
            qse_submitted_curve_price3_to=qse_submitted_curve_price3_to,
            qse_submitted_curve_mw4_from=qse_submitted_curve_mw4_from,
            qse_submitted_curve_mw4_to=qse_submitted_curve_mw4_to,
            qse_submitted_curve_price4_from=qse_submitted_curve_price4_from,
            qse_submitted_curve_price4_to=qse_submitted_curve_price4_to,
            qse_submitted_curve_mw5_from=qse_submitted_curve_mw5_from,
            qse_submitted_curve_mw5_to=qse_submitted_curve_mw5_to,
            qse_submitted_curve_price5_from=qse_submitted_curve_price5_from,
            qse_submitted_curve_price5_to=qse_submitted_curve_price5_to,
            qse_submitted_curve_mw6_from=qse_submitted_curve_mw6_from,
            qse_submitted_curve_mw6_to=qse_submitted_curve_mw6_to,
            qse_submitted_curve_price6_from=qse_submitted_curve_price6_from,
            qse_submitted_curve_price6_to=qse_submitted_curve_price6_to,
            qse_submitted_curve_mw7_from=qse_submitted_curve_mw7_from,
            qse_submitted_curve_mw7_to=qse_submitted_curve_mw7_to,
            qse_submitted_curve_price7_from=qse_submitted_curve_price7_from,
            qse_submitted_curve_price7_to=qse_submitted_curve_price7_to,
            qse_submitted_curve_mw8_from=qse_submitted_curve_mw8_from,
            qse_submitted_curve_mw8_to=qse_submitted_curve_mw8_to,
            qse_submitted_curve_price8_from=qse_submitted_curve_price8_from,
            qse_submitted_curve_price8_to=qse_submitted_curve_price8_to,
            qse_submitted_curve_mw9_from=qse_submitted_curve_mw9_from,
            qse_submitted_curve_mw9_to=qse_submitted_curve_mw9_to,
            qse_submitted_curve_price9_from=qse_submitted_curve_price9_from,
            qse_submitted_curve_price9_to=qse_submitted_curve_price9_to,
            qse_submitted_curve_mw10_from=qse_submitted_curve_mw10_from,
            qse_submitted_curve_mw10_to=qse_submitted_curve_mw10_to,
            qse_submitted_curve_price10_from=qse_submitted_curve_price10_from,
            qse_submitted_curve_price10_to=qse_submitted_curve_price10_to,
            start_up_hot_from=start_up_hot_from,
            start_up_hot_to=start_up_hot_to,
            start_up_inter_from=start_up_inter_from,
            start_up_inter_to=start_up_inter_to,
            start_up_cold_from=start_up_cold_from,
            start_up_cold_to=start_up_cold_to,
            min_gen_cost_from=min_gen_cost_from,
            min_gen_cost_to=min_gen_cost_to,
            hsl_from=hsl_from,
            hslto=hslto,
            lsl_from=lsl_from,
            lslto=lslto,
            resource_status=resource_status,
            awarded_quantity_from=awarded_quantity_from,
            awarded_quantity_to=awarded_quantity_to,
            settlement_point_name=settlement_point_name,
            energy_settlement_point_price_from=energy_settlement_point_price_from,
            energy_settlement_point_price_to=energy_settlement_point_price_to,
            regup_awarded_from=regup_awarded_from,
            regup_awarded_to=regup_awarded_to,
            regupmcpc_from=regupmcpc_from,
            regupmcpcto=regupmcpcto,
            regdn_awarded_from=regdn_awarded_from,
            regdn_awarded_to=regdn_awarded_to,
            regdnmcpc_from=regdnmcpc_from,
            regdnmcpcto=regdnmcpcto,
            rrspfr_awarded_from=rrspfr_awarded_from,
            rrspfr_awarded_to=rrspfr_awarded_to,
            rrsffr_awarded_from=rrsffr_awarded_from,
            rrsffr_awarded_to=rrsffr_awarded_to,
            rrsufr_awarded_from=rrsufr_awarded_from,
            rrsufr_awarded_to=rrsufr_awarded_to,
            rrsmcpc_from=rrsmcpc_from,
            rrsmcpcto=rrsmcpcto,
            nspin_awarded_from=nspin_awarded_from,
            nspin_awarded_to=nspin_awarded_to,
            nspinmcpc_from=nspinmcpc_from,
            nspinmcpcto=nspinmcpcto,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_data45_without_preload_content(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        dme_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        resource_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        resource_type: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        qse_submitted_curve_mw1_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw1_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price1_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price1_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw2_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw2_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price2_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price2_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw3_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw3_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price3_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price3_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw4_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw4_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price4_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price4_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw5_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw5_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price5_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price5_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw6_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw6_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price6_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price6_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw7_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw7_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price7_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price7_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw8_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw8_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price8_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price8_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw9_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw9_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price9_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price9_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw10_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_mw10_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price10_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        qse_submitted_curve_price10_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        start_up_hot_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        start_up_hot_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        start_up_inter_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        start_up_inter_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        start_up_cold_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        start_up_cold_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        min_gen_cost_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        min_gen_cost_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        hsl_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        hslto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lsl_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lslto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        resource_status: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        awarded_quantity_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        awarded_quantity_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        settlement_point_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        energy_settlement_point_price_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_settlement_point_price_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regup_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regup_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regupmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regupmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdn_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdn_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdnmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        regdnmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrspfr_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrspfr_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsffr_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsffr_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsufr_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsufr_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        rrsmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspin_awarded_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspin_awarded_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspinmcpc_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        nspinmcpcto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """60 Day DAM Generation Resource Data

        60 Day DAM Generation Resource Data

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param dme_name: Format - abc123.
        :type dme_name: str
        :param resource_name: Format - abc123.
        :type resource_name: str
        :param resource_type: Format - abc123.
        :type resource_type: str
        :param qse_submitted_curve_mw1_from: Format - ####.###.
        :type qse_submitted_curve_mw1_from: float
        :param qse_submitted_curve_mw1_to: Format - ####.###.
        :type qse_submitted_curve_mw1_to: float
        :param qse_submitted_curve_price1_from: Format - ####.###.
        :type qse_submitted_curve_price1_from: float
        :param qse_submitted_curve_price1_to: Format - ####.###.
        :type qse_submitted_curve_price1_to: float
        :param qse_submitted_curve_mw2_from: Format - ####.###.
        :type qse_submitted_curve_mw2_from: float
        :param qse_submitted_curve_mw2_to: Format - ####.###.
        :type qse_submitted_curve_mw2_to: float
        :param qse_submitted_curve_price2_from: Format - ####.###.
        :type qse_submitted_curve_price2_from: float
        :param qse_submitted_curve_price2_to: Format - ####.###.
        :type qse_submitted_curve_price2_to: float
        :param qse_submitted_curve_mw3_from: Format - ####.###.
        :type qse_submitted_curve_mw3_from: float
        :param qse_submitted_curve_mw3_to: Format - ####.###.
        :type qse_submitted_curve_mw3_to: float
        :param qse_submitted_curve_price3_from: Format - ####.###.
        :type qse_submitted_curve_price3_from: float
        :param qse_submitted_curve_price3_to: Format - ####.###.
        :type qse_submitted_curve_price3_to: float
        :param qse_submitted_curve_mw4_from: Format - ####.###.
        :type qse_submitted_curve_mw4_from: float
        :param qse_submitted_curve_mw4_to: Format - ####.###.
        :type qse_submitted_curve_mw4_to: float
        :param qse_submitted_curve_price4_from: Format - ####.###.
        :type qse_submitted_curve_price4_from: float
        :param qse_submitted_curve_price4_to: Format - ####.###.
        :type qse_submitted_curve_price4_to: float
        :param qse_submitted_curve_mw5_from: Format - ####.###.
        :type qse_submitted_curve_mw5_from: float
        :param qse_submitted_curve_mw5_to: Format - ####.###.
        :type qse_submitted_curve_mw5_to: float
        :param qse_submitted_curve_price5_from: Format - ####.###.
        :type qse_submitted_curve_price5_from: float
        :param qse_submitted_curve_price5_to: Format - ####.###.
        :type qse_submitted_curve_price5_to: float
        :param qse_submitted_curve_mw6_from: Format - ####.###.
        :type qse_submitted_curve_mw6_from: float
        :param qse_submitted_curve_mw6_to: Format - ####.###.
        :type qse_submitted_curve_mw6_to: float
        :param qse_submitted_curve_price6_from: Format - ####.###.
        :type qse_submitted_curve_price6_from: float
        :param qse_submitted_curve_price6_to: Format - ####.###.
        :type qse_submitted_curve_price6_to: float
        :param qse_submitted_curve_mw7_from: Format - ####.###.
        :type qse_submitted_curve_mw7_from: float
        :param qse_submitted_curve_mw7_to: Format - ####.###.
        :type qse_submitted_curve_mw7_to: float
        :param qse_submitted_curve_price7_from: Format - ####.###.
        :type qse_submitted_curve_price7_from: float
        :param qse_submitted_curve_price7_to: Format - ####.###.
        :type qse_submitted_curve_price7_to: float
        :param qse_submitted_curve_mw8_from: Format - ####.###.
        :type qse_submitted_curve_mw8_from: float
        :param qse_submitted_curve_mw8_to: Format - ####.###.
        :type qse_submitted_curve_mw8_to: float
        :param qse_submitted_curve_price8_from: Format - ####.###.
        :type qse_submitted_curve_price8_from: float
        :param qse_submitted_curve_price8_to: Format - ####.###.
        :type qse_submitted_curve_price8_to: float
        :param qse_submitted_curve_mw9_from: Format - ####.###.
        :type qse_submitted_curve_mw9_from: float
        :param qse_submitted_curve_mw9_to: Format - ####.###.
        :type qse_submitted_curve_mw9_to: float
        :param qse_submitted_curve_price9_from: Format - ####.###.
        :type qse_submitted_curve_price9_from: float
        :param qse_submitted_curve_price9_to: Format - ####.###.
        :type qse_submitted_curve_price9_to: float
        :param qse_submitted_curve_mw10_from: Format - ####.###.
        :type qse_submitted_curve_mw10_from: float
        :param qse_submitted_curve_mw10_to: Format - ####.###.
        :type qse_submitted_curve_mw10_to: float
        :param qse_submitted_curve_price10_from: Format - ####.###.
        :type qse_submitted_curve_price10_from: float
        :param qse_submitted_curve_price10_to: Format - ####.###.
        :type qse_submitted_curve_price10_to: float
        :param start_up_hot_from: Format - ####.###.
        :type start_up_hot_from: float
        :param start_up_hot_to: Format - ####.###.
        :type start_up_hot_to: float
        :param start_up_inter_from: Format - ####.###.
        :type start_up_inter_from: float
        :param start_up_inter_to: Format - ####.###.
        :type start_up_inter_to: float
        :param start_up_cold_from: Format - ####.###.
        :type start_up_cold_from: float
        :param start_up_cold_to: Format - ####.###.
        :type start_up_cold_to: float
        :param min_gen_cost_from: Format - ####.###.
        :type min_gen_cost_from: float
        :param min_gen_cost_to: Format - ####.###.
        :type min_gen_cost_to: float
        :param hsl_from: Format - ####.###.
        :type hsl_from: float
        :param hslto: Format - ####.###.
        :type hslto: float
        :param lsl_from: Format - ####.###.
        :type lsl_from: float
        :param lslto: Format - ####.###.
        :type lslto: float
        :param resource_status: Format - abc123.
        :type resource_status: str
        :param awarded_quantity_from: Format - ###.
        :type awarded_quantity_from: int
        :param awarded_quantity_to: Format - ###.
        :type awarded_quantity_to: int
        :param settlement_point_name: Format - abc123.
        :type settlement_point_name: str
        :param energy_settlement_point_price_from: Format - ####.###.
        :type energy_settlement_point_price_from: float
        :param energy_settlement_point_price_to: Format - ####.###.
        :type energy_settlement_point_price_to: float
        :param regup_awarded_from: Format - ####.###.
        :type regup_awarded_from: float
        :param regup_awarded_to: Format - ####.###.
        :type regup_awarded_to: float
        :param regupmcpc_from: Format - ####.###.
        :type regupmcpc_from: float
        :param regupmcpcto: Format - ####.###.
        :type regupmcpcto: float
        :param regdn_awarded_from: Format - ####.###.
        :type regdn_awarded_from: float
        :param regdn_awarded_to: Format - ####.###.
        :type regdn_awarded_to: float
        :param regdnmcpc_from: Format - ####.###.
        :type regdnmcpc_from: float
        :param regdnmcpcto: Format - ####.###.
        :type regdnmcpcto: float
        :param rrspfr_awarded_from: Format - ####.###.
        :type rrspfr_awarded_from: float
        :param rrspfr_awarded_to: Format - ####.###.
        :type rrspfr_awarded_to: float
        :param rrsffr_awarded_from: Format - ####.###.
        :type rrsffr_awarded_from: float
        :param rrsffr_awarded_to: Format - ####.###.
        :type rrsffr_awarded_to: float
        :param rrsufr_awarded_from: Format - ####.###.
        :type rrsufr_awarded_from: float
        :param rrsufr_awarded_to: Format - ####.###.
        :type rrsufr_awarded_to: float
        :param rrsmcpc_from: Format - ####.###.
        :type rrsmcpc_from: float
        :param rrsmcpcto: Format - ####.###.
        :type rrsmcpcto: float
        :param nspin_awarded_from: Format - ####.###.
        :type nspin_awarded_from: float
        :param nspin_awarded_to: Format - ####.###.
        :type nspin_awarded_to: float
        :param nspinmcpc_from: Format - ####.###.
        :type nspinmcpc_from: float
        :param nspinmcpcto: Format - ####.###.
        :type nspinmcpcto: float
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data45_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            dme_name=dme_name,
            resource_name=resource_name,
            resource_type=resource_type,
            qse_submitted_curve_mw1_from=qse_submitted_curve_mw1_from,
            qse_submitted_curve_mw1_to=qse_submitted_curve_mw1_to,
            qse_submitted_curve_price1_from=qse_submitted_curve_price1_from,
            qse_submitted_curve_price1_to=qse_submitted_curve_price1_to,
            qse_submitted_curve_mw2_from=qse_submitted_curve_mw2_from,
            qse_submitted_curve_mw2_to=qse_submitted_curve_mw2_to,
            qse_submitted_curve_price2_from=qse_submitted_curve_price2_from,
            qse_submitted_curve_price2_to=qse_submitted_curve_price2_to,
            qse_submitted_curve_mw3_from=qse_submitted_curve_mw3_from,
            qse_submitted_curve_mw3_to=qse_submitted_curve_mw3_to,
            qse_submitted_curve_price3_from=qse_submitted_curve_price3_from,
            qse_submitted_curve_price3_to=qse_submitted_curve_price3_to,
            qse_submitted_curve_mw4_from=qse_submitted_curve_mw4_from,
            qse_submitted_curve_mw4_to=qse_submitted_curve_mw4_to,
            qse_submitted_curve_price4_from=qse_submitted_curve_price4_from,
            qse_submitted_curve_price4_to=qse_submitted_curve_price4_to,
            qse_submitted_curve_mw5_from=qse_submitted_curve_mw5_from,
            qse_submitted_curve_mw5_to=qse_submitted_curve_mw5_to,
            qse_submitted_curve_price5_from=qse_submitted_curve_price5_from,
            qse_submitted_curve_price5_to=qse_submitted_curve_price5_to,
            qse_submitted_curve_mw6_from=qse_submitted_curve_mw6_from,
            qse_submitted_curve_mw6_to=qse_submitted_curve_mw6_to,
            qse_submitted_curve_price6_from=qse_submitted_curve_price6_from,
            qse_submitted_curve_price6_to=qse_submitted_curve_price6_to,
            qse_submitted_curve_mw7_from=qse_submitted_curve_mw7_from,
            qse_submitted_curve_mw7_to=qse_submitted_curve_mw7_to,
            qse_submitted_curve_price7_from=qse_submitted_curve_price7_from,
            qse_submitted_curve_price7_to=qse_submitted_curve_price7_to,
            qse_submitted_curve_mw8_from=qse_submitted_curve_mw8_from,
            qse_submitted_curve_mw8_to=qse_submitted_curve_mw8_to,
            qse_submitted_curve_price8_from=qse_submitted_curve_price8_from,
            qse_submitted_curve_price8_to=qse_submitted_curve_price8_to,
            qse_submitted_curve_mw9_from=qse_submitted_curve_mw9_from,
            qse_submitted_curve_mw9_to=qse_submitted_curve_mw9_to,
            qse_submitted_curve_price9_from=qse_submitted_curve_price9_from,
            qse_submitted_curve_price9_to=qse_submitted_curve_price9_to,
            qse_submitted_curve_mw10_from=qse_submitted_curve_mw10_from,
            qse_submitted_curve_mw10_to=qse_submitted_curve_mw10_to,
            qse_submitted_curve_price10_from=qse_submitted_curve_price10_from,
            qse_submitted_curve_price10_to=qse_submitted_curve_price10_to,
            start_up_hot_from=start_up_hot_from,
            start_up_hot_to=start_up_hot_to,
            start_up_inter_from=start_up_inter_from,
            start_up_inter_to=start_up_inter_to,
            start_up_cold_from=start_up_cold_from,
            start_up_cold_to=start_up_cold_to,
            min_gen_cost_from=min_gen_cost_from,
            min_gen_cost_to=min_gen_cost_to,
            hsl_from=hsl_from,
            hslto=hslto,
            lsl_from=lsl_from,
            lslto=lslto,
            resource_status=resource_status,
            awarded_quantity_from=awarded_quantity_from,
            awarded_quantity_to=awarded_quantity_to,
            settlement_point_name=settlement_point_name,
            energy_settlement_point_price_from=energy_settlement_point_price_from,
            energy_settlement_point_price_to=energy_settlement_point_price_to,
            regup_awarded_from=regup_awarded_from,
            regup_awarded_to=regup_awarded_to,
            regupmcpc_from=regupmcpc_from,
            regupmcpcto=regupmcpcto,
            regdn_awarded_from=regdn_awarded_from,
            regdn_awarded_to=regdn_awarded_to,
            regdnmcpc_from=regdnmcpc_from,
            regdnmcpcto=regdnmcpcto,
            rrspfr_awarded_from=rrspfr_awarded_from,
            rrspfr_awarded_to=rrspfr_awarded_to,
            rrsffr_awarded_from=rrsffr_awarded_from,
            rrsffr_awarded_to=rrsffr_awarded_to,
            rrsufr_awarded_from=rrsufr_awarded_from,
            rrsufr_awarded_to=rrsufr_awarded_to,
            rrsmcpc_from=rrsmcpc_from,
            rrsmcpcto=rrsmcpcto,
            nspin_awarded_from=nspin_awarded_from,
            nspin_awarded_to=nspin_awarded_to,
            nspinmcpc_from=nspinmcpc_from,
            nspinmcpcto=nspinmcpcto,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_data45_serialize(
        self,
        ocp_apim_subscription_key,
        delivery_date_from,
        delivery_date_to,
        hour_ending_from,
        hour_ending_to,
        qse_name,
        dme_name,
        resource_name,
        resource_type,
        qse_submitted_curve_mw1_from,
        qse_submitted_curve_mw1_to,
        qse_submitted_curve_price1_from,
        qse_submitted_curve_price1_to,
        qse_submitted_curve_mw2_from,
        qse_submitted_curve_mw2_to,
        qse_submitted_curve_price2_from,
        qse_submitted_curve_price2_to,
        qse_submitted_curve_mw3_from,
        qse_submitted_curve_mw3_to,
        qse_submitted_curve_price3_from,
        qse_submitted_curve_price3_to,
        qse_submitted_curve_mw4_from,
        qse_submitted_curve_mw4_to,
        qse_submitted_curve_price4_from,
        qse_submitted_curve_price4_to,
        qse_submitted_curve_mw5_from,
        qse_submitted_curve_mw5_to,
        qse_submitted_curve_price5_from,
        qse_submitted_curve_price5_to,
        qse_submitted_curve_mw6_from,
        qse_submitted_curve_mw6_to,
        qse_submitted_curve_price6_from,
        qse_submitted_curve_price6_to,
        qse_submitted_curve_mw7_from,
        qse_submitted_curve_mw7_to,
        qse_submitted_curve_price7_from,
        qse_submitted_curve_price7_to,
        qse_submitted_curve_mw8_from,
        qse_submitted_curve_mw8_to,
        qse_submitted_curve_price8_from,
        qse_submitted_curve_price8_to,
        qse_submitted_curve_mw9_from,
        qse_submitted_curve_mw9_to,
        qse_submitted_curve_price9_from,
        qse_submitted_curve_price9_to,
        qse_submitted_curve_mw10_from,
        qse_submitted_curve_mw10_to,
        qse_submitted_curve_price10_from,
        qse_submitted_curve_price10_to,
        start_up_hot_from,
        start_up_hot_to,
        start_up_inter_from,
        start_up_inter_to,
        start_up_cold_from,
        start_up_cold_to,
        min_gen_cost_from,
        min_gen_cost_to,
        hsl_from,
        hslto,
        lsl_from,
        lslto,
        resource_status,
        awarded_quantity_from,
        awarded_quantity_to,
        settlement_point_name,
        energy_settlement_point_price_from,
        energy_settlement_point_price_to,
        regup_awarded_from,
        regup_awarded_to,
        regupmcpc_from,
        regupmcpcto,
        regdn_awarded_from,
        regdn_awarded_to,
        regdnmcpc_from,
        regdnmcpcto,
        rrspfr_awarded_from,
        rrspfr_awarded_to,
        rrsffr_awarded_from,
        rrsffr_awarded_to,
        rrsufr_awarded_from,
        rrsufr_awarded_to,
        rrsmcpc_from,
        rrsmcpcto,
        nspin_awarded_from,
        nspin_awarded_to,
        nspinmcpc_from,
        nspinmcpcto,
        page,
        size,
        sort,
        dir,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if delivery_date_from is not None:
            
            _query_params.append(('deliveryDateFrom', delivery_date_from))
            
        if delivery_date_to is not None:
            
            _query_params.append(('deliveryDateTo', delivery_date_to))
            
        if hour_ending_from is not None:
            
            _query_params.append(('hourEndingFrom', hour_ending_from))
            
        if hour_ending_to is not None:
            
            _query_params.append(('hourEndingTo', hour_ending_to))
            
        if qse_name is not None:
            
            _query_params.append(('qseName', qse_name))
            
        if dme_name is not None:
            
            _query_params.append(('dmeName', dme_name))
            
        if resource_name is not None:
            
            _query_params.append(('resourceName', resource_name))
            
        if resource_type is not None:
            
            _query_params.append(('resourceType', resource_type))
            
        if qse_submitted_curve_mw1_from is not None:
            
            _query_params.append(('qseSubmittedCurveMW1From', qse_submitted_curve_mw1_from))
            
        if qse_submitted_curve_mw1_to is not None:
            
            _query_params.append(('qseSubmittedCurveMW1To', qse_submitted_curve_mw1_to))
            
        if qse_submitted_curve_price1_from is not None:
            
            _query_params.append(('qseSubmittedCurvePrice1From', qse_submitted_curve_price1_from))
            
        if qse_submitted_curve_price1_to is not None:
            
            _query_params.append(('qseSubmittedCurvePrice1To', qse_submitted_curve_price1_to))
            
        if qse_submitted_curve_mw2_from is not None:
            
            _query_params.append(('qseSubmittedCurveMW2From', qse_submitted_curve_mw2_from))
            
        if qse_submitted_curve_mw2_to is not None:
            
            _query_params.append(('qseSubmittedCurveMW2To', qse_submitted_curve_mw2_to))
            
        if qse_submitted_curve_price2_from is not None:
            
            _query_params.append(('qseSubmittedCurvePrice2From', qse_submitted_curve_price2_from))
            
        if qse_submitted_curve_price2_to is not None:
            
            _query_params.append(('qseSubmittedCurvePrice2To', qse_submitted_curve_price2_to))
            
        if qse_submitted_curve_mw3_from is not None:
            
            _query_params.append(('qseSubmittedCurveMW3From', qse_submitted_curve_mw3_from))
            
        if qse_submitted_curve_mw3_to is not None:
            
            _query_params.append(('qseSubmittedCurveMW3To', qse_submitted_curve_mw3_to))
            
        if qse_submitted_curve_price3_from is not None:
            
            _query_params.append(('qseSubmittedCurvePrice3From', qse_submitted_curve_price3_from))
            
        if qse_submitted_curve_price3_to is not None:
            
            _query_params.append(('qseSubmittedCurvePrice3To', qse_submitted_curve_price3_to))
            
        if qse_submitted_curve_mw4_from is not None:
            
            _query_params.append(('qseSubmittedCurveMW4From', qse_submitted_curve_mw4_from))
            
        if qse_submitted_curve_mw4_to is not None:
            
            _query_params.append(('qseSubmittedCurveMW4To', qse_submitted_curve_mw4_to))
            
        if qse_submitted_curve_price4_from is not None:
            
            _query_params.append(('qseSubmittedCurvePrice4From', qse_submitted_curve_price4_from))
            
        if qse_submitted_curve_price4_to is not None:
            
            _query_params.append(('qseSubmittedCurvePrice4To', qse_submitted_curve_price4_to))
            
        if qse_submitted_curve_mw5_from is not None:
            
            _query_params.append(('qseSubmittedCurveMW5From', qse_submitted_curve_mw5_from))
            
        if qse_submitted_curve_mw5_to is not None:
            
            _query_params.append(('qseSubmittedCurveMW5To', qse_submitted_curve_mw5_to))
            
        if qse_submitted_curve_price5_from is not None:
            
            _query_params.append(('qseSubmittedCurvePrice5From', qse_submitted_curve_price5_from))
            
        if qse_submitted_curve_price5_to is not None:
            
            _query_params.append(('qseSubmittedCurvePrice5To', qse_submitted_curve_price5_to))
            
        if qse_submitted_curve_mw6_from is not None:
            
            _query_params.append(('qseSubmittedCurveMW6From', qse_submitted_curve_mw6_from))
            
        if qse_submitted_curve_mw6_to is not None:
            
            _query_params.append(('qseSubmittedCurveMW6To', qse_submitted_curve_mw6_to))
            
        if qse_submitted_curve_price6_from is not None:
            
            _query_params.append(('qseSubmittedCurvePrice6From', qse_submitted_curve_price6_from))
            
        if qse_submitted_curve_price6_to is not None:
            
            _query_params.append(('qseSubmittedCurvePrice6To', qse_submitted_curve_price6_to))
            
        if qse_submitted_curve_mw7_from is not None:
            
            _query_params.append(('qseSubmittedCurveMW7From', qse_submitted_curve_mw7_from))
            
        if qse_submitted_curve_mw7_to is not None:
            
            _query_params.append(('qseSubmittedCurveMW7To', qse_submitted_curve_mw7_to))
            
        if qse_submitted_curve_price7_from is not None:
            
            _query_params.append(('qseSubmittedCurvePrice7From', qse_submitted_curve_price7_from))
            
        if qse_submitted_curve_price7_to is not None:
            
            _query_params.append(('qseSubmittedCurvePrice7To', qse_submitted_curve_price7_to))
            
        if qse_submitted_curve_mw8_from is not None:
            
            _query_params.append(('qseSubmittedCurveMW8From', qse_submitted_curve_mw8_from))
            
        if qse_submitted_curve_mw8_to is not None:
            
            _query_params.append(('qseSubmittedCurveMW8To', qse_submitted_curve_mw8_to))
            
        if qse_submitted_curve_price8_from is not None:
            
            _query_params.append(('qseSubmittedCurvePrice8From', qse_submitted_curve_price8_from))
            
        if qse_submitted_curve_price8_to is not None:
            
            _query_params.append(('qseSubmittedCurvePrice8To', qse_submitted_curve_price8_to))
            
        if qse_submitted_curve_mw9_from is not None:
            
            _query_params.append(('qseSubmittedCurveMW9From', qse_submitted_curve_mw9_from))
            
        if qse_submitted_curve_mw9_to is not None:
            
            _query_params.append(('qseSubmittedCurveMW9To', qse_submitted_curve_mw9_to))
            
        if qse_submitted_curve_price9_from is not None:
            
            _query_params.append(('qseSubmittedCurvePrice9From', qse_submitted_curve_price9_from))
            
        if qse_submitted_curve_price9_to is not None:
            
            _query_params.append(('qseSubmittedCurvePrice9To', qse_submitted_curve_price9_to))
            
        if qse_submitted_curve_mw10_from is not None:
            
            _query_params.append(('qseSubmittedCurveMW10From', qse_submitted_curve_mw10_from))
            
        if qse_submitted_curve_mw10_to is not None:
            
            _query_params.append(('qseSubmittedCurveMW10To', qse_submitted_curve_mw10_to))
            
        if qse_submitted_curve_price10_from is not None:
            
            _query_params.append(('qseSubmittedCurvePrice10From', qse_submitted_curve_price10_from))
            
        if qse_submitted_curve_price10_to is not None:
            
            _query_params.append(('qseSubmittedCurvePrice10To', qse_submitted_curve_price10_to))
            
        if start_up_hot_from is not None:
            
            _query_params.append(('startUpHotFrom', start_up_hot_from))
            
        if start_up_hot_to is not None:
            
            _query_params.append(('startUpHotTo', start_up_hot_to))
            
        if start_up_inter_from is not None:
            
            _query_params.append(('startUpInterFrom', start_up_inter_from))
            
        if start_up_inter_to is not None:
            
            _query_params.append(('startUpInterTo', start_up_inter_to))
            
        if start_up_cold_from is not None:
            
            _query_params.append(('startUpColdFrom', start_up_cold_from))
            
        if start_up_cold_to is not None:
            
            _query_params.append(('startUpColdTo', start_up_cold_to))
            
        if min_gen_cost_from is not None:
            
            _query_params.append(('minGenCostFrom', min_gen_cost_from))
            
        if min_gen_cost_to is not None:
            
            _query_params.append(('minGenCostTo', min_gen_cost_to))
            
        if hsl_from is not None:
            
            _query_params.append(('HSLFrom', hsl_from))
            
        if hslto is not None:
            
            _query_params.append(('HSLTo', hslto))
            
        if lsl_from is not None:
            
            _query_params.append(('LSLFrom', lsl_from))
            
        if lslto is not None:
            
            _query_params.append(('LSLTo', lslto))
            
        if resource_status is not None:
            
            _query_params.append(('resourceStatus', resource_status))
            
        if awarded_quantity_from is not None:
            
            _query_params.append(('awardedQuantityFrom', awarded_quantity_from))
            
        if awarded_quantity_to is not None:
            
            _query_params.append(('awardedQuantityTo', awarded_quantity_to))
            
        if settlement_point_name is not None:
            
            _query_params.append(('settlementPointName', settlement_point_name))
            
        if energy_settlement_point_price_from is not None:
            
            _query_params.append(('energySettlementPointPriceFrom', energy_settlement_point_price_from))
            
        if energy_settlement_point_price_to is not None:
            
            _query_params.append(('energySettlementPointPriceTo', energy_settlement_point_price_to))
            
        if regup_awarded_from is not None:
            
            _query_params.append(('REGUPAwardedFrom', regup_awarded_from))
            
        if regup_awarded_to is not None:
            
            _query_params.append(('REGUPAwardedTo', regup_awarded_to))
            
        if regupmcpc_from is not None:
            
            _query_params.append(('REGUPMCPCFrom', regupmcpc_from))
            
        if regupmcpcto is not None:
            
            _query_params.append(('REGUPMCPCTo', regupmcpcto))
            
        if regdn_awarded_from is not None:
            
            _query_params.append(('REGDNAwardedFrom', regdn_awarded_from))
            
        if regdn_awarded_to is not None:
            
            _query_params.append(('REGDNAwardedTo', regdn_awarded_to))
            
        if regdnmcpc_from is not None:
            
            _query_params.append(('REGDNMCPCFrom', regdnmcpc_from))
            
        if regdnmcpcto is not None:
            
            _query_params.append(('REGDNMCPCTo', regdnmcpcto))
            
        if rrspfr_awarded_from is not None:
            
            _query_params.append(('RRSPFRAwardedFrom', rrspfr_awarded_from))
            
        if rrspfr_awarded_to is not None:
            
            _query_params.append(('RRSPFRAwardedTo', rrspfr_awarded_to))
            
        if rrsffr_awarded_from is not None:
            
            _query_params.append(('RRSFFRAwardedFrom', rrsffr_awarded_from))
            
        if rrsffr_awarded_to is not None:
            
            _query_params.append(('RRSFFRAwardedTo', rrsffr_awarded_to))
            
        if rrsufr_awarded_from is not None:
            
            _query_params.append(('RRSUFRAwardedFrom', rrsufr_awarded_from))
            
        if rrsufr_awarded_to is not None:
            
            _query_params.append(('RRSUFRAwardedTo', rrsufr_awarded_to))
            
        if rrsmcpc_from is not None:
            
            _query_params.append(('RRSMCPCFrom', rrsmcpc_from))
            
        if rrsmcpcto is not None:
            
            _query_params.append(('RRSMCPCTo', rrsmcpcto))
            
        if nspin_awarded_from is not None:
            
            _query_params.append(('NSPINAwardedFrom', nspin_awarded_from))
            
        if nspin_awarded_to is not None:
            
            _query_params.append(('NSPINAwardedTo', nspin_awarded_to))
            
        if nspinmcpc_from is not None:
            
            _query_params.append(('NSPINMCPCFrom', nspinmcpc_from))
            
        if nspinmcpcto is not None:
            
            _query_params.append(('NSPINMCPCTo', nspinmcpcto))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if dir is not None:
            
            _query_params.append(('dir', dir))
            
        # process the header parameters
        if ocp_apim_subscription_key is not None:
            _header_params['Ocp-Apim-Subscription-Key'] = ocp_apim_subscription_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/np3-966-er/60_dam_gen_res_data',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_data46(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        price2_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw2_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw2_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator3: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price3_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw3_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw3_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator4: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price4_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw4_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw4_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator5: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price5_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw5_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw5_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        dme_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        resource_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        multi_hour_block: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        block_indicator1: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price1_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw1_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw1_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator2: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price2_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Report:
        """60 Day DAM Generation Resources AS Offers

        60 Day DAM Generation Resources AS Offers

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param price2_rrsffr_from: Format - ####.###.
        :type price2_rrsffr_from: float
        :param price2_rrsffrto: Format - ####.###.
        :type price2_rrsffrto: float
        :param price2_rrsufr_from: Format - ####.###.
        :type price2_rrsufr_from: float
        :param price2_rrsufrto: Format - ####.###.
        :type price2_rrsufrto: float
        :param price2_online_nspin_from: Format - ####.###.
        :type price2_online_nspin_from: float
        :param price2_online_nspinto: Format - ####.###.
        :type price2_online_nspinto: float
        :param price2_regup_from: Format - ####.###.
        :type price2_regup_from: float
        :param price2_regupto: Format - ####.###.
        :type price2_regupto: float
        :param price2_regdn_from: Format - ####.###.
        :type price2_regdn_from: float
        :param price2_regdnto: Format - ####.###.
        :type price2_regdnto: float
        :param price2_offline_nspin_from: Format - ####.###.
        :type price2_offline_nspin_from: float
        :param price2_offline_nspinto: Format - ####.###.
        :type price2_offline_nspinto: float
        :param quantity_mw2_from: Format - ###.
        :type quantity_mw2_from: int
        :param quantity_mw2_to: Format - ###.
        :type quantity_mw2_to: int
        :param block_indicator3: Format - true | false.
        :type block_indicator3: bool
        :param price3_rrspfr_from: Format - ####.###.
        :type price3_rrspfr_from: float
        :param price3_rrspfrto: Format - ####.###.
        :type price3_rrspfrto: float
        :param price3_rrsffr_from: Format - ####.###.
        :type price3_rrsffr_from: float
        :param price3_rrsffrto: Format - ####.###.
        :type price3_rrsffrto: float
        :param price3_rrsufr_from: Format - ####.###.
        :type price3_rrsufr_from: float
        :param price3_rrsufrto: Format - ####.###.
        :type price3_rrsufrto: float
        :param price3_online_nspin_from: Format - ####.###.
        :type price3_online_nspin_from: float
        :param price3_online_nspinto: Format - ####.###.
        :type price3_online_nspinto: float
        :param price3_regup_from: Format - ####.###.
        :type price3_regup_from: float
        :param price3_regupto: Format - ####.###.
        :type price3_regupto: float
        :param price3_regdn_from: Format - ####.###.
        :type price3_regdn_from: float
        :param price3_regdnto: Format - ####.###.
        :type price3_regdnto: float
        :param price3_offline_nspin_from: Format - ####.###.
        :type price3_offline_nspin_from: float
        :param price3_offline_nspinto: Format - ####.###.
        :type price3_offline_nspinto: float
        :param quantity_mw3_from: Format - ###.
        :type quantity_mw3_from: int
        :param quantity_mw3_to: Format - ###.
        :type quantity_mw3_to: int
        :param block_indicator4: Format - true | false.
        :type block_indicator4: bool
        :param price4_rrspfr_from: Format - ####.###.
        :type price4_rrspfr_from: float
        :param price4_rrspfrto: Format - ####.###.
        :type price4_rrspfrto: float
        :param price4_rrsffr_from: Format - ####.###.
        :type price4_rrsffr_from: float
        :param price4_rrsffrto: Format - ####.###.
        :type price4_rrsffrto: float
        :param price4_rrsufr_from: Format - ####.###.
        :type price4_rrsufr_from: float
        :param price4_rrsufrto: Format - ####.###.
        :type price4_rrsufrto: float
        :param price4_online_nspin_from: Format - ####.###.
        :type price4_online_nspin_from: float
        :param price4_online_nspinto: Format - ####.###.
        :type price4_online_nspinto: float
        :param price4_regup_from: Format - ####.###.
        :type price4_regup_from: float
        :param price4_regupto: Format - ####.###.
        :type price4_regupto: float
        :param price4_regdn_from: Format - ####.###.
        :type price4_regdn_from: float
        :param price4_regdnto: Format - ####.###.
        :type price4_regdnto: float
        :param price4_offline_nspin_from: Format - ####.###.
        :type price4_offline_nspin_from: float
        :param price4_offline_nspinto: Format - ####.###.
        :type price4_offline_nspinto: float
        :param quantity_mw4_from: Format - ###.
        :type quantity_mw4_from: int
        :param quantity_mw4_to: Format - ###.
        :type quantity_mw4_to: int
        :param block_indicator5: Format - true | false.
        :type block_indicator5: bool
        :param price5_rrspfr_from: Format - ####.###.
        :type price5_rrspfr_from: float
        :param price5_rrspfrto: Format - ####.###.
        :type price5_rrspfrto: float
        :param price5_rrsffr_from: Format - ####.###.
        :type price5_rrsffr_from: float
        :param price5_rrsffrto: Format - ####.###.
        :type price5_rrsffrto: float
        :param price5_rrsufr_from: Format - ####.###.
        :type price5_rrsufr_from: float
        :param price5_rrsufrto: Format - ####.###.
        :type price5_rrsufrto: float
        :param price5_online_nspin_from: Format - ####.###.
        :type price5_online_nspin_from: float
        :param price5_online_nspinto: Format - ####.###.
        :type price5_online_nspinto: float
        :param price5_regup_from: Format - ####.###.
        :type price5_regup_from: float
        :param price5_regupto: Format - ####.###.
        :type price5_regupto: float
        :param price5_regdn_from: Format - ####.###.
        :type price5_regdn_from: float
        :param price5_regdnto: Format - ####.###.
        :type price5_regdnto: float
        :param price5_offline_nspin_from: Format - ####.###.
        :type price5_offline_nspin_from: float
        :param price5_offline_nspinto: Format - ####.###.
        :type price5_offline_nspinto: float
        :param quantity_mw5_from: Format - ###.
        :type quantity_mw5_from: int
        :param quantity_mw5_to: Format - ###.
        :type quantity_mw5_to: int
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param dme_name: Format - abc123.
        :type dme_name: str
        :param resource_name: Format - abc123.
        :type resource_name: str
        :param multi_hour_block: Format - true | false.
        :type multi_hour_block: bool
        :param block_indicator1: Format - true | false.
        :type block_indicator1: bool
        :param price1_rrspfr_from: Format - ####.###.
        :type price1_rrspfr_from: float
        :param price1_rrspfrto: Format - ####.###.
        :type price1_rrspfrto: float
        :param price1_rrsffr_from: Format - ####.###.
        :type price1_rrsffr_from: float
        :param price1_rrsffrto: Format - ####.###.
        :type price1_rrsffrto: float
        :param price1_rrsufr_from: Format - ####.###.
        :type price1_rrsufr_from: float
        :param price1_rrsufrto: Format - ####.###.
        :type price1_rrsufrto: float
        :param price1_online_nspin_from: Format - ####.###.
        :type price1_online_nspin_from: float
        :param price1_online_nspinto: Format - ####.###.
        :type price1_online_nspinto: float
        :param price1_regup_from: Format - ####.###.
        :type price1_regup_from: float
        :param price1_regupto: Format - ####.###.
        :type price1_regupto: float
        :param price1_regdn_from: Format - ####.###.
        :type price1_regdn_from: float
        :param price1_regdnto: Format - ####.###.
        :type price1_regdnto: float
        :param price1_offline_nspin_from: Format - ####.###.
        :type price1_offline_nspin_from: float
        :param price1_offline_nspinto: Format - ####.###.
        :type price1_offline_nspinto: float
        :param quantity_mw1_from: Format - ###.
        :type quantity_mw1_from: int
        :param quantity_mw1_to: Format - ###.
        :type quantity_mw1_to: int
        :param block_indicator2: Format - true | false.
        :type block_indicator2: bool
        :param price2_rrspfr_from: Format - ####.###.
        :type price2_rrspfr_from: float
        :param price2_rrspfrto: Format - ####.###.
        :type price2_rrspfrto: float
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data46_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            price2_rrsffr_from=price2_rrsffr_from,
            price2_rrsffrto=price2_rrsffrto,
            price2_rrsufr_from=price2_rrsufr_from,
            price2_rrsufrto=price2_rrsufrto,
            price2_online_nspin_from=price2_online_nspin_from,
            price2_online_nspinto=price2_online_nspinto,
            price2_regup_from=price2_regup_from,
            price2_regupto=price2_regupto,
            price2_regdn_from=price2_regdn_from,
            price2_regdnto=price2_regdnto,
            price2_offline_nspin_from=price2_offline_nspin_from,
            price2_offline_nspinto=price2_offline_nspinto,
            quantity_mw2_from=quantity_mw2_from,
            quantity_mw2_to=quantity_mw2_to,
            block_indicator3=block_indicator3,
            price3_rrspfr_from=price3_rrspfr_from,
            price3_rrspfrto=price3_rrspfrto,
            price3_rrsffr_from=price3_rrsffr_from,
            price3_rrsffrto=price3_rrsffrto,
            price3_rrsufr_from=price3_rrsufr_from,
            price3_rrsufrto=price3_rrsufrto,
            price3_online_nspin_from=price3_online_nspin_from,
            price3_online_nspinto=price3_online_nspinto,
            price3_regup_from=price3_regup_from,
            price3_regupto=price3_regupto,
            price3_regdn_from=price3_regdn_from,
            price3_regdnto=price3_regdnto,
            price3_offline_nspin_from=price3_offline_nspin_from,
            price3_offline_nspinto=price3_offline_nspinto,
            quantity_mw3_from=quantity_mw3_from,
            quantity_mw3_to=quantity_mw3_to,
            block_indicator4=block_indicator4,
            price4_rrspfr_from=price4_rrspfr_from,
            price4_rrspfrto=price4_rrspfrto,
            price4_rrsffr_from=price4_rrsffr_from,
            price4_rrsffrto=price4_rrsffrto,
            price4_rrsufr_from=price4_rrsufr_from,
            price4_rrsufrto=price4_rrsufrto,
            price4_online_nspin_from=price4_online_nspin_from,
            price4_online_nspinto=price4_online_nspinto,
            price4_regup_from=price4_regup_from,
            price4_regupto=price4_regupto,
            price4_regdn_from=price4_regdn_from,
            price4_regdnto=price4_regdnto,
            price4_offline_nspin_from=price4_offline_nspin_from,
            price4_offline_nspinto=price4_offline_nspinto,
            quantity_mw4_from=quantity_mw4_from,
            quantity_mw4_to=quantity_mw4_to,
            block_indicator5=block_indicator5,
            price5_rrspfr_from=price5_rrspfr_from,
            price5_rrspfrto=price5_rrspfrto,
            price5_rrsffr_from=price5_rrsffr_from,
            price5_rrsffrto=price5_rrsffrto,
            price5_rrsufr_from=price5_rrsufr_from,
            price5_rrsufrto=price5_rrsufrto,
            price5_online_nspin_from=price5_online_nspin_from,
            price5_online_nspinto=price5_online_nspinto,
            price5_regup_from=price5_regup_from,
            price5_regupto=price5_regupto,
            price5_regdn_from=price5_regdn_from,
            price5_regdnto=price5_regdnto,
            price5_offline_nspin_from=price5_offline_nspin_from,
            price5_offline_nspinto=price5_offline_nspinto,
            quantity_mw5_from=quantity_mw5_from,
            quantity_mw5_to=quantity_mw5_to,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            dme_name=dme_name,
            resource_name=resource_name,
            multi_hour_block=multi_hour_block,
            block_indicator1=block_indicator1,
            price1_rrspfr_from=price1_rrspfr_from,
            price1_rrspfrto=price1_rrspfrto,
            price1_rrsffr_from=price1_rrsffr_from,
            price1_rrsffrto=price1_rrsffrto,
            price1_rrsufr_from=price1_rrsufr_from,
            price1_rrsufrto=price1_rrsufrto,
            price1_online_nspin_from=price1_online_nspin_from,
            price1_online_nspinto=price1_online_nspinto,
            price1_regup_from=price1_regup_from,
            price1_regupto=price1_regupto,
            price1_regdn_from=price1_regdn_from,
            price1_regdnto=price1_regdnto,
            price1_offline_nspin_from=price1_offline_nspin_from,
            price1_offline_nspinto=price1_offline_nspinto,
            quantity_mw1_from=quantity_mw1_from,
            quantity_mw1_to=quantity_mw1_to,
            block_indicator2=block_indicator2,
            price2_rrspfr_from=price2_rrspfr_from,
            price2_rrspfrto=price2_rrspfrto,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_data46_with_http_info(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        price2_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw2_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw2_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator3: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price3_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw3_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw3_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator4: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price4_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw4_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw4_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator5: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price5_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw5_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw5_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        dme_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        resource_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        multi_hour_block: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        block_indicator1: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price1_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw1_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw1_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator2: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price2_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Report]:
        """60 Day DAM Generation Resources AS Offers

        60 Day DAM Generation Resources AS Offers

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param price2_rrsffr_from: Format - ####.###.
        :type price2_rrsffr_from: float
        :param price2_rrsffrto: Format - ####.###.
        :type price2_rrsffrto: float
        :param price2_rrsufr_from: Format - ####.###.
        :type price2_rrsufr_from: float
        :param price2_rrsufrto: Format - ####.###.
        :type price2_rrsufrto: float
        :param price2_online_nspin_from: Format - ####.###.
        :type price2_online_nspin_from: float
        :param price2_online_nspinto: Format - ####.###.
        :type price2_online_nspinto: float
        :param price2_regup_from: Format - ####.###.
        :type price2_regup_from: float
        :param price2_regupto: Format - ####.###.
        :type price2_regupto: float
        :param price2_regdn_from: Format - ####.###.
        :type price2_regdn_from: float
        :param price2_regdnto: Format - ####.###.
        :type price2_regdnto: float
        :param price2_offline_nspin_from: Format - ####.###.
        :type price2_offline_nspin_from: float
        :param price2_offline_nspinto: Format - ####.###.
        :type price2_offline_nspinto: float
        :param quantity_mw2_from: Format - ###.
        :type quantity_mw2_from: int
        :param quantity_mw2_to: Format - ###.
        :type quantity_mw2_to: int
        :param block_indicator3: Format - true | false.
        :type block_indicator3: bool
        :param price3_rrspfr_from: Format - ####.###.
        :type price3_rrspfr_from: float
        :param price3_rrspfrto: Format - ####.###.
        :type price3_rrspfrto: float
        :param price3_rrsffr_from: Format - ####.###.
        :type price3_rrsffr_from: float
        :param price3_rrsffrto: Format - ####.###.
        :type price3_rrsffrto: float
        :param price3_rrsufr_from: Format - ####.###.
        :type price3_rrsufr_from: float
        :param price3_rrsufrto: Format - ####.###.
        :type price3_rrsufrto: float
        :param price3_online_nspin_from: Format - ####.###.
        :type price3_online_nspin_from: float
        :param price3_online_nspinto: Format - ####.###.
        :type price3_online_nspinto: float
        :param price3_regup_from: Format - ####.###.
        :type price3_regup_from: float
        :param price3_regupto: Format - ####.###.
        :type price3_regupto: float
        :param price3_regdn_from: Format - ####.###.
        :type price3_regdn_from: float
        :param price3_regdnto: Format - ####.###.
        :type price3_regdnto: float
        :param price3_offline_nspin_from: Format - ####.###.
        :type price3_offline_nspin_from: float
        :param price3_offline_nspinto: Format - ####.###.
        :type price3_offline_nspinto: float
        :param quantity_mw3_from: Format - ###.
        :type quantity_mw3_from: int
        :param quantity_mw3_to: Format - ###.
        :type quantity_mw3_to: int
        :param block_indicator4: Format - true | false.
        :type block_indicator4: bool
        :param price4_rrspfr_from: Format - ####.###.
        :type price4_rrspfr_from: float
        :param price4_rrspfrto: Format - ####.###.
        :type price4_rrspfrto: float
        :param price4_rrsffr_from: Format - ####.###.
        :type price4_rrsffr_from: float
        :param price4_rrsffrto: Format - ####.###.
        :type price4_rrsffrto: float
        :param price4_rrsufr_from: Format - ####.###.
        :type price4_rrsufr_from: float
        :param price4_rrsufrto: Format - ####.###.
        :type price4_rrsufrto: float
        :param price4_online_nspin_from: Format - ####.###.
        :type price4_online_nspin_from: float
        :param price4_online_nspinto: Format - ####.###.
        :type price4_online_nspinto: float
        :param price4_regup_from: Format - ####.###.
        :type price4_regup_from: float
        :param price4_regupto: Format - ####.###.
        :type price4_regupto: float
        :param price4_regdn_from: Format - ####.###.
        :type price4_regdn_from: float
        :param price4_regdnto: Format - ####.###.
        :type price4_regdnto: float
        :param price4_offline_nspin_from: Format - ####.###.
        :type price4_offline_nspin_from: float
        :param price4_offline_nspinto: Format - ####.###.
        :type price4_offline_nspinto: float
        :param quantity_mw4_from: Format - ###.
        :type quantity_mw4_from: int
        :param quantity_mw4_to: Format - ###.
        :type quantity_mw4_to: int
        :param block_indicator5: Format - true | false.
        :type block_indicator5: bool
        :param price5_rrspfr_from: Format - ####.###.
        :type price5_rrspfr_from: float
        :param price5_rrspfrto: Format - ####.###.
        :type price5_rrspfrto: float
        :param price5_rrsffr_from: Format - ####.###.
        :type price5_rrsffr_from: float
        :param price5_rrsffrto: Format - ####.###.
        :type price5_rrsffrto: float
        :param price5_rrsufr_from: Format - ####.###.
        :type price5_rrsufr_from: float
        :param price5_rrsufrto: Format - ####.###.
        :type price5_rrsufrto: float
        :param price5_online_nspin_from: Format - ####.###.
        :type price5_online_nspin_from: float
        :param price5_online_nspinto: Format - ####.###.
        :type price5_online_nspinto: float
        :param price5_regup_from: Format - ####.###.
        :type price5_regup_from: float
        :param price5_regupto: Format - ####.###.
        :type price5_regupto: float
        :param price5_regdn_from: Format - ####.###.
        :type price5_regdn_from: float
        :param price5_regdnto: Format - ####.###.
        :type price5_regdnto: float
        :param price5_offline_nspin_from: Format - ####.###.
        :type price5_offline_nspin_from: float
        :param price5_offline_nspinto: Format - ####.###.
        :type price5_offline_nspinto: float
        :param quantity_mw5_from: Format - ###.
        :type quantity_mw5_from: int
        :param quantity_mw5_to: Format - ###.
        :type quantity_mw5_to: int
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param dme_name: Format - abc123.
        :type dme_name: str
        :param resource_name: Format - abc123.
        :type resource_name: str
        :param multi_hour_block: Format - true | false.
        :type multi_hour_block: bool
        :param block_indicator1: Format - true | false.
        :type block_indicator1: bool
        :param price1_rrspfr_from: Format - ####.###.
        :type price1_rrspfr_from: float
        :param price1_rrspfrto: Format - ####.###.
        :type price1_rrspfrto: float
        :param price1_rrsffr_from: Format - ####.###.
        :type price1_rrsffr_from: float
        :param price1_rrsffrto: Format - ####.###.
        :type price1_rrsffrto: float
        :param price1_rrsufr_from: Format - ####.###.
        :type price1_rrsufr_from: float
        :param price1_rrsufrto: Format - ####.###.
        :type price1_rrsufrto: float
        :param price1_online_nspin_from: Format - ####.###.
        :type price1_online_nspin_from: float
        :param price1_online_nspinto: Format - ####.###.
        :type price1_online_nspinto: float
        :param price1_regup_from: Format - ####.###.
        :type price1_regup_from: float
        :param price1_regupto: Format - ####.###.
        :type price1_regupto: float
        :param price1_regdn_from: Format - ####.###.
        :type price1_regdn_from: float
        :param price1_regdnto: Format - ####.###.
        :type price1_regdnto: float
        :param price1_offline_nspin_from: Format - ####.###.
        :type price1_offline_nspin_from: float
        :param price1_offline_nspinto: Format - ####.###.
        :type price1_offline_nspinto: float
        :param quantity_mw1_from: Format - ###.
        :type quantity_mw1_from: int
        :param quantity_mw1_to: Format - ###.
        :type quantity_mw1_to: int
        :param block_indicator2: Format - true | false.
        :type block_indicator2: bool
        :param price2_rrspfr_from: Format - ####.###.
        :type price2_rrspfr_from: float
        :param price2_rrspfrto: Format - ####.###.
        :type price2_rrspfrto: float
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data46_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            price2_rrsffr_from=price2_rrsffr_from,
            price2_rrsffrto=price2_rrsffrto,
            price2_rrsufr_from=price2_rrsufr_from,
            price2_rrsufrto=price2_rrsufrto,
            price2_online_nspin_from=price2_online_nspin_from,
            price2_online_nspinto=price2_online_nspinto,
            price2_regup_from=price2_regup_from,
            price2_regupto=price2_regupto,
            price2_regdn_from=price2_regdn_from,
            price2_regdnto=price2_regdnto,
            price2_offline_nspin_from=price2_offline_nspin_from,
            price2_offline_nspinto=price2_offline_nspinto,
            quantity_mw2_from=quantity_mw2_from,
            quantity_mw2_to=quantity_mw2_to,
            block_indicator3=block_indicator3,
            price3_rrspfr_from=price3_rrspfr_from,
            price3_rrspfrto=price3_rrspfrto,
            price3_rrsffr_from=price3_rrsffr_from,
            price3_rrsffrto=price3_rrsffrto,
            price3_rrsufr_from=price3_rrsufr_from,
            price3_rrsufrto=price3_rrsufrto,
            price3_online_nspin_from=price3_online_nspin_from,
            price3_online_nspinto=price3_online_nspinto,
            price3_regup_from=price3_regup_from,
            price3_regupto=price3_regupto,
            price3_regdn_from=price3_regdn_from,
            price3_regdnto=price3_regdnto,
            price3_offline_nspin_from=price3_offline_nspin_from,
            price3_offline_nspinto=price3_offline_nspinto,
            quantity_mw3_from=quantity_mw3_from,
            quantity_mw3_to=quantity_mw3_to,
            block_indicator4=block_indicator4,
            price4_rrspfr_from=price4_rrspfr_from,
            price4_rrspfrto=price4_rrspfrto,
            price4_rrsffr_from=price4_rrsffr_from,
            price4_rrsffrto=price4_rrsffrto,
            price4_rrsufr_from=price4_rrsufr_from,
            price4_rrsufrto=price4_rrsufrto,
            price4_online_nspin_from=price4_online_nspin_from,
            price4_online_nspinto=price4_online_nspinto,
            price4_regup_from=price4_regup_from,
            price4_regupto=price4_regupto,
            price4_regdn_from=price4_regdn_from,
            price4_regdnto=price4_regdnto,
            price4_offline_nspin_from=price4_offline_nspin_from,
            price4_offline_nspinto=price4_offline_nspinto,
            quantity_mw4_from=quantity_mw4_from,
            quantity_mw4_to=quantity_mw4_to,
            block_indicator5=block_indicator5,
            price5_rrspfr_from=price5_rrspfr_from,
            price5_rrspfrto=price5_rrspfrto,
            price5_rrsffr_from=price5_rrsffr_from,
            price5_rrsffrto=price5_rrsffrto,
            price5_rrsufr_from=price5_rrsufr_from,
            price5_rrsufrto=price5_rrsufrto,
            price5_online_nspin_from=price5_online_nspin_from,
            price5_online_nspinto=price5_online_nspinto,
            price5_regup_from=price5_regup_from,
            price5_regupto=price5_regupto,
            price5_regdn_from=price5_regdn_from,
            price5_regdnto=price5_regdnto,
            price5_offline_nspin_from=price5_offline_nspin_from,
            price5_offline_nspinto=price5_offline_nspinto,
            quantity_mw5_from=quantity_mw5_from,
            quantity_mw5_to=quantity_mw5_to,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            dme_name=dme_name,
            resource_name=resource_name,
            multi_hour_block=multi_hour_block,
            block_indicator1=block_indicator1,
            price1_rrspfr_from=price1_rrspfr_from,
            price1_rrspfrto=price1_rrspfrto,
            price1_rrsffr_from=price1_rrsffr_from,
            price1_rrsffrto=price1_rrsffrto,
            price1_rrsufr_from=price1_rrsufr_from,
            price1_rrsufrto=price1_rrsufrto,
            price1_online_nspin_from=price1_online_nspin_from,
            price1_online_nspinto=price1_online_nspinto,
            price1_regup_from=price1_regup_from,
            price1_regupto=price1_regupto,
            price1_regdn_from=price1_regdn_from,
            price1_regdnto=price1_regdnto,
            price1_offline_nspin_from=price1_offline_nspin_from,
            price1_offline_nspinto=price1_offline_nspinto,
            quantity_mw1_from=quantity_mw1_from,
            quantity_mw1_to=quantity_mw1_to,
            block_indicator2=block_indicator2,
            price2_rrspfr_from=price2_rrspfr_from,
            price2_rrspfrto=price2_rrspfrto,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_data46_without_preload_content(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        price2_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw2_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw2_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator3: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price3_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price3_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw3_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw3_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator4: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price4_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price4_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw4_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw4_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator5: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price5_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price5_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw5_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw5_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        dme_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        resource_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        multi_hour_block: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        block_indicator1: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price1_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsffr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsffrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsufr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_rrsufrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_online_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_online_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regup_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regupto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regdn_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_regdnto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_offline_nspin_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price1_offline_nspinto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        quantity_mw1_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        quantity_mw1_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        block_indicator2: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        price2_rrspfr_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price2_rrspfrto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """60 Day DAM Generation Resources AS Offers

        60 Day DAM Generation Resources AS Offers

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param price2_rrsffr_from: Format - ####.###.
        :type price2_rrsffr_from: float
        :param price2_rrsffrto: Format - ####.###.
        :type price2_rrsffrto: float
        :param price2_rrsufr_from: Format - ####.###.
        :type price2_rrsufr_from: float
        :param price2_rrsufrto: Format - ####.###.
        :type price2_rrsufrto: float
        :param price2_online_nspin_from: Format - ####.###.
        :type price2_online_nspin_from: float
        :param price2_online_nspinto: Format - ####.###.
        :type price2_online_nspinto: float
        :param price2_regup_from: Format - ####.###.
        :type price2_regup_from: float
        :param price2_regupto: Format - ####.###.
        :type price2_regupto: float
        :param price2_regdn_from: Format - ####.###.
        :type price2_regdn_from: float
        :param price2_regdnto: Format - ####.###.
        :type price2_regdnto: float
        :param price2_offline_nspin_from: Format - ####.###.
        :type price2_offline_nspin_from: float
        :param price2_offline_nspinto: Format - ####.###.
        :type price2_offline_nspinto: float
        :param quantity_mw2_from: Format - ###.
        :type quantity_mw2_from: int
        :param quantity_mw2_to: Format - ###.
        :type quantity_mw2_to: int
        :param block_indicator3: Format - true | false.
        :type block_indicator3: bool
        :param price3_rrspfr_from: Format - ####.###.
        :type price3_rrspfr_from: float
        :param price3_rrspfrto: Format - ####.###.
        :type price3_rrspfrto: float
        :param price3_rrsffr_from: Format - ####.###.
        :type price3_rrsffr_from: float
        :param price3_rrsffrto: Format - ####.###.
        :type price3_rrsffrto: float
        :param price3_rrsufr_from: Format - ####.###.
        :type price3_rrsufr_from: float
        :param price3_rrsufrto: Format - ####.###.
        :type price3_rrsufrto: float
        :param price3_online_nspin_from: Format - ####.###.
        :type price3_online_nspin_from: float
        :param price3_online_nspinto: Format - ####.###.
        :type price3_online_nspinto: float
        :param price3_regup_from: Format - ####.###.
        :type price3_regup_from: float
        :param price3_regupto: Format - ####.###.
        :type price3_regupto: float
        :param price3_regdn_from: Format - ####.###.
        :type price3_regdn_from: float
        :param price3_regdnto: Format - ####.###.
        :type price3_regdnto: float
        :param price3_offline_nspin_from: Format - ####.###.
        :type price3_offline_nspin_from: float
        :param price3_offline_nspinto: Format - ####.###.
        :type price3_offline_nspinto: float
        :param quantity_mw3_from: Format - ###.
        :type quantity_mw3_from: int
        :param quantity_mw3_to: Format - ###.
        :type quantity_mw3_to: int
        :param block_indicator4: Format - true | false.
        :type block_indicator4: bool
        :param price4_rrspfr_from: Format - ####.###.
        :type price4_rrspfr_from: float
        :param price4_rrspfrto: Format - ####.###.
        :type price4_rrspfrto: float
        :param price4_rrsffr_from: Format - ####.###.
        :type price4_rrsffr_from: float
        :param price4_rrsffrto: Format - ####.###.
        :type price4_rrsffrto: float
        :param price4_rrsufr_from: Format - ####.###.
        :type price4_rrsufr_from: float
        :param price4_rrsufrto: Format - ####.###.
        :type price4_rrsufrto: float
        :param price4_online_nspin_from: Format - ####.###.
        :type price4_online_nspin_from: float
        :param price4_online_nspinto: Format - ####.###.
        :type price4_online_nspinto: float
        :param price4_regup_from: Format - ####.###.
        :type price4_regup_from: float
        :param price4_regupto: Format - ####.###.
        :type price4_regupto: float
        :param price4_regdn_from: Format - ####.###.
        :type price4_regdn_from: float
        :param price4_regdnto: Format - ####.###.
        :type price4_regdnto: float
        :param price4_offline_nspin_from: Format - ####.###.
        :type price4_offline_nspin_from: float
        :param price4_offline_nspinto: Format - ####.###.
        :type price4_offline_nspinto: float
        :param quantity_mw4_from: Format - ###.
        :type quantity_mw4_from: int
        :param quantity_mw4_to: Format - ###.
        :type quantity_mw4_to: int
        :param block_indicator5: Format - true | false.
        :type block_indicator5: bool
        :param price5_rrspfr_from: Format - ####.###.
        :type price5_rrspfr_from: float
        :param price5_rrspfrto: Format - ####.###.
        :type price5_rrspfrto: float
        :param price5_rrsffr_from: Format - ####.###.
        :type price5_rrsffr_from: float
        :param price5_rrsffrto: Format - ####.###.
        :type price5_rrsffrto: float
        :param price5_rrsufr_from: Format - ####.###.
        :type price5_rrsufr_from: float
        :param price5_rrsufrto: Format - ####.###.
        :type price5_rrsufrto: float
        :param price5_online_nspin_from: Format - ####.###.
        :type price5_online_nspin_from: float
        :param price5_online_nspinto: Format - ####.###.
        :type price5_online_nspinto: float
        :param price5_regup_from: Format - ####.###.
        :type price5_regup_from: float
        :param price5_regupto: Format - ####.###.
        :type price5_regupto: float
        :param price5_regdn_from: Format - ####.###.
        :type price5_regdn_from: float
        :param price5_regdnto: Format - ####.###.
        :type price5_regdnto: float
        :param price5_offline_nspin_from: Format - ####.###.
        :type price5_offline_nspin_from: float
        :param price5_offline_nspinto: Format - ####.###.
        :type price5_offline_nspinto: float
        :param quantity_mw5_from: Format - ###.
        :type quantity_mw5_from: int
        :param quantity_mw5_to: Format - ###.
        :type quantity_mw5_to: int
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param dme_name: Format - abc123.
        :type dme_name: str
        :param resource_name: Format - abc123.
        :type resource_name: str
        :param multi_hour_block: Format - true | false.
        :type multi_hour_block: bool
        :param block_indicator1: Format - true | false.
        :type block_indicator1: bool
        :param price1_rrspfr_from: Format - ####.###.
        :type price1_rrspfr_from: float
        :param price1_rrspfrto: Format - ####.###.
        :type price1_rrspfrto: float
        :param price1_rrsffr_from: Format - ####.###.
        :type price1_rrsffr_from: float
        :param price1_rrsffrto: Format - ####.###.
        :type price1_rrsffrto: float
        :param price1_rrsufr_from: Format - ####.###.
        :type price1_rrsufr_from: float
        :param price1_rrsufrto: Format - ####.###.
        :type price1_rrsufrto: float
        :param price1_online_nspin_from: Format - ####.###.
        :type price1_online_nspin_from: float
        :param price1_online_nspinto: Format - ####.###.
        :type price1_online_nspinto: float
        :param price1_regup_from: Format - ####.###.
        :type price1_regup_from: float
        :param price1_regupto: Format - ####.###.
        :type price1_regupto: float
        :param price1_regdn_from: Format - ####.###.
        :type price1_regdn_from: float
        :param price1_regdnto: Format - ####.###.
        :type price1_regdnto: float
        :param price1_offline_nspin_from: Format - ####.###.
        :type price1_offline_nspin_from: float
        :param price1_offline_nspinto: Format - ####.###.
        :type price1_offline_nspinto: float
        :param quantity_mw1_from: Format - ###.
        :type quantity_mw1_from: int
        :param quantity_mw1_to: Format - ###.
        :type quantity_mw1_to: int
        :param block_indicator2: Format - true | false.
        :type block_indicator2: bool
        :param price2_rrspfr_from: Format - ####.###.
        :type price2_rrspfr_from: float
        :param price2_rrspfrto: Format - ####.###.
        :type price2_rrspfrto: float
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data46_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            price2_rrsffr_from=price2_rrsffr_from,
            price2_rrsffrto=price2_rrsffrto,
            price2_rrsufr_from=price2_rrsufr_from,
            price2_rrsufrto=price2_rrsufrto,
            price2_online_nspin_from=price2_online_nspin_from,
            price2_online_nspinto=price2_online_nspinto,
            price2_regup_from=price2_regup_from,
            price2_regupto=price2_regupto,
            price2_regdn_from=price2_regdn_from,
            price2_regdnto=price2_regdnto,
            price2_offline_nspin_from=price2_offline_nspin_from,
            price2_offline_nspinto=price2_offline_nspinto,
            quantity_mw2_from=quantity_mw2_from,
            quantity_mw2_to=quantity_mw2_to,
            block_indicator3=block_indicator3,
            price3_rrspfr_from=price3_rrspfr_from,
            price3_rrspfrto=price3_rrspfrto,
            price3_rrsffr_from=price3_rrsffr_from,
            price3_rrsffrto=price3_rrsffrto,
            price3_rrsufr_from=price3_rrsufr_from,
            price3_rrsufrto=price3_rrsufrto,
            price3_online_nspin_from=price3_online_nspin_from,
            price3_online_nspinto=price3_online_nspinto,
            price3_regup_from=price3_regup_from,
            price3_regupto=price3_regupto,
            price3_regdn_from=price3_regdn_from,
            price3_regdnto=price3_regdnto,
            price3_offline_nspin_from=price3_offline_nspin_from,
            price3_offline_nspinto=price3_offline_nspinto,
            quantity_mw3_from=quantity_mw3_from,
            quantity_mw3_to=quantity_mw3_to,
            block_indicator4=block_indicator4,
            price4_rrspfr_from=price4_rrspfr_from,
            price4_rrspfrto=price4_rrspfrto,
            price4_rrsffr_from=price4_rrsffr_from,
            price4_rrsffrto=price4_rrsffrto,
            price4_rrsufr_from=price4_rrsufr_from,
            price4_rrsufrto=price4_rrsufrto,
            price4_online_nspin_from=price4_online_nspin_from,
            price4_online_nspinto=price4_online_nspinto,
            price4_regup_from=price4_regup_from,
            price4_regupto=price4_regupto,
            price4_regdn_from=price4_regdn_from,
            price4_regdnto=price4_regdnto,
            price4_offline_nspin_from=price4_offline_nspin_from,
            price4_offline_nspinto=price4_offline_nspinto,
            quantity_mw4_from=quantity_mw4_from,
            quantity_mw4_to=quantity_mw4_to,
            block_indicator5=block_indicator5,
            price5_rrspfr_from=price5_rrspfr_from,
            price5_rrspfrto=price5_rrspfrto,
            price5_rrsffr_from=price5_rrsffr_from,
            price5_rrsffrto=price5_rrsffrto,
            price5_rrsufr_from=price5_rrsufr_from,
            price5_rrsufrto=price5_rrsufrto,
            price5_online_nspin_from=price5_online_nspin_from,
            price5_online_nspinto=price5_online_nspinto,
            price5_regup_from=price5_regup_from,
            price5_regupto=price5_regupto,
            price5_regdn_from=price5_regdn_from,
            price5_regdnto=price5_regdnto,
            price5_offline_nspin_from=price5_offline_nspin_from,
            price5_offline_nspinto=price5_offline_nspinto,
            quantity_mw5_from=quantity_mw5_from,
            quantity_mw5_to=quantity_mw5_to,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            qse_name=qse_name,
            dme_name=dme_name,
            resource_name=resource_name,
            multi_hour_block=multi_hour_block,
            block_indicator1=block_indicator1,
            price1_rrspfr_from=price1_rrspfr_from,
            price1_rrspfrto=price1_rrspfrto,
            price1_rrsffr_from=price1_rrsffr_from,
            price1_rrsffrto=price1_rrsffrto,
            price1_rrsufr_from=price1_rrsufr_from,
            price1_rrsufrto=price1_rrsufrto,
            price1_online_nspin_from=price1_online_nspin_from,
            price1_online_nspinto=price1_online_nspinto,
            price1_regup_from=price1_regup_from,
            price1_regupto=price1_regupto,
            price1_regdn_from=price1_regdn_from,
            price1_regdnto=price1_regdnto,
            price1_offline_nspin_from=price1_offline_nspin_from,
            price1_offline_nspinto=price1_offline_nspinto,
            quantity_mw1_from=quantity_mw1_from,
            quantity_mw1_to=quantity_mw1_to,
            block_indicator2=block_indicator2,
            price2_rrspfr_from=price2_rrspfr_from,
            price2_rrspfrto=price2_rrspfrto,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_data46_serialize(
        self,
        ocp_apim_subscription_key,
        price2_rrsffr_from,
        price2_rrsffrto,
        price2_rrsufr_from,
        price2_rrsufrto,
        price2_online_nspin_from,
        price2_online_nspinto,
        price2_regup_from,
        price2_regupto,
        price2_regdn_from,
        price2_regdnto,
        price2_offline_nspin_from,
        price2_offline_nspinto,
        quantity_mw2_from,
        quantity_mw2_to,
        block_indicator3,
        price3_rrspfr_from,
        price3_rrspfrto,
        price3_rrsffr_from,
        price3_rrsffrto,
        price3_rrsufr_from,
        price3_rrsufrto,
        price3_online_nspin_from,
        price3_online_nspinto,
        price3_regup_from,
        price3_regupto,
        price3_regdn_from,
        price3_regdnto,
        price3_offline_nspin_from,
        price3_offline_nspinto,
        quantity_mw3_from,
        quantity_mw3_to,
        block_indicator4,
        price4_rrspfr_from,
        price4_rrspfrto,
        price4_rrsffr_from,
        price4_rrsffrto,
        price4_rrsufr_from,
        price4_rrsufrto,
        price4_online_nspin_from,
        price4_online_nspinto,
        price4_regup_from,
        price4_regupto,
        price4_regdn_from,
        price4_regdnto,
        price4_offline_nspin_from,
        price4_offline_nspinto,
        quantity_mw4_from,
        quantity_mw4_to,
        block_indicator5,
        price5_rrspfr_from,
        price5_rrspfrto,
        price5_rrsffr_from,
        price5_rrsffrto,
        price5_rrsufr_from,
        price5_rrsufrto,
        price5_online_nspin_from,
        price5_online_nspinto,
        price5_regup_from,
        price5_regupto,
        price5_regdn_from,
        price5_regdnto,
        price5_offline_nspin_from,
        price5_offline_nspinto,
        quantity_mw5_from,
        quantity_mw5_to,
        delivery_date_from,
        delivery_date_to,
        hour_ending_from,
        hour_ending_to,
        qse_name,
        dme_name,
        resource_name,
        multi_hour_block,
        block_indicator1,
        price1_rrspfr_from,
        price1_rrspfrto,
        price1_rrsffr_from,
        price1_rrsffrto,
        price1_rrsufr_from,
        price1_rrsufrto,
        price1_online_nspin_from,
        price1_online_nspinto,
        price1_regup_from,
        price1_regupto,
        price1_regdn_from,
        price1_regdnto,
        price1_offline_nspin_from,
        price1_offline_nspinto,
        quantity_mw1_from,
        quantity_mw1_to,
        block_indicator2,
        price2_rrspfr_from,
        price2_rrspfrto,
        page,
        size,
        sort,
        dir,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if price2_rrsffr_from is not None:
            
            _query_params.append(('price2RRSFFRFrom', price2_rrsffr_from))
            
        if price2_rrsffrto is not None:
            
            _query_params.append(('price2RRSFFRTo', price2_rrsffrto))
            
        if price2_rrsufr_from is not None:
            
            _query_params.append(('price2RRSUFRFrom', price2_rrsufr_from))
            
        if price2_rrsufrto is not None:
            
            _query_params.append(('price2RRSUFRTo', price2_rrsufrto))
            
        if price2_online_nspin_from is not None:
            
            _query_params.append(('price2OnlineNSPINFrom', price2_online_nspin_from))
            
        if price2_online_nspinto is not None:
            
            _query_params.append(('price2OnlineNSPINTo', price2_online_nspinto))
            
        if price2_regup_from is not None:
            
            _query_params.append(('price2REGUPFrom', price2_regup_from))
            
        if price2_regupto is not None:
            
            _query_params.append(('price2REGUPTo', price2_regupto))
            
        if price2_regdn_from is not None:
            
            _query_params.append(('price2REGDNFrom', price2_regdn_from))
            
        if price2_regdnto is not None:
            
            _query_params.append(('price2REGDNTo', price2_regdnto))
            
        if price2_offline_nspin_from is not None:
            
            _query_params.append(('price2OfflineNSPINFrom', price2_offline_nspin_from))
            
        if price2_offline_nspinto is not None:
            
            _query_params.append(('price2OfflineNSPINTo', price2_offline_nspinto))
            
        if quantity_mw2_from is not None:
            
            _query_params.append(('quantityMW2From', quantity_mw2_from))
            
        if quantity_mw2_to is not None:
            
            _query_params.append(('quantityMW2To', quantity_mw2_to))
            
        if block_indicator3 is not None:
            
            _query_params.append(('blockIndicator3', block_indicator3))
            
        if price3_rrspfr_from is not None:
            
            _query_params.append(('price3RRSPFRFrom', price3_rrspfr_from))
            
        if price3_rrspfrto is not None:
            
            _query_params.append(('price3RRSPFRTo', price3_rrspfrto))
            
        if price3_rrsffr_from is not None:
            
            _query_params.append(('price3RRSFFRFrom', price3_rrsffr_from))
            
        if price3_rrsffrto is not None:
            
            _query_params.append(('price3RRSFFRTo', price3_rrsffrto))
            
        if price3_rrsufr_from is not None:
            
            _query_params.append(('price3RRSUFRFrom', price3_rrsufr_from))
            
        if price3_rrsufrto is not None:
            
            _query_params.append(('price3RRSUFRTo', price3_rrsufrto))
            
        if price3_online_nspin_from is not None:
            
            _query_params.append(('price3OnlineNSPINFrom', price3_online_nspin_from))
            
        if price3_online_nspinto is not None:
            
            _query_params.append(('price3OnlineNSPINTo', price3_online_nspinto))
            
        if price3_regup_from is not None:
            
            _query_params.append(('price3REGUPFrom', price3_regup_from))
            
        if price3_regupto is not None:
            
            _query_params.append(('price3REGUPTo', price3_regupto))
            
        if price3_regdn_from is not None:
            
            _query_params.append(('price3REGDNFrom', price3_regdn_from))
            
        if price3_regdnto is not None:
            
            _query_params.append(('price3REGDNTo', price3_regdnto))
            
        if price3_offline_nspin_from is not None:
            
            _query_params.append(('price3OfflineNSPINFrom', price3_offline_nspin_from))
            
        if price3_offline_nspinto is not None:
            
            _query_params.append(('price3OfflineNSPINTo', price3_offline_nspinto))
            
        if quantity_mw3_from is not None:
            
            _query_params.append(('quantityMW3From', quantity_mw3_from))
            
        if quantity_mw3_to is not None:
            
            _query_params.append(('quantityMW3To', quantity_mw3_to))
            
        if block_indicator4 is not None:
            
            _query_params.append(('blockIndicator4', block_indicator4))
            
        if price4_rrspfr_from is not None:
            
            _query_params.append(('price4RRSPFRFrom', price4_rrspfr_from))
            
        if price4_rrspfrto is not None:
            
            _query_params.append(('price4RRSPFRTo', price4_rrspfrto))
            
        if price4_rrsffr_from is not None:
            
            _query_params.append(('price4RRSFFRFrom', price4_rrsffr_from))
            
        if price4_rrsffrto is not None:
            
            _query_params.append(('price4RRSFFRTo', price4_rrsffrto))
            
        if price4_rrsufr_from is not None:
            
            _query_params.append(('price4RRSUFRFrom', price4_rrsufr_from))
            
        if price4_rrsufrto is not None:
            
            _query_params.append(('price4RRSUFRTo', price4_rrsufrto))
            
        if price4_online_nspin_from is not None:
            
            _query_params.append(('price4OnlineNSPINFrom', price4_online_nspin_from))
            
        if price4_online_nspinto is not None:
            
            _query_params.append(('price4OnlineNSPINTo', price4_online_nspinto))
            
        if price4_regup_from is not None:
            
            _query_params.append(('price4REGUPFrom', price4_regup_from))
            
        if price4_regupto is not None:
            
            _query_params.append(('price4REGUPTo', price4_regupto))
            
        if price4_regdn_from is not None:
            
            _query_params.append(('price4REGDNFrom', price4_regdn_from))
            
        if price4_regdnto is not None:
            
            _query_params.append(('price4REGDNTo', price4_regdnto))
            
        if price4_offline_nspin_from is not None:
            
            _query_params.append(('price4OfflineNSPINFrom', price4_offline_nspin_from))
            
        if price4_offline_nspinto is not None:
            
            _query_params.append(('price4OfflineNSPINTo', price4_offline_nspinto))
            
        if quantity_mw4_from is not None:
            
            _query_params.append(('quantityMW4From', quantity_mw4_from))
            
        if quantity_mw4_to is not None:
            
            _query_params.append(('quantityMW4To', quantity_mw4_to))
            
        if block_indicator5 is not None:
            
            _query_params.append(('blockIndicator5', block_indicator5))
            
        if price5_rrspfr_from is not None:
            
            _query_params.append(('price5RRSPFRFrom', price5_rrspfr_from))
            
        if price5_rrspfrto is not None:
            
            _query_params.append(('price5RRSPFRTo', price5_rrspfrto))
            
        if price5_rrsffr_from is not None:
            
            _query_params.append(('price5RRSFFRFrom', price5_rrsffr_from))
            
        if price5_rrsffrto is not None:
            
            _query_params.append(('price5RRSFFRTo', price5_rrsffrto))
            
        if price5_rrsufr_from is not None:
            
            _query_params.append(('price5RRSUFRFrom', price5_rrsufr_from))
            
        if price5_rrsufrto is not None:
            
            _query_params.append(('price5RRSUFRTo', price5_rrsufrto))
            
        if price5_online_nspin_from is not None:
            
            _query_params.append(('price5OnlineNSPINFrom', price5_online_nspin_from))
            
        if price5_online_nspinto is not None:
            
            _query_params.append(('price5OnlineNSPINTo', price5_online_nspinto))
            
        if price5_regup_from is not None:
            
            _query_params.append(('price5REGUPFrom', price5_regup_from))
            
        if price5_regupto is not None:
            
            _query_params.append(('price5REGUPTo', price5_regupto))
            
        if price5_regdn_from is not None:
            
            _query_params.append(('price5REGDNFrom', price5_regdn_from))
            
        if price5_regdnto is not None:
            
            _query_params.append(('price5REGDNTo', price5_regdnto))
            
        if price5_offline_nspin_from is not None:
            
            _query_params.append(('price5OfflineNSPINFrom', price5_offline_nspin_from))
            
        if price5_offline_nspinto is not None:
            
            _query_params.append(('price5OfflineNSPINTo', price5_offline_nspinto))
            
        if quantity_mw5_from is not None:
            
            _query_params.append(('quantityMW5From', quantity_mw5_from))
            
        if quantity_mw5_to is not None:
            
            _query_params.append(('quantityMW5To', quantity_mw5_to))
            
        if delivery_date_from is not None:
            
            _query_params.append(('deliveryDateFrom', delivery_date_from))
            
        if delivery_date_to is not None:
            
            _query_params.append(('deliveryDateTo', delivery_date_to))
            
        if hour_ending_from is not None:
            
            _query_params.append(('hourEndingFrom', hour_ending_from))
            
        if hour_ending_to is not None:
            
            _query_params.append(('hourEndingTo', hour_ending_to))
            
        if qse_name is not None:
            
            _query_params.append(('qseName', qse_name))
            
        if dme_name is not None:
            
            _query_params.append(('dmeName', dme_name))
            
        if resource_name is not None:
            
            _query_params.append(('resourceName', resource_name))
            
        if multi_hour_block is not None:
            
            _query_params.append(('multiHourBlock', multi_hour_block))
            
        if block_indicator1 is not None:
            
            _query_params.append(('blockIndicator1', block_indicator1))
            
        if price1_rrspfr_from is not None:
            
            _query_params.append(('price1RRSPFRFrom', price1_rrspfr_from))
            
        if price1_rrspfrto is not None:
            
            _query_params.append(('price1RRSPFRTo', price1_rrspfrto))
            
        if price1_rrsffr_from is not None:
            
            _query_params.append(('price1RRSFFRFrom', price1_rrsffr_from))
            
        if price1_rrsffrto is not None:
            
            _query_params.append(('price1RRSFFRTo', price1_rrsffrto))
            
        if price1_rrsufr_from is not None:
            
            _query_params.append(('price1RRSUFRFrom', price1_rrsufr_from))
            
        if price1_rrsufrto is not None:
            
            _query_params.append(('price1RRSUFRTo', price1_rrsufrto))
            
        if price1_online_nspin_from is not None:
            
            _query_params.append(('price1OnlineNSPINFrom', price1_online_nspin_from))
            
        if price1_online_nspinto is not None:
            
            _query_params.append(('price1OnlineNSPINTo', price1_online_nspinto))
            
        if price1_regup_from is not None:
            
            _query_params.append(('price1REGUPFrom', price1_regup_from))
            
        if price1_regupto is not None:
            
            _query_params.append(('price1REGUPTo', price1_regupto))
            
        if price1_regdn_from is not None:
            
            _query_params.append(('price1REGDNFrom', price1_regdn_from))
            
        if price1_regdnto is not None:
            
            _query_params.append(('price1REGDNTo', price1_regdnto))
            
        if price1_offline_nspin_from is not None:
            
            _query_params.append(('price1OfflineNSPINFrom', price1_offline_nspin_from))
            
        if price1_offline_nspinto is not None:
            
            _query_params.append(('price1OfflineNSPINTo', price1_offline_nspinto))
            
        if quantity_mw1_from is not None:
            
            _query_params.append(('quantityMW1From', quantity_mw1_from))
            
        if quantity_mw1_to is not None:
            
            _query_params.append(('quantityMW1To', quantity_mw1_to))
            
        if block_indicator2 is not None:
            
            _query_params.append(('blockIndicator2', block_indicator2))
            
        if price2_rrspfr_from is not None:
            
            _query_params.append(('price2RRSPFRFrom', price2_rrspfr_from))
            
        if price2_rrspfrto is not None:
            
            _query_params.append(('price2RRSPFRTo', price2_rrspfrto))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if dir is not None:
            
            _query_params.append(('dir', dir))
            
        # process the header parameters
        if ocp_apim_subscription_key is not None:
            _header_params['Ocp-Apim-Subscription-Key'] = ocp_apim_subscription_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/np3-966-er/60_dam_gen_res_as_offers',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_data47(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        settlement_point_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        energy_only_offer_mw1_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw1_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price1_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price1_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw2_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw2_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price2_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price2_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw3_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw3_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price3_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price3_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw4_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw4_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price4_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price4_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw5_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw5_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price5_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price5_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw6_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw6_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price6_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price6_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw7_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw7_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price7_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price7_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw8_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw8_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price8_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price8_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw9_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw9_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price9_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price9_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw10_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw10_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price10_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price10_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        offer_id_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        offer_id_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        multi_hour_block: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        block_curve: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Report:
        """60 Day DAM Energy Only Offers

        60 Day DAM Energy Only Offers

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param settlement_point_name: Format - abc123.
        :type settlement_point_name: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param energy_only_offer_mw1_from: Format - ####.###.
        :type energy_only_offer_mw1_from: float
        :param energy_only_offer_mw1_to: Format - ####.###.
        :type energy_only_offer_mw1_to: float
        :param energy_only_offer_price1_from: Format - ####.###.
        :type energy_only_offer_price1_from: float
        :param energy_only_offer_price1_to: Format - ####.###.
        :type energy_only_offer_price1_to: float
        :param energy_only_offer_mw2_from: Format - ####.###.
        :type energy_only_offer_mw2_from: float
        :param energy_only_offer_mw2_to: Format - ####.###.
        :type energy_only_offer_mw2_to: float
        :param energy_only_offer_price2_from: Format - ####.###.
        :type energy_only_offer_price2_from: float
        :param energy_only_offer_price2_to: Format - ####.###.
        :type energy_only_offer_price2_to: float
        :param energy_only_offer_mw3_from: Format - ####.###.
        :type energy_only_offer_mw3_from: float
        :param energy_only_offer_mw3_to: Format - ####.###.
        :type energy_only_offer_mw3_to: float
        :param energy_only_offer_price3_from: Format - ####.###.
        :type energy_only_offer_price3_from: float
        :param energy_only_offer_price3_to: Format - ####.###.
        :type energy_only_offer_price3_to: float
        :param energy_only_offer_mw4_from: Format - ####.###.
        :type energy_only_offer_mw4_from: float
        :param energy_only_offer_mw4_to: Format - ####.###.
        :type energy_only_offer_mw4_to: float
        :param energy_only_offer_price4_from: Format - ####.###.
        :type energy_only_offer_price4_from: float
        :param energy_only_offer_price4_to: Format - ####.###.
        :type energy_only_offer_price4_to: float
        :param energy_only_offer_mw5_from: Format - ####.###.
        :type energy_only_offer_mw5_from: float
        :param energy_only_offer_mw5_to: Format - ####.###.
        :type energy_only_offer_mw5_to: float
        :param energy_only_offer_price5_from: Format - ####.###.
        :type energy_only_offer_price5_from: float
        :param energy_only_offer_price5_to: Format - ####.###.
        :type energy_only_offer_price5_to: float
        :param energy_only_offer_mw6_from: Format - ####.###.
        :type energy_only_offer_mw6_from: float
        :param energy_only_offer_mw6_to: Format - ####.###.
        :type energy_only_offer_mw6_to: float
        :param energy_only_offer_price6_from: Format - ####.###.
        :type energy_only_offer_price6_from: float
        :param energy_only_offer_price6_to: Format - ####.###.
        :type energy_only_offer_price6_to: float
        :param energy_only_offer_mw7_from: Format - ####.###.
        :type energy_only_offer_mw7_from: float
        :param energy_only_offer_mw7_to: Format - ####.###.
        :type energy_only_offer_mw7_to: float
        :param energy_only_offer_price7_from: Format - ####.###.
        :type energy_only_offer_price7_from: float
        :param energy_only_offer_price7_to: Format - ####.###.
        :type energy_only_offer_price7_to: float
        :param energy_only_offer_mw8_from: Format - ####.###.
        :type energy_only_offer_mw8_from: float
        :param energy_only_offer_mw8_to: Format - ####.###.
        :type energy_only_offer_mw8_to: float
        :param energy_only_offer_price8_from: Format - ####.###.
        :type energy_only_offer_price8_from: float
        :param energy_only_offer_price8_to: Format - ####.###.
        :type energy_only_offer_price8_to: float
        :param energy_only_offer_mw9_from: Format - ####.###.
        :type energy_only_offer_mw9_from: float
        :param energy_only_offer_mw9_to: Format - ####.###.
        :type energy_only_offer_mw9_to: float
        :param energy_only_offer_price9_from: Format - ####.###.
        :type energy_only_offer_price9_from: float
        :param energy_only_offer_price9_to: Format - ####.###.
        :type energy_only_offer_price9_to: float
        :param energy_only_offer_mw10_from: Format - ####.###.
        :type energy_only_offer_mw10_from: float
        :param energy_only_offer_mw10_to: Format - ####.###.
        :type energy_only_offer_mw10_to: float
        :param energy_only_offer_price10_from: Format - ####.###.
        :type energy_only_offer_price10_from: float
        :param energy_only_offer_price10_to: Format - ####.###.
        :type energy_only_offer_price10_to: float
        :param offer_id_from: Format - ####.###.
        :type offer_id_from: float
        :param offer_id_to: Format - ####.###.
        :type offer_id_to: float
        :param multi_hour_block: Format - true | false.
        :type multi_hour_block: bool
        :param block_curve: Format - true | false.
        :type block_curve: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data47_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            settlement_point_name=settlement_point_name,
            qse_name=qse_name,
            energy_only_offer_mw1_from=energy_only_offer_mw1_from,
            energy_only_offer_mw1_to=energy_only_offer_mw1_to,
            energy_only_offer_price1_from=energy_only_offer_price1_from,
            energy_only_offer_price1_to=energy_only_offer_price1_to,
            energy_only_offer_mw2_from=energy_only_offer_mw2_from,
            energy_only_offer_mw2_to=energy_only_offer_mw2_to,
            energy_only_offer_price2_from=energy_only_offer_price2_from,
            energy_only_offer_price2_to=energy_only_offer_price2_to,
            energy_only_offer_mw3_from=energy_only_offer_mw3_from,
            energy_only_offer_mw3_to=energy_only_offer_mw3_to,
            energy_only_offer_price3_from=energy_only_offer_price3_from,
            energy_only_offer_price3_to=energy_only_offer_price3_to,
            energy_only_offer_mw4_from=energy_only_offer_mw4_from,
            energy_only_offer_mw4_to=energy_only_offer_mw4_to,
            energy_only_offer_price4_from=energy_only_offer_price4_from,
            energy_only_offer_price4_to=energy_only_offer_price4_to,
            energy_only_offer_mw5_from=energy_only_offer_mw5_from,
            energy_only_offer_mw5_to=energy_only_offer_mw5_to,
            energy_only_offer_price5_from=energy_only_offer_price5_from,
            energy_only_offer_price5_to=energy_only_offer_price5_to,
            energy_only_offer_mw6_from=energy_only_offer_mw6_from,
            energy_only_offer_mw6_to=energy_only_offer_mw6_to,
            energy_only_offer_price6_from=energy_only_offer_price6_from,
            energy_only_offer_price6_to=energy_only_offer_price6_to,
            energy_only_offer_mw7_from=energy_only_offer_mw7_from,
            energy_only_offer_mw7_to=energy_only_offer_mw7_to,
            energy_only_offer_price7_from=energy_only_offer_price7_from,
            energy_only_offer_price7_to=energy_only_offer_price7_to,
            energy_only_offer_mw8_from=energy_only_offer_mw8_from,
            energy_only_offer_mw8_to=energy_only_offer_mw8_to,
            energy_only_offer_price8_from=energy_only_offer_price8_from,
            energy_only_offer_price8_to=energy_only_offer_price8_to,
            energy_only_offer_mw9_from=energy_only_offer_mw9_from,
            energy_only_offer_mw9_to=energy_only_offer_mw9_to,
            energy_only_offer_price9_from=energy_only_offer_price9_from,
            energy_only_offer_price9_to=energy_only_offer_price9_to,
            energy_only_offer_mw10_from=energy_only_offer_mw10_from,
            energy_only_offer_mw10_to=energy_only_offer_mw10_to,
            energy_only_offer_price10_from=energy_only_offer_price10_from,
            energy_only_offer_price10_to=energy_only_offer_price10_to,
            offer_id_from=offer_id_from,
            offer_id_to=offer_id_to,
            multi_hour_block=multi_hour_block,
            block_curve=block_curve,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_data47_with_http_info(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        settlement_point_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        energy_only_offer_mw1_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw1_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price1_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price1_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw2_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw2_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price2_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price2_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw3_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw3_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price3_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price3_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw4_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw4_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price4_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price4_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw5_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw5_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price5_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price5_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw6_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw6_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price6_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price6_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw7_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw7_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price7_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price7_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw8_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw8_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price8_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price8_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw9_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw9_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price9_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price9_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw10_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw10_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price10_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price10_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        offer_id_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        offer_id_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        multi_hour_block: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        block_curve: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Report]:
        """60 Day DAM Energy Only Offers

        60 Day DAM Energy Only Offers

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param settlement_point_name: Format - abc123.
        :type settlement_point_name: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param energy_only_offer_mw1_from: Format - ####.###.
        :type energy_only_offer_mw1_from: float
        :param energy_only_offer_mw1_to: Format - ####.###.
        :type energy_only_offer_mw1_to: float
        :param energy_only_offer_price1_from: Format - ####.###.
        :type energy_only_offer_price1_from: float
        :param energy_only_offer_price1_to: Format - ####.###.
        :type energy_only_offer_price1_to: float
        :param energy_only_offer_mw2_from: Format - ####.###.
        :type energy_only_offer_mw2_from: float
        :param energy_only_offer_mw2_to: Format - ####.###.
        :type energy_only_offer_mw2_to: float
        :param energy_only_offer_price2_from: Format - ####.###.
        :type energy_only_offer_price2_from: float
        :param energy_only_offer_price2_to: Format - ####.###.
        :type energy_only_offer_price2_to: float
        :param energy_only_offer_mw3_from: Format - ####.###.
        :type energy_only_offer_mw3_from: float
        :param energy_only_offer_mw3_to: Format - ####.###.
        :type energy_only_offer_mw3_to: float
        :param energy_only_offer_price3_from: Format - ####.###.
        :type energy_only_offer_price3_from: float
        :param energy_only_offer_price3_to: Format - ####.###.
        :type energy_only_offer_price3_to: float
        :param energy_only_offer_mw4_from: Format - ####.###.
        :type energy_only_offer_mw4_from: float
        :param energy_only_offer_mw4_to: Format - ####.###.
        :type energy_only_offer_mw4_to: float
        :param energy_only_offer_price4_from: Format - ####.###.
        :type energy_only_offer_price4_from: float
        :param energy_only_offer_price4_to: Format - ####.###.
        :type energy_only_offer_price4_to: float
        :param energy_only_offer_mw5_from: Format - ####.###.
        :type energy_only_offer_mw5_from: float
        :param energy_only_offer_mw5_to: Format - ####.###.
        :type energy_only_offer_mw5_to: float
        :param energy_only_offer_price5_from: Format - ####.###.
        :type energy_only_offer_price5_from: float
        :param energy_only_offer_price5_to: Format - ####.###.
        :type energy_only_offer_price5_to: float
        :param energy_only_offer_mw6_from: Format - ####.###.
        :type energy_only_offer_mw6_from: float
        :param energy_only_offer_mw6_to: Format - ####.###.
        :type energy_only_offer_mw6_to: float
        :param energy_only_offer_price6_from: Format - ####.###.
        :type energy_only_offer_price6_from: float
        :param energy_only_offer_price6_to: Format - ####.###.
        :type energy_only_offer_price6_to: float
        :param energy_only_offer_mw7_from: Format - ####.###.
        :type energy_only_offer_mw7_from: float
        :param energy_only_offer_mw7_to: Format - ####.###.
        :type energy_only_offer_mw7_to: float
        :param energy_only_offer_price7_from: Format - ####.###.
        :type energy_only_offer_price7_from: float
        :param energy_only_offer_price7_to: Format - ####.###.
        :type energy_only_offer_price7_to: float
        :param energy_only_offer_mw8_from: Format - ####.###.
        :type energy_only_offer_mw8_from: float
        :param energy_only_offer_mw8_to: Format - ####.###.
        :type energy_only_offer_mw8_to: float
        :param energy_only_offer_price8_from: Format - ####.###.
        :type energy_only_offer_price8_from: float
        :param energy_only_offer_price8_to: Format - ####.###.
        :type energy_only_offer_price8_to: float
        :param energy_only_offer_mw9_from: Format - ####.###.
        :type energy_only_offer_mw9_from: float
        :param energy_only_offer_mw9_to: Format - ####.###.
        :type energy_only_offer_mw9_to: float
        :param energy_only_offer_price9_from: Format - ####.###.
        :type energy_only_offer_price9_from: float
        :param energy_only_offer_price9_to: Format - ####.###.
        :type energy_only_offer_price9_to: float
        :param energy_only_offer_mw10_from: Format - ####.###.
        :type energy_only_offer_mw10_from: float
        :param energy_only_offer_mw10_to: Format - ####.###.
        :type energy_only_offer_mw10_to: float
        :param energy_only_offer_price10_from: Format - ####.###.
        :type energy_only_offer_price10_from: float
        :param energy_only_offer_price10_to: Format - ####.###.
        :type energy_only_offer_price10_to: float
        :param offer_id_from: Format - ####.###.
        :type offer_id_from: float
        :param offer_id_to: Format - ####.###.
        :type offer_id_to: float
        :param multi_hour_block: Format - true | false.
        :type multi_hour_block: bool
        :param block_curve: Format - true | false.
        :type block_curve: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data47_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            settlement_point_name=settlement_point_name,
            qse_name=qse_name,
            energy_only_offer_mw1_from=energy_only_offer_mw1_from,
            energy_only_offer_mw1_to=energy_only_offer_mw1_to,
            energy_only_offer_price1_from=energy_only_offer_price1_from,
            energy_only_offer_price1_to=energy_only_offer_price1_to,
            energy_only_offer_mw2_from=energy_only_offer_mw2_from,
            energy_only_offer_mw2_to=energy_only_offer_mw2_to,
            energy_only_offer_price2_from=energy_only_offer_price2_from,
            energy_only_offer_price2_to=energy_only_offer_price2_to,
            energy_only_offer_mw3_from=energy_only_offer_mw3_from,
            energy_only_offer_mw3_to=energy_only_offer_mw3_to,
            energy_only_offer_price3_from=energy_only_offer_price3_from,
            energy_only_offer_price3_to=energy_only_offer_price3_to,
            energy_only_offer_mw4_from=energy_only_offer_mw4_from,
            energy_only_offer_mw4_to=energy_only_offer_mw4_to,
            energy_only_offer_price4_from=energy_only_offer_price4_from,
            energy_only_offer_price4_to=energy_only_offer_price4_to,
            energy_only_offer_mw5_from=energy_only_offer_mw5_from,
            energy_only_offer_mw5_to=energy_only_offer_mw5_to,
            energy_only_offer_price5_from=energy_only_offer_price5_from,
            energy_only_offer_price5_to=energy_only_offer_price5_to,
            energy_only_offer_mw6_from=energy_only_offer_mw6_from,
            energy_only_offer_mw6_to=energy_only_offer_mw6_to,
            energy_only_offer_price6_from=energy_only_offer_price6_from,
            energy_only_offer_price6_to=energy_only_offer_price6_to,
            energy_only_offer_mw7_from=energy_only_offer_mw7_from,
            energy_only_offer_mw7_to=energy_only_offer_mw7_to,
            energy_only_offer_price7_from=energy_only_offer_price7_from,
            energy_only_offer_price7_to=energy_only_offer_price7_to,
            energy_only_offer_mw8_from=energy_only_offer_mw8_from,
            energy_only_offer_mw8_to=energy_only_offer_mw8_to,
            energy_only_offer_price8_from=energy_only_offer_price8_from,
            energy_only_offer_price8_to=energy_only_offer_price8_to,
            energy_only_offer_mw9_from=energy_only_offer_mw9_from,
            energy_only_offer_mw9_to=energy_only_offer_mw9_to,
            energy_only_offer_price9_from=energy_only_offer_price9_from,
            energy_only_offer_price9_to=energy_only_offer_price9_to,
            energy_only_offer_mw10_from=energy_only_offer_mw10_from,
            energy_only_offer_mw10_to=energy_only_offer_mw10_to,
            energy_only_offer_price10_from=energy_only_offer_price10_from,
            energy_only_offer_price10_to=energy_only_offer_price10_to,
            offer_id_from=offer_id_from,
            offer_id_to=offer_id_to,
            multi_hour_block=multi_hour_block,
            block_curve=block_curve,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_data47_without_preload_content(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        settlement_point_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        energy_only_offer_mw1_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw1_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price1_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price1_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw2_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw2_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price2_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price2_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw3_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw3_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price3_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price3_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw4_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw4_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price4_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price4_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw5_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw5_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price5_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price5_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw6_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw6_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price6_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price6_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw7_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw7_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price7_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price7_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw8_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw8_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price8_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price8_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw9_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw9_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price9_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price9_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw10_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_mw10_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price10_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_price10_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        offer_id_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        offer_id_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        multi_hour_block: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        block_curve: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """60 Day DAM Energy Only Offers

        60 Day DAM Energy Only Offers

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param settlement_point_name: Format - abc123.
        :type settlement_point_name: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param energy_only_offer_mw1_from: Format - ####.###.
        :type energy_only_offer_mw1_from: float
        :param energy_only_offer_mw1_to: Format - ####.###.
        :type energy_only_offer_mw1_to: float
        :param energy_only_offer_price1_from: Format - ####.###.
        :type energy_only_offer_price1_from: float
        :param energy_only_offer_price1_to: Format - ####.###.
        :type energy_only_offer_price1_to: float
        :param energy_only_offer_mw2_from: Format - ####.###.
        :type energy_only_offer_mw2_from: float
        :param energy_only_offer_mw2_to: Format - ####.###.
        :type energy_only_offer_mw2_to: float
        :param energy_only_offer_price2_from: Format - ####.###.
        :type energy_only_offer_price2_from: float
        :param energy_only_offer_price2_to: Format - ####.###.
        :type energy_only_offer_price2_to: float
        :param energy_only_offer_mw3_from: Format - ####.###.
        :type energy_only_offer_mw3_from: float
        :param energy_only_offer_mw3_to: Format - ####.###.
        :type energy_only_offer_mw3_to: float
        :param energy_only_offer_price3_from: Format - ####.###.
        :type energy_only_offer_price3_from: float
        :param energy_only_offer_price3_to: Format - ####.###.
        :type energy_only_offer_price3_to: float
        :param energy_only_offer_mw4_from: Format - ####.###.
        :type energy_only_offer_mw4_from: float
        :param energy_only_offer_mw4_to: Format - ####.###.
        :type energy_only_offer_mw4_to: float
        :param energy_only_offer_price4_from: Format - ####.###.
        :type energy_only_offer_price4_from: float
        :param energy_only_offer_price4_to: Format - ####.###.
        :type energy_only_offer_price4_to: float
        :param energy_only_offer_mw5_from: Format - ####.###.
        :type energy_only_offer_mw5_from: float
        :param energy_only_offer_mw5_to: Format - ####.###.
        :type energy_only_offer_mw5_to: float
        :param energy_only_offer_price5_from: Format - ####.###.
        :type energy_only_offer_price5_from: float
        :param energy_only_offer_price5_to: Format - ####.###.
        :type energy_only_offer_price5_to: float
        :param energy_only_offer_mw6_from: Format - ####.###.
        :type energy_only_offer_mw6_from: float
        :param energy_only_offer_mw6_to: Format - ####.###.
        :type energy_only_offer_mw6_to: float
        :param energy_only_offer_price6_from: Format - ####.###.
        :type energy_only_offer_price6_from: float
        :param energy_only_offer_price6_to: Format - ####.###.
        :type energy_only_offer_price6_to: float
        :param energy_only_offer_mw7_from: Format - ####.###.
        :type energy_only_offer_mw7_from: float
        :param energy_only_offer_mw7_to: Format - ####.###.
        :type energy_only_offer_mw7_to: float
        :param energy_only_offer_price7_from: Format - ####.###.
        :type energy_only_offer_price7_from: float
        :param energy_only_offer_price7_to: Format - ####.###.
        :type energy_only_offer_price7_to: float
        :param energy_only_offer_mw8_from: Format - ####.###.
        :type energy_only_offer_mw8_from: float
        :param energy_only_offer_mw8_to: Format - ####.###.
        :type energy_only_offer_mw8_to: float
        :param energy_only_offer_price8_from: Format - ####.###.
        :type energy_only_offer_price8_from: float
        :param energy_only_offer_price8_to: Format - ####.###.
        :type energy_only_offer_price8_to: float
        :param energy_only_offer_mw9_from: Format - ####.###.
        :type energy_only_offer_mw9_from: float
        :param energy_only_offer_mw9_to: Format - ####.###.
        :type energy_only_offer_mw9_to: float
        :param energy_only_offer_price9_from: Format - ####.###.
        :type energy_only_offer_price9_from: float
        :param energy_only_offer_price9_to: Format - ####.###.
        :type energy_only_offer_price9_to: float
        :param energy_only_offer_mw10_from: Format - ####.###.
        :type energy_only_offer_mw10_from: float
        :param energy_only_offer_mw10_to: Format - ####.###.
        :type energy_only_offer_mw10_to: float
        :param energy_only_offer_price10_from: Format - ####.###.
        :type energy_only_offer_price10_from: float
        :param energy_only_offer_price10_to: Format - ####.###.
        :type energy_only_offer_price10_to: float
        :param offer_id_from: Format - ####.###.
        :type offer_id_from: float
        :param offer_id_to: Format - ####.###.
        :type offer_id_to: float
        :param multi_hour_block: Format - true | false.
        :type multi_hour_block: bool
        :param block_curve: Format - true | false.
        :type block_curve: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data47_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            settlement_point_name=settlement_point_name,
            qse_name=qse_name,
            energy_only_offer_mw1_from=energy_only_offer_mw1_from,
            energy_only_offer_mw1_to=energy_only_offer_mw1_to,
            energy_only_offer_price1_from=energy_only_offer_price1_from,
            energy_only_offer_price1_to=energy_only_offer_price1_to,
            energy_only_offer_mw2_from=energy_only_offer_mw2_from,
            energy_only_offer_mw2_to=energy_only_offer_mw2_to,
            energy_only_offer_price2_from=energy_only_offer_price2_from,
            energy_only_offer_price2_to=energy_only_offer_price2_to,
            energy_only_offer_mw3_from=energy_only_offer_mw3_from,
            energy_only_offer_mw3_to=energy_only_offer_mw3_to,
            energy_only_offer_price3_from=energy_only_offer_price3_from,
            energy_only_offer_price3_to=energy_only_offer_price3_to,
            energy_only_offer_mw4_from=energy_only_offer_mw4_from,
            energy_only_offer_mw4_to=energy_only_offer_mw4_to,
            energy_only_offer_price4_from=energy_only_offer_price4_from,
            energy_only_offer_price4_to=energy_only_offer_price4_to,
            energy_only_offer_mw5_from=energy_only_offer_mw5_from,
            energy_only_offer_mw5_to=energy_only_offer_mw5_to,
            energy_only_offer_price5_from=energy_only_offer_price5_from,
            energy_only_offer_price5_to=energy_only_offer_price5_to,
            energy_only_offer_mw6_from=energy_only_offer_mw6_from,
            energy_only_offer_mw6_to=energy_only_offer_mw6_to,
            energy_only_offer_price6_from=energy_only_offer_price6_from,
            energy_only_offer_price6_to=energy_only_offer_price6_to,
            energy_only_offer_mw7_from=energy_only_offer_mw7_from,
            energy_only_offer_mw7_to=energy_only_offer_mw7_to,
            energy_only_offer_price7_from=energy_only_offer_price7_from,
            energy_only_offer_price7_to=energy_only_offer_price7_to,
            energy_only_offer_mw8_from=energy_only_offer_mw8_from,
            energy_only_offer_mw8_to=energy_only_offer_mw8_to,
            energy_only_offer_price8_from=energy_only_offer_price8_from,
            energy_only_offer_price8_to=energy_only_offer_price8_to,
            energy_only_offer_mw9_from=energy_only_offer_mw9_from,
            energy_only_offer_mw9_to=energy_only_offer_mw9_to,
            energy_only_offer_price9_from=energy_only_offer_price9_from,
            energy_only_offer_price9_to=energy_only_offer_price9_to,
            energy_only_offer_mw10_from=energy_only_offer_mw10_from,
            energy_only_offer_mw10_to=energy_only_offer_mw10_to,
            energy_only_offer_price10_from=energy_only_offer_price10_from,
            energy_only_offer_price10_to=energy_only_offer_price10_to,
            offer_id_from=offer_id_from,
            offer_id_to=offer_id_to,
            multi_hour_block=multi_hour_block,
            block_curve=block_curve,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_data47_serialize(
        self,
        ocp_apim_subscription_key,
        delivery_date_from,
        delivery_date_to,
        hour_ending_from,
        hour_ending_to,
        settlement_point_name,
        qse_name,
        energy_only_offer_mw1_from,
        energy_only_offer_mw1_to,
        energy_only_offer_price1_from,
        energy_only_offer_price1_to,
        energy_only_offer_mw2_from,
        energy_only_offer_mw2_to,
        energy_only_offer_price2_from,
        energy_only_offer_price2_to,
        energy_only_offer_mw3_from,
        energy_only_offer_mw3_to,
        energy_only_offer_price3_from,
        energy_only_offer_price3_to,
        energy_only_offer_mw4_from,
        energy_only_offer_mw4_to,
        energy_only_offer_price4_from,
        energy_only_offer_price4_to,
        energy_only_offer_mw5_from,
        energy_only_offer_mw5_to,
        energy_only_offer_price5_from,
        energy_only_offer_price5_to,
        energy_only_offer_mw6_from,
        energy_only_offer_mw6_to,
        energy_only_offer_price6_from,
        energy_only_offer_price6_to,
        energy_only_offer_mw7_from,
        energy_only_offer_mw7_to,
        energy_only_offer_price7_from,
        energy_only_offer_price7_to,
        energy_only_offer_mw8_from,
        energy_only_offer_mw8_to,
        energy_only_offer_price8_from,
        energy_only_offer_price8_to,
        energy_only_offer_mw9_from,
        energy_only_offer_mw9_to,
        energy_only_offer_price9_from,
        energy_only_offer_price9_to,
        energy_only_offer_mw10_from,
        energy_only_offer_mw10_to,
        energy_only_offer_price10_from,
        energy_only_offer_price10_to,
        offer_id_from,
        offer_id_to,
        multi_hour_block,
        block_curve,
        page,
        size,
        sort,
        dir,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if delivery_date_from is not None:
            
            _query_params.append(('deliveryDateFrom', delivery_date_from))
            
        if delivery_date_to is not None:
            
            _query_params.append(('deliveryDateTo', delivery_date_to))
            
        if hour_ending_from is not None:
            
            _query_params.append(('hourEndingFrom', hour_ending_from))
            
        if hour_ending_to is not None:
            
            _query_params.append(('hourEndingTo', hour_ending_to))
            
        if settlement_point_name is not None:
            
            _query_params.append(('settlementPointName', settlement_point_name))
            
        if qse_name is not None:
            
            _query_params.append(('qseName', qse_name))
            
        if energy_only_offer_mw1_from is not None:
            
            _query_params.append(('energyOnlyOfferMW1From', energy_only_offer_mw1_from))
            
        if energy_only_offer_mw1_to is not None:
            
            _query_params.append(('energyOnlyOfferMW1To', energy_only_offer_mw1_to))
            
        if energy_only_offer_price1_from is not None:
            
            _query_params.append(('energyOnlyOfferPrice1From', energy_only_offer_price1_from))
            
        if energy_only_offer_price1_to is not None:
            
            _query_params.append(('energyOnlyOfferPrice1To', energy_only_offer_price1_to))
            
        if energy_only_offer_mw2_from is not None:
            
            _query_params.append(('energyOnlyOfferMW2From', energy_only_offer_mw2_from))
            
        if energy_only_offer_mw2_to is not None:
            
            _query_params.append(('energyOnlyOfferMW2To', energy_only_offer_mw2_to))
            
        if energy_only_offer_price2_from is not None:
            
            _query_params.append(('energyOnlyOfferPrice2From', energy_only_offer_price2_from))
            
        if energy_only_offer_price2_to is not None:
            
            _query_params.append(('energyOnlyOfferPrice2To', energy_only_offer_price2_to))
            
        if energy_only_offer_mw3_from is not None:
            
            _query_params.append(('energyOnlyOfferMW3From', energy_only_offer_mw3_from))
            
        if energy_only_offer_mw3_to is not None:
            
            _query_params.append(('energyOnlyOfferMW3To', energy_only_offer_mw3_to))
            
        if energy_only_offer_price3_from is not None:
            
            _query_params.append(('energyOnlyOfferPrice3From', energy_only_offer_price3_from))
            
        if energy_only_offer_price3_to is not None:
            
            _query_params.append(('energyOnlyOfferPrice3To', energy_only_offer_price3_to))
            
        if energy_only_offer_mw4_from is not None:
            
            _query_params.append(('energyOnlyOfferMW4From', energy_only_offer_mw4_from))
            
        if energy_only_offer_mw4_to is not None:
            
            _query_params.append(('energyOnlyOfferMW4To', energy_only_offer_mw4_to))
            
        if energy_only_offer_price4_from is not None:
            
            _query_params.append(('energyOnlyOfferPrice4From', energy_only_offer_price4_from))
            
        if energy_only_offer_price4_to is not None:
            
            _query_params.append(('energyOnlyOfferPrice4To', energy_only_offer_price4_to))
            
        if energy_only_offer_mw5_from is not None:
            
            _query_params.append(('energyOnlyOfferMW5From', energy_only_offer_mw5_from))
            
        if energy_only_offer_mw5_to is not None:
            
            _query_params.append(('energyOnlyOfferMW5To', energy_only_offer_mw5_to))
            
        if energy_only_offer_price5_from is not None:
            
            _query_params.append(('energyOnlyOfferPrice5From', energy_only_offer_price5_from))
            
        if energy_only_offer_price5_to is not None:
            
            _query_params.append(('energyOnlyOfferPrice5To', energy_only_offer_price5_to))
            
        if energy_only_offer_mw6_from is not None:
            
            _query_params.append(('energyOnlyOfferMW6From', energy_only_offer_mw6_from))
            
        if energy_only_offer_mw6_to is not None:
            
            _query_params.append(('energyOnlyOfferMW6To', energy_only_offer_mw6_to))
            
        if energy_only_offer_price6_from is not None:
            
            _query_params.append(('energyOnlyOfferPrice6From', energy_only_offer_price6_from))
            
        if energy_only_offer_price6_to is not None:
            
            _query_params.append(('energyOnlyOfferPrice6To', energy_only_offer_price6_to))
            
        if energy_only_offer_mw7_from is not None:
            
            _query_params.append(('energyOnlyOfferMW7From', energy_only_offer_mw7_from))
            
        if energy_only_offer_mw7_to is not None:
            
            _query_params.append(('energyOnlyOfferMW7To', energy_only_offer_mw7_to))
            
        if energy_only_offer_price7_from is not None:
            
            _query_params.append(('energyOnlyOfferPrice7From', energy_only_offer_price7_from))
            
        if energy_only_offer_price7_to is not None:
            
            _query_params.append(('energyOnlyOfferPrice7To', energy_only_offer_price7_to))
            
        if energy_only_offer_mw8_from is not None:
            
            _query_params.append(('energyOnlyOfferMW8From', energy_only_offer_mw8_from))
            
        if energy_only_offer_mw8_to is not None:
            
            _query_params.append(('energyOnlyOfferMW8To', energy_only_offer_mw8_to))
            
        if energy_only_offer_price8_from is not None:
            
            _query_params.append(('energyOnlyOfferPrice8From', energy_only_offer_price8_from))
            
        if energy_only_offer_price8_to is not None:
            
            _query_params.append(('energyOnlyOfferPrice8To', energy_only_offer_price8_to))
            
        if energy_only_offer_mw9_from is not None:
            
            _query_params.append(('energyOnlyOfferMW9From', energy_only_offer_mw9_from))
            
        if energy_only_offer_mw9_to is not None:
            
            _query_params.append(('energyOnlyOfferMW9To', energy_only_offer_mw9_to))
            
        if energy_only_offer_price9_from is not None:
            
            _query_params.append(('energyOnlyOfferPrice9From', energy_only_offer_price9_from))
            
        if energy_only_offer_price9_to is not None:
            
            _query_params.append(('energyOnlyOfferPrice9To', energy_only_offer_price9_to))
            
        if energy_only_offer_mw10_from is not None:
            
            _query_params.append(('energyOnlyOfferMW10From', energy_only_offer_mw10_from))
            
        if energy_only_offer_mw10_to is not None:
            
            _query_params.append(('energyOnlyOfferMW10To', energy_only_offer_mw10_to))
            
        if energy_only_offer_price10_from is not None:
            
            _query_params.append(('energyOnlyOfferPrice10From', energy_only_offer_price10_from))
            
        if energy_only_offer_price10_to is not None:
            
            _query_params.append(('energyOnlyOfferPrice10To', energy_only_offer_price10_to))
            
        if offer_id_from is not None:
            
            _query_params.append(('offerIdFrom', offer_id_from))
            
        if offer_id_to is not None:
            
            _query_params.append(('offerIdTo', offer_id_to))
            
        if multi_hour_block is not None:
            
            _query_params.append(('multiHourBlock', multi_hour_block))
            
        if block_curve is not None:
            
            _query_params.append(('blockCurve', block_curve))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if dir is not None:
            
            _query_params.append(('dir', dir))
            
        # process the header parameters
        if ocp_apim_subscription_key is not None:
            _header_params['Ocp-Apim-Subscription-Key'] = ocp_apim_subscription_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/np3-966-er/60_dam_energy_only_offers',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_data48(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        settlement_point_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        energy_only_offer_award_in_mw_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_award_in_mwto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        settlement_point_price_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        settlement_point_price_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        offer_id: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Report:
        """60 Day DAM Energy Offer Only Awards

        60 Day DAM Energy Offer Only Awards

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param settlement_point_name: Format - abc123.
        :type settlement_point_name: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param energy_only_offer_award_in_mw_from: Format - ####.###.
        :type energy_only_offer_award_in_mw_from: float
        :param energy_only_offer_award_in_mwto: Format - ####.###.
        :type energy_only_offer_award_in_mwto: float
        :param settlement_point_price_from: Format - ####.###.
        :type settlement_point_price_from: float
        :param settlement_point_price_to: Format - ####.###.
        :type settlement_point_price_to: float
        :param offer_id: Format - abc123.
        :type offer_id: str
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data48_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            settlement_point_name=settlement_point_name,
            qse_name=qse_name,
            energy_only_offer_award_in_mw_from=energy_only_offer_award_in_mw_from,
            energy_only_offer_award_in_mwto=energy_only_offer_award_in_mwto,
            settlement_point_price_from=settlement_point_price_from,
            settlement_point_price_to=settlement_point_price_to,
            offer_id=offer_id,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_data48_with_http_info(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        settlement_point_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        energy_only_offer_award_in_mw_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_award_in_mwto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        settlement_point_price_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        settlement_point_price_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        offer_id: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Report]:
        """60 Day DAM Energy Offer Only Awards

        60 Day DAM Energy Offer Only Awards

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param settlement_point_name: Format - abc123.
        :type settlement_point_name: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param energy_only_offer_award_in_mw_from: Format - ####.###.
        :type energy_only_offer_award_in_mw_from: float
        :param energy_only_offer_award_in_mwto: Format - ####.###.
        :type energy_only_offer_award_in_mwto: float
        :param settlement_point_price_from: Format - ####.###.
        :type settlement_point_price_from: float
        :param settlement_point_price_to: Format - ####.###.
        :type settlement_point_price_to: float
        :param offer_id: Format - abc123.
        :type offer_id: str
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data48_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            settlement_point_name=settlement_point_name,
            qse_name=qse_name,
            energy_only_offer_award_in_mw_from=energy_only_offer_award_in_mw_from,
            energy_only_offer_award_in_mwto=energy_only_offer_award_in_mwto,
            settlement_point_price_from=settlement_point_price_from,
            settlement_point_price_to=settlement_point_price_to,
            offer_id=offer_id,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_data48_without_preload_content(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        settlement_point_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        energy_only_offer_award_in_mw_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_offer_award_in_mwto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        settlement_point_price_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        settlement_point_price_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        offer_id: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """60 Day DAM Energy Offer Only Awards

        60 Day DAM Energy Offer Only Awards

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param settlement_point_name: Format - abc123.
        :type settlement_point_name: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param energy_only_offer_award_in_mw_from: Format - ####.###.
        :type energy_only_offer_award_in_mw_from: float
        :param energy_only_offer_award_in_mwto: Format - ####.###.
        :type energy_only_offer_award_in_mwto: float
        :param settlement_point_price_from: Format - ####.###.
        :type settlement_point_price_from: float
        :param settlement_point_price_to: Format - ####.###.
        :type settlement_point_price_to: float
        :param offer_id: Format - abc123.
        :type offer_id: str
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data48_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            settlement_point_name=settlement_point_name,
            qse_name=qse_name,
            energy_only_offer_award_in_mw_from=energy_only_offer_award_in_mw_from,
            energy_only_offer_award_in_mwto=energy_only_offer_award_in_mwto,
            settlement_point_price_from=settlement_point_price_from,
            settlement_point_price_to=settlement_point_price_to,
            offer_id=offer_id,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_data48_serialize(
        self,
        ocp_apim_subscription_key,
        delivery_date_from,
        delivery_date_to,
        hour_ending_from,
        hour_ending_to,
        settlement_point_name,
        qse_name,
        energy_only_offer_award_in_mw_from,
        energy_only_offer_award_in_mwto,
        settlement_point_price_from,
        settlement_point_price_to,
        offer_id,
        page,
        size,
        sort,
        dir,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if delivery_date_from is not None:
            
            _query_params.append(('deliveryDateFrom', delivery_date_from))
            
        if delivery_date_to is not None:
            
            _query_params.append(('deliveryDateTo', delivery_date_to))
            
        if hour_ending_from is not None:
            
            _query_params.append(('hourEndingFrom', hour_ending_from))
            
        if hour_ending_to is not None:
            
            _query_params.append(('hourEndingTo', hour_ending_to))
            
        if settlement_point_name is not None:
            
            _query_params.append(('settlementPointName', settlement_point_name))
            
        if qse_name is not None:
            
            _query_params.append(('qseName', qse_name))
            
        if energy_only_offer_award_in_mw_from is not None:
            
            _query_params.append(('energyOnlyOfferAwardInMWFrom', energy_only_offer_award_in_mw_from))
            
        if energy_only_offer_award_in_mwto is not None:
            
            _query_params.append(('energyOnlyOfferAwardInMWTo', energy_only_offer_award_in_mwto))
            
        if settlement_point_price_from is not None:
            
            _query_params.append(('settlementPointPriceFrom', settlement_point_price_from))
            
        if settlement_point_price_to is not None:
            
            _query_params.append(('settlementPointPriceTo', settlement_point_price_to))
            
        if offer_id is not None:
            
            _query_params.append(('offerId', offer_id))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if dir is not None:
            
            _query_params.append(('dir', dir))
            
        # process the header parameters
        if ocp_apim_subscription_key is not None:
            _header_params['Ocp-Apim-Subscription-Key'] = ocp_apim_subscription_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/np3-966-er/60_dam_energy_only_offer_awards',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_data49(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        energy_only_bid_mw1_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw1_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price1_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price1_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw2_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw2_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price2_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price2_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw3_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw3_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price3_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price3_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw4_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw4_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price4_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price4_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw5_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw5_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price5_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price5_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw6_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw6_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price6_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price6_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw7_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw7_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price7_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price7_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw8_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw8_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price8_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price8_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw9_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw9_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price9_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price9_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw10_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw10_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price10_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price10_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        bid_id_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        bid_id_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        multi_hour_block: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        block_curve: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        settlement_point_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Report:
        """60 Day DAM Energy Bids

        60 Day DAM Energy Bids

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param energy_only_bid_mw1_from: Format - ####.###.
        :type energy_only_bid_mw1_from: float
        :param energy_only_bid_mw1_to: Format - ####.###.
        :type energy_only_bid_mw1_to: float
        :param energy_only_bid_price1_from: Format - ####.###.
        :type energy_only_bid_price1_from: float
        :param energy_only_bid_price1_to: Format - ####.###.
        :type energy_only_bid_price1_to: float
        :param energy_only_bid_mw2_from: Format - ####.###.
        :type energy_only_bid_mw2_from: float
        :param energy_only_bid_mw2_to: Format - ####.###.
        :type energy_only_bid_mw2_to: float
        :param energy_only_bid_price2_from: Format - ####.###.
        :type energy_only_bid_price2_from: float
        :param energy_only_bid_price2_to: Format - ####.###.
        :type energy_only_bid_price2_to: float
        :param energy_only_bid_mw3_from: Format - ####.###.
        :type energy_only_bid_mw3_from: float
        :param energy_only_bid_mw3_to: Format - ####.###.
        :type energy_only_bid_mw3_to: float
        :param energy_only_bid_price3_from: Format - ####.###.
        :type energy_only_bid_price3_from: float
        :param energy_only_bid_price3_to: Format - ####.###.
        :type energy_only_bid_price3_to: float
        :param energy_only_bid_mw4_from: Format - ####.###.
        :type energy_only_bid_mw4_from: float
        :param energy_only_bid_mw4_to: Format - ####.###.
        :type energy_only_bid_mw4_to: float
        :param energy_only_bid_price4_from: Format - ####.###.
        :type energy_only_bid_price4_from: float
        :param energy_only_bid_price4_to: Format - ####.###.
        :type energy_only_bid_price4_to: float
        :param energy_only_bid_mw5_from: Format - ####.###.
        :type energy_only_bid_mw5_from: float
        :param energy_only_bid_mw5_to: Format - ####.###.
        :type energy_only_bid_mw5_to: float
        :param energy_only_bid_price5_from: Format - ####.###.
        :type energy_only_bid_price5_from: float
        :param energy_only_bid_price5_to: Format - ####.###.
        :type energy_only_bid_price5_to: float
        :param energy_only_bid_mw6_from: Format - ####.###.
        :type energy_only_bid_mw6_from: float
        :param energy_only_bid_mw6_to: Format - ####.###.
        :type energy_only_bid_mw6_to: float
        :param energy_only_bid_price6_from: Format - ####.###.
        :type energy_only_bid_price6_from: float
        :param energy_only_bid_price6_to: Format - ####.###.
        :type energy_only_bid_price6_to: float
        :param energy_only_bid_mw7_from: Format - ####.###.
        :type energy_only_bid_mw7_from: float
        :param energy_only_bid_mw7_to: Format - ####.###.
        :type energy_only_bid_mw7_to: float
        :param energy_only_bid_price7_from: Format - ####.###.
        :type energy_only_bid_price7_from: float
        :param energy_only_bid_price7_to: Format - ####.###.
        :type energy_only_bid_price7_to: float
        :param energy_only_bid_mw8_from: Format - ####.###.
        :type energy_only_bid_mw8_from: float
        :param energy_only_bid_mw8_to: Format - ####.###.
        :type energy_only_bid_mw8_to: float
        :param energy_only_bid_price8_from: Format - ####.###.
        :type energy_only_bid_price8_from: float
        :param energy_only_bid_price8_to: Format - ####.###.
        :type energy_only_bid_price8_to: float
        :param energy_only_bid_mw9_from: Format - ####.###.
        :type energy_only_bid_mw9_from: float
        :param energy_only_bid_mw9_to: Format - ####.###.
        :type energy_only_bid_mw9_to: float
        :param energy_only_bid_price9_from: Format - ####.###.
        :type energy_only_bid_price9_from: float
        :param energy_only_bid_price9_to: Format - ####.###.
        :type energy_only_bid_price9_to: float
        :param energy_only_bid_mw10_from: Format - ####.###.
        :type energy_only_bid_mw10_from: float
        :param energy_only_bid_mw10_to: Format - ####.###.
        :type energy_only_bid_mw10_to: float
        :param energy_only_bid_price10_from: Format - ####.###.
        :type energy_only_bid_price10_from: float
        :param energy_only_bid_price10_to: Format - ####.###.
        :type energy_only_bid_price10_to: float
        :param bid_id_from: Format - ####.###.
        :type bid_id_from: float
        :param bid_id_to: Format - ####.###.
        :type bid_id_to: float
        :param multi_hour_block: Format - true | false.
        :type multi_hour_block: bool
        :param block_curve: Format - true | false.
        :type block_curve: bool
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param settlement_point_name: Format - abc123.
        :type settlement_point_name: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data49_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            energy_only_bid_mw1_from=energy_only_bid_mw1_from,
            energy_only_bid_mw1_to=energy_only_bid_mw1_to,
            energy_only_bid_price1_from=energy_only_bid_price1_from,
            energy_only_bid_price1_to=energy_only_bid_price1_to,
            energy_only_bid_mw2_from=energy_only_bid_mw2_from,
            energy_only_bid_mw2_to=energy_only_bid_mw2_to,
            energy_only_bid_price2_from=energy_only_bid_price2_from,
            energy_only_bid_price2_to=energy_only_bid_price2_to,
            energy_only_bid_mw3_from=energy_only_bid_mw3_from,
            energy_only_bid_mw3_to=energy_only_bid_mw3_to,
            energy_only_bid_price3_from=energy_only_bid_price3_from,
            energy_only_bid_price3_to=energy_only_bid_price3_to,
            energy_only_bid_mw4_from=energy_only_bid_mw4_from,
            energy_only_bid_mw4_to=energy_only_bid_mw4_to,
            energy_only_bid_price4_from=energy_only_bid_price4_from,
            energy_only_bid_price4_to=energy_only_bid_price4_to,
            energy_only_bid_mw5_from=energy_only_bid_mw5_from,
            energy_only_bid_mw5_to=energy_only_bid_mw5_to,
            energy_only_bid_price5_from=energy_only_bid_price5_from,
            energy_only_bid_price5_to=energy_only_bid_price5_to,
            energy_only_bid_mw6_from=energy_only_bid_mw6_from,
            energy_only_bid_mw6_to=energy_only_bid_mw6_to,
            energy_only_bid_price6_from=energy_only_bid_price6_from,
            energy_only_bid_price6_to=energy_only_bid_price6_to,
            energy_only_bid_mw7_from=energy_only_bid_mw7_from,
            energy_only_bid_mw7_to=energy_only_bid_mw7_to,
            energy_only_bid_price7_from=energy_only_bid_price7_from,
            energy_only_bid_price7_to=energy_only_bid_price7_to,
            energy_only_bid_mw8_from=energy_only_bid_mw8_from,
            energy_only_bid_mw8_to=energy_only_bid_mw8_to,
            energy_only_bid_price8_from=energy_only_bid_price8_from,
            energy_only_bid_price8_to=energy_only_bid_price8_to,
            energy_only_bid_mw9_from=energy_only_bid_mw9_from,
            energy_only_bid_mw9_to=energy_only_bid_mw9_to,
            energy_only_bid_price9_from=energy_only_bid_price9_from,
            energy_only_bid_price9_to=energy_only_bid_price9_to,
            energy_only_bid_mw10_from=energy_only_bid_mw10_from,
            energy_only_bid_mw10_to=energy_only_bid_mw10_to,
            energy_only_bid_price10_from=energy_only_bid_price10_from,
            energy_only_bid_price10_to=energy_only_bid_price10_to,
            bid_id_from=bid_id_from,
            bid_id_to=bid_id_to,
            multi_hour_block=multi_hour_block,
            block_curve=block_curve,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            settlement_point_name=settlement_point_name,
            qse_name=qse_name,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_data49_with_http_info(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        energy_only_bid_mw1_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw1_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price1_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price1_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw2_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw2_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price2_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price2_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw3_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw3_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price3_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price3_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw4_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw4_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price4_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price4_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw5_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw5_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price5_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price5_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw6_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw6_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price6_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price6_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw7_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw7_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price7_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price7_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw8_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw8_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price8_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price8_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw9_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw9_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price9_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price9_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw10_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw10_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price10_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price10_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        bid_id_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        bid_id_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        multi_hour_block: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        block_curve: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        settlement_point_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Report]:
        """60 Day DAM Energy Bids

        60 Day DAM Energy Bids

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param energy_only_bid_mw1_from: Format - ####.###.
        :type energy_only_bid_mw1_from: float
        :param energy_only_bid_mw1_to: Format - ####.###.
        :type energy_only_bid_mw1_to: float
        :param energy_only_bid_price1_from: Format - ####.###.
        :type energy_only_bid_price1_from: float
        :param energy_only_bid_price1_to: Format - ####.###.
        :type energy_only_bid_price1_to: float
        :param energy_only_bid_mw2_from: Format - ####.###.
        :type energy_only_bid_mw2_from: float
        :param energy_only_bid_mw2_to: Format - ####.###.
        :type energy_only_bid_mw2_to: float
        :param energy_only_bid_price2_from: Format - ####.###.
        :type energy_only_bid_price2_from: float
        :param energy_only_bid_price2_to: Format - ####.###.
        :type energy_only_bid_price2_to: float
        :param energy_only_bid_mw3_from: Format - ####.###.
        :type energy_only_bid_mw3_from: float
        :param energy_only_bid_mw3_to: Format - ####.###.
        :type energy_only_bid_mw3_to: float
        :param energy_only_bid_price3_from: Format - ####.###.
        :type energy_only_bid_price3_from: float
        :param energy_only_bid_price3_to: Format - ####.###.
        :type energy_only_bid_price3_to: float
        :param energy_only_bid_mw4_from: Format - ####.###.
        :type energy_only_bid_mw4_from: float
        :param energy_only_bid_mw4_to: Format - ####.###.
        :type energy_only_bid_mw4_to: float
        :param energy_only_bid_price4_from: Format - ####.###.
        :type energy_only_bid_price4_from: float
        :param energy_only_bid_price4_to: Format - ####.###.
        :type energy_only_bid_price4_to: float
        :param energy_only_bid_mw5_from: Format - ####.###.
        :type energy_only_bid_mw5_from: float
        :param energy_only_bid_mw5_to: Format - ####.###.
        :type energy_only_bid_mw5_to: float
        :param energy_only_bid_price5_from: Format - ####.###.
        :type energy_only_bid_price5_from: float
        :param energy_only_bid_price5_to: Format - ####.###.
        :type energy_only_bid_price5_to: float
        :param energy_only_bid_mw6_from: Format - ####.###.
        :type energy_only_bid_mw6_from: float
        :param energy_only_bid_mw6_to: Format - ####.###.
        :type energy_only_bid_mw6_to: float
        :param energy_only_bid_price6_from: Format - ####.###.
        :type energy_only_bid_price6_from: float
        :param energy_only_bid_price6_to: Format - ####.###.
        :type energy_only_bid_price6_to: float
        :param energy_only_bid_mw7_from: Format - ####.###.
        :type energy_only_bid_mw7_from: float
        :param energy_only_bid_mw7_to: Format - ####.###.
        :type energy_only_bid_mw7_to: float
        :param energy_only_bid_price7_from: Format - ####.###.
        :type energy_only_bid_price7_from: float
        :param energy_only_bid_price7_to: Format - ####.###.
        :type energy_only_bid_price7_to: float
        :param energy_only_bid_mw8_from: Format - ####.###.
        :type energy_only_bid_mw8_from: float
        :param energy_only_bid_mw8_to: Format - ####.###.
        :type energy_only_bid_mw8_to: float
        :param energy_only_bid_price8_from: Format - ####.###.
        :type energy_only_bid_price8_from: float
        :param energy_only_bid_price8_to: Format - ####.###.
        :type energy_only_bid_price8_to: float
        :param energy_only_bid_mw9_from: Format - ####.###.
        :type energy_only_bid_mw9_from: float
        :param energy_only_bid_mw9_to: Format - ####.###.
        :type energy_only_bid_mw9_to: float
        :param energy_only_bid_price9_from: Format - ####.###.
        :type energy_only_bid_price9_from: float
        :param energy_only_bid_price9_to: Format - ####.###.
        :type energy_only_bid_price9_to: float
        :param energy_only_bid_mw10_from: Format - ####.###.
        :type energy_only_bid_mw10_from: float
        :param energy_only_bid_mw10_to: Format - ####.###.
        :type energy_only_bid_mw10_to: float
        :param energy_only_bid_price10_from: Format - ####.###.
        :type energy_only_bid_price10_from: float
        :param energy_only_bid_price10_to: Format - ####.###.
        :type energy_only_bid_price10_to: float
        :param bid_id_from: Format - ####.###.
        :type bid_id_from: float
        :param bid_id_to: Format - ####.###.
        :type bid_id_to: float
        :param multi_hour_block: Format - true | false.
        :type multi_hour_block: bool
        :param block_curve: Format - true | false.
        :type block_curve: bool
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param settlement_point_name: Format - abc123.
        :type settlement_point_name: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data49_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            energy_only_bid_mw1_from=energy_only_bid_mw1_from,
            energy_only_bid_mw1_to=energy_only_bid_mw1_to,
            energy_only_bid_price1_from=energy_only_bid_price1_from,
            energy_only_bid_price1_to=energy_only_bid_price1_to,
            energy_only_bid_mw2_from=energy_only_bid_mw2_from,
            energy_only_bid_mw2_to=energy_only_bid_mw2_to,
            energy_only_bid_price2_from=energy_only_bid_price2_from,
            energy_only_bid_price2_to=energy_only_bid_price2_to,
            energy_only_bid_mw3_from=energy_only_bid_mw3_from,
            energy_only_bid_mw3_to=energy_only_bid_mw3_to,
            energy_only_bid_price3_from=energy_only_bid_price3_from,
            energy_only_bid_price3_to=energy_only_bid_price3_to,
            energy_only_bid_mw4_from=energy_only_bid_mw4_from,
            energy_only_bid_mw4_to=energy_only_bid_mw4_to,
            energy_only_bid_price4_from=energy_only_bid_price4_from,
            energy_only_bid_price4_to=energy_only_bid_price4_to,
            energy_only_bid_mw5_from=energy_only_bid_mw5_from,
            energy_only_bid_mw5_to=energy_only_bid_mw5_to,
            energy_only_bid_price5_from=energy_only_bid_price5_from,
            energy_only_bid_price5_to=energy_only_bid_price5_to,
            energy_only_bid_mw6_from=energy_only_bid_mw6_from,
            energy_only_bid_mw6_to=energy_only_bid_mw6_to,
            energy_only_bid_price6_from=energy_only_bid_price6_from,
            energy_only_bid_price6_to=energy_only_bid_price6_to,
            energy_only_bid_mw7_from=energy_only_bid_mw7_from,
            energy_only_bid_mw7_to=energy_only_bid_mw7_to,
            energy_only_bid_price7_from=energy_only_bid_price7_from,
            energy_only_bid_price7_to=energy_only_bid_price7_to,
            energy_only_bid_mw8_from=energy_only_bid_mw8_from,
            energy_only_bid_mw8_to=energy_only_bid_mw8_to,
            energy_only_bid_price8_from=energy_only_bid_price8_from,
            energy_only_bid_price8_to=energy_only_bid_price8_to,
            energy_only_bid_mw9_from=energy_only_bid_mw9_from,
            energy_only_bid_mw9_to=energy_only_bid_mw9_to,
            energy_only_bid_price9_from=energy_only_bid_price9_from,
            energy_only_bid_price9_to=energy_only_bid_price9_to,
            energy_only_bid_mw10_from=energy_only_bid_mw10_from,
            energy_only_bid_mw10_to=energy_only_bid_mw10_to,
            energy_only_bid_price10_from=energy_only_bid_price10_from,
            energy_only_bid_price10_to=energy_only_bid_price10_to,
            bid_id_from=bid_id_from,
            bid_id_to=bid_id_to,
            multi_hour_block=multi_hour_block,
            block_curve=block_curve,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            settlement_point_name=settlement_point_name,
            qse_name=qse_name,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_data49_without_preload_content(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        energy_only_bid_mw1_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw1_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price1_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price1_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw2_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw2_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price2_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price2_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw3_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw3_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price3_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price3_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw4_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw4_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price4_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price4_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw5_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw5_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price5_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price5_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw6_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw6_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price6_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price6_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw7_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw7_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price7_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price7_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw8_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw8_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price8_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price8_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw9_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw9_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price9_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price9_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw10_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_mw10_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price10_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_price10_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        bid_id_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        bid_id_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        multi_hour_block: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        block_curve: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        settlement_point_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """60 Day DAM Energy Bids

        60 Day DAM Energy Bids

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param energy_only_bid_mw1_from: Format - ####.###.
        :type energy_only_bid_mw1_from: float
        :param energy_only_bid_mw1_to: Format - ####.###.
        :type energy_only_bid_mw1_to: float
        :param energy_only_bid_price1_from: Format - ####.###.
        :type energy_only_bid_price1_from: float
        :param energy_only_bid_price1_to: Format - ####.###.
        :type energy_only_bid_price1_to: float
        :param energy_only_bid_mw2_from: Format - ####.###.
        :type energy_only_bid_mw2_from: float
        :param energy_only_bid_mw2_to: Format - ####.###.
        :type energy_only_bid_mw2_to: float
        :param energy_only_bid_price2_from: Format - ####.###.
        :type energy_only_bid_price2_from: float
        :param energy_only_bid_price2_to: Format - ####.###.
        :type energy_only_bid_price2_to: float
        :param energy_only_bid_mw3_from: Format - ####.###.
        :type energy_only_bid_mw3_from: float
        :param energy_only_bid_mw3_to: Format - ####.###.
        :type energy_only_bid_mw3_to: float
        :param energy_only_bid_price3_from: Format - ####.###.
        :type energy_only_bid_price3_from: float
        :param energy_only_bid_price3_to: Format - ####.###.
        :type energy_only_bid_price3_to: float
        :param energy_only_bid_mw4_from: Format - ####.###.
        :type energy_only_bid_mw4_from: float
        :param energy_only_bid_mw4_to: Format - ####.###.
        :type energy_only_bid_mw4_to: float
        :param energy_only_bid_price4_from: Format - ####.###.
        :type energy_only_bid_price4_from: float
        :param energy_only_bid_price4_to: Format - ####.###.
        :type energy_only_bid_price4_to: float
        :param energy_only_bid_mw5_from: Format - ####.###.
        :type energy_only_bid_mw5_from: float
        :param energy_only_bid_mw5_to: Format - ####.###.
        :type energy_only_bid_mw5_to: float
        :param energy_only_bid_price5_from: Format - ####.###.
        :type energy_only_bid_price5_from: float
        :param energy_only_bid_price5_to: Format - ####.###.
        :type energy_only_bid_price5_to: float
        :param energy_only_bid_mw6_from: Format - ####.###.
        :type energy_only_bid_mw6_from: float
        :param energy_only_bid_mw6_to: Format - ####.###.
        :type energy_only_bid_mw6_to: float
        :param energy_only_bid_price6_from: Format - ####.###.
        :type energy_only_bid_price6_from: float
        :param energy_only_bid_price6_to: Format - ####.###.
        :type energy_only_bid_price6_to: float
        :param energy_only_bid_mw7_from: Format - ####.###.
        :type energy_only_bid_mw7_from: float
        :param energy_only_bid_mw7_to: Format - ####.###.
        :type energy_only_bid_mw7_to: float
        :param energy_only_bid_price7_from: Format - ####.###.
        :type energy_only_bid_price7_from: float
        :param energy_only_bid_price7_to: Format - ####.###.
        :type energy_only_bid_price7_to: float
        :param energy_only_bid_mw8_from: Format - ####.###.
        :type energy_only_bid_mw8_from: float
        :param energy_only_bid_mw8_to: Format - ####.###.
        :type energy_only_bid_mw8_to: float
        :param energy_only_bid_price8_from: Format - ####.###.
        :type energy_only_bid_price8_from: float
        :param energy_only_bid_price8_to: Format - ####.###.
        :type energy_only_bid_price8_to: float
        :param energy_only_bid_mw9_from: Format - ####.###.
        :type energy_only_bid_mw9_from: float
        :param energy_only_bid_mw9_to: Format - ####.###.
        :type energy_only_bid_mw9_to: float
        :param energy_only_bid_price9_from: Format - ####.###.
        :type energy_only_bid_price9_from: float
        :param energy_only_bid_price9_to: Format - ####.###.
        :type energy_only_bid_price9_to: float
        :param energy_only_bid_mw10_from: Format - ####.###.
        :type energy_only_bid_mw10_from: float
        :param energy_only_bid_mw10_to: Format - ####.###.
        :type energy_only_bid_mw10_to: float
        :param energy_only_bid_price10_from: Format - ####.###.
        :type energy_only_bid_price10_from: float
        :param energy_only_bid_price10_to: Format - ####.###.
        :type energy_only_bid_price10_to: float
        :param bid_id_from: Format - ####.###.
        :type bid_id_from: float
        :param bid_id_to: Format - ####.###.
        :type bid_id_to: float
        :param multi_hour_block: Format - true | false.
        :type multi_hour_block: bool
        :param block_curve: Format - true | false.
        :type block_curve: bool
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param settlement_point_name: Format - abc123.
        :type settlement_point_name: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data49_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            energy_only_bid_mw1_from=energy_only_bid_mw1_from,
            energy_only_bid_mw1_to=energy_only_bid_mw1_to,
            energy_only_bid_price1_from=energy_only_bid_price1_from,
            energy_only_bid_price1_to=energy_only_bid_price1_to,
            energy_only_bid_mw2_from=energy_only_bid_mw2_from,
            energy_only_bid_mw2_to=energy_only_bid_mw2_to,
            energy_only_bid_price2_from=energy_only_bid_price2_from,
            energy_only_bid_price2_to=energy_only_bid_price2_to,
            energy_only_bid_mw3_from=energy_only_bid_mw3_from,
            energy_only_bid_mw3_to=energy_only_bid_mw3_to,
            energy_only_bid_price3_from=energy_only_bid_price3_from,
            energy_only_bid_price3_to=energy_only_bid_price3_to,
            energy_only_bid_mw4_from=energy_only_bid_mw4_from,
            energy_only_bid_mw4_to=energy_only_bid_mw4_to,
            energy_only_bid_price4_from=energy_only_bid_price4_from,
            energy_only_bid_price4_to=energy_only_bid_price4_to,
            energy_only_bid_mw5_from=energy_only_bid_mw5_from,
            energy_only_bid_mw5_to=energy_only_bid_mw5_to,
            energy_only_bid_price5_from=energy_only_bid_price5_from,
            energy_only_bid_price5_to=energy_only_bid_price5_to,
            energy_only_bid_mw6_from=energy_only_bid_mw6_from,
            energy_only_bid_mw6_to=energy_only_bid_mw6_to,
            energy_only_bid_price6_from=energy_only_bid_price6_from,
            energy_only_bid_price6_to=energy_only_bid_price6_to,
            energy_only_bid_mw7_from=energy_only_bid_mw7_from,
            energy_only_bid_mw7_to=energy_only_bid_mw7_to,
            energy_only_bid_price7_from=energy_only_bid_price7_from,
            energy_only_bid_price7_to=energy_only_bid_price7_to,
            energy_only_bid_mw8_from=energy_only_bid_mw8_from,
            energy_only_bid_mw8_to=energy_only_bid_mw8_to,
            energy_only_bid_price8_from=energy_only_bid_price8_from,
            energy_only_bid_price8_to=energy_only_bid_price8_to,
            energy_only_bid_mw9_from=energy_only_bid_mw9_from,
            energy_only_bid_mw9_to=energy_only_bid_mw9_to,
            energy_only_bid_price9_from=energy_only_bid_price9_from,
            energy_only_bid_price9_to=energy_only_bid_price9_to,
            energy_only_bid_mw10_from=energy_only_bid_mw10_from,
            energy_only_bid_mw10_to=energy_only_bid_mw10_to,
            energy_only_bid_price10_from=energy_only_bid_price10_from,
            energy_only_bid_price10_to=energy_only_bid_price10_to,
            bid_id_from=bid_id_from,
            bid_id_to=bid_id_to,
            multi_hour_block=multi_hour_block,
            block_curve=block_curve,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            settlement_point_name=settlement_point_name,
            qse_name=qse_name,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_data49_serialize(
        self,
        ocp_apim_subscription_key,
        energy_only_bid_mw1_from,
        energy_only_bid_mw1_to,
        energy_only_bid_price1_from,
        energy_only_bid_price1_to,
        energy_only_bid_mw2_from,
        energy_only_bid_mw2_to,
        energy_only_bid_price2_from,
        energy_only_bid_price2_to,
        energy_only_bid_mw3_from,
        energy_only_bid_mw3_to,
        energy_only_bid_price3_from,
        energy_only_bid_price3_to,
        energy_only_bid_mw4_from,
        energy_only_bid_mw4_to,
        energy_only_bid_price4_from,
        energy_only_bid_price4_to,
        energy_only_bid_mw5_from,
        energy_only_bid_mw5_to,
        energy_only_bid_price5_from,
        energy_only_bid_price5_to,
        energy_only_bid_mw6_from,
        energy_only_bid_mw6_to,
        energy_only_bid_price6_from,
        energy_only_bid_price6_to,
        energy_only_bid_mw7_from,
        energy_only_bid_mw7_to,
        energy_only_bid_price7_from,
        energy_only_bid_price7_to,
        energy_only_bid_mw8_from,
        energy_only_bid_mw8_to,
        energy_only_bid_price8_from,
        energy_only_bid_price8_to,
        energy_only_bid_mw9_from,
        energy_only_bid_mw9_to,
        energy_only_bid_price9_from,
        energy_only_bid_price9_to,
        energy_only_bid_mw10_from,
        energy_only_bid_mw10_to,
        energy_only_bid_price10_from,
        energy_only_bid_price10_to,
        bid_id_from,
        bid_id_to,
        multi_hour_block,
        block_curve,
        delivery_date_from,
        delivery_date_to,
        hour_ending_from,
        hour_ending_to,
        settlement_point_name,
        qse_name,
        page,
        size,
        sort,
        dir,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if energy_only_bid_mw1_from is not None:
            
            _query_params.append(('energyOnlyBidMw1From', energy_only_bid_mw1_from))
            
        if energy_only_bid_mw1_to is not None:
            
            _query_params.append(('energyOnlyBidMw1To', energy_only_bid_mw1_to))
            
        if energy_only_bid_price1_from is not None:
            
            _query_params.append(('energyOnlyBidPrice1From', energy_only_bid_price1_from))
            
        if energy_only_bid_price1_to is not None:
            
            _query_params.append(('energyOnlyBidPrice1To', energy_only_bid_price1_to))
            
        if energy_only_bid_mw2_from is not None:
            
            _query_params.append(('energyOnlyBidMw2From', energy_only_bid_mw2_from))
            
        if energy_only_bid_mw2_to is not None:
            
            _query_params.append(('energyOnlyBidMw2To', energy_only_bid_mw2_to))
            
        if energy_only_bid_price2_from is not None:
            
            _query_params.append(('energyOnlyBidPrice2From', energy_only_bid_price2_from))
            
        if energy_only_bid_price2_to is not None:
            
            _query_params.append(('energyOnlyBidPrice2To', energy_only_bid_price2_to))
            
        if energy_only_bid_mw3_from is not None:
            
            _query_params.append(('energyOnlyBidMw3From', energy_only_bid_mw3_from))
            
        if energy_only_bid_mw3_to is not None:
            
            _query_params.append(('energyOnlyBidMw3To', energy_only_bid_mw3_to))
            
        if energy_only_bid_price3_from is not None:
            
            _query_params.append(('energyOnlyBidPrice3From', energy_only_bid_price3_from))
            
        if energy_only_bid_price3_to is not None:
            
            _query_params.append(('energyOnlyBidPrice3To', energy_only_bid_price3_to))
            
        if energy_only_bid_mw4_from is not None:
            
            _query_params.append(('energyOnlyBidMw4From', energy_only_bid_mw4_from))
            
        if energy_only_bid_mw4_to is not None:
            
            _query_params.append(('energyOnlyBidMw4To', energy_only_bid_mw4_to))
            
        if energy_only_bid_price4_from is not None:
            
            _query_params.append(('energyOnlyBidPrice4From', energy_only_bid_price4_from))
            
        if energy_only_bid_price4_to is not None:
            
            _query_params.append(('energyOnlyBidPrice4To', energy_only_bid_price4_to))
            
        if energy_only_bid_mw5_from is not None:
            
            _query_params.append(('energyOnlyBidMw5From', energy_only_bid_mw5_from))
            
        if energy_only_bid_mw5_to is not None:
            
            _query_params.append(('energyOnlyBidMw5To', energy_only_bid_mw5_to))
            
        if energy_only_bid_price5_from is not None:
            
            _query_params.append(('energyOnlyBidPrice5From', energy_only_bid_price5_from))
            
        if energy_only_bid_price5_to is not None:
            
            _query_params.append(('energyOnlyBidPrice5To', energy_only_bid_price5_to))
            
        if energy_only_bid_mw6_from is not None:
            
            _query_params.append(('energyOnlyBidMw6From', energy_only_bid_mw6_from))
            
        if energy_only_bid_mw6_to is not None:
            
            _query_params.append(('energyOnlyBidMw6To', energy_only_bid_mw6_to))
            
        if energy_only_bid_price6_from is not None:
            
            _query_params.append(('energyOnlyBidPrice6From', energy_only_bid_price6_from))
            
        if energy_only_bid_price6_to is not None:
            
            _query_params.append(('energyOnlyBidPrice6To', energy_only_bid_price6_to))
            
        if energy_only_bid_mw7_from is not None:
            
            _query_params.append(('energyOnlyBidMw7From', energy_only_bid_mw7_from))
            
        if energy_only_bid_mw7_to is not None:
            
            _query_params.append(('energyOnlyBidMw7To', energy_only_bid_mw7_to))
            
        if energy_only_bid_price7_from is not None:
            
            _query_params.append(('energyOnlyBidPrice7From', energy_only_bid_price7_from))
            
        if energy_only_bid_price7_to is not None:
            
            _query_params.append(('energyOnlyBidPrice7To', energy_only_bid_price7_to))
            
        if energy_only_bid_mw8_from is not None:
            
            _query_params.append(('energyOnlyBidMw8From', energy_only_bid_mw8_from))
            
        if energy_only_bid_mw8_to is not None:
            
            _query_params.append(('energyOnlyBidMw8To', energy_only_bid_mw8_to))
            
        if energy_only_bid_price8_from is not None:
            
            _query_params.append(('energyOnlyBidPrice8From', energy_only_bid_price8_from))
            
        if energy_only_bid_price8_to is not None:
            
            _query_params.append(('energyOnlyBidPrice8To', energy_only_bid_price8_to))
            
        if energy_only_bid_mw9_from is not None:
            
            _query_params.append(('energyOnlyBidMw9From', energy_only_bid_mw9_from))
            
        if energy_only_bid_mw9_to is not None:
            
            _query_params.append(('energyOnlyBidMw9To', energy_only_bid_mw9_to))
            
        if energy_only_bid_price9_from is not None:
            
            _query_params.append(('energyOnlyBidPrice9From', energy_only_bid_price9_from))
            
        if energy_only_bid_price9_to is not None:
            
            _query_params.append(('energyOnlyBidPrice9To', energy_only_bid_price9_to))
            
        if energy_only_bid_mw10_from is not None:
            
            _query_params.append(('energyOnlyBidMw10From', energy_only_bid_mw10_from))
            
        if energy_only_bid_mw10_to is not None:
            
            _query_params.append(('energyOnlyBidMw10To', energy_only_bid_mw10_to))
            
        if energy_only_bid_price10_from is not None:
            
            _query_params.append(('energyOnlyBidPrice10From', energy_only_bid_price10_from))
            
        if energy_only_bid_price10_to is not None:
            
            _query_params.append(('energyOnlyBidPrice10To', energy_only_bid_price10_to))
            
        if bid_id_from is not None:
            
            _query_params.append(('bidIdFrom', bid_id_from))
            
        if bid_id_to is not None:
            
            _query_params.append(('bidIdTo', bid_id_to))
            
        if multi_hour_block is not None:
            
            _query_params.append(('multiHourBlock', multi_hour_block))
            
        if block_curve is not None:
            
            _query_params.append(('blockCurve', block_curve))
            
        if delivery_date_from is not None:
            
            _query_params.append(('deliveryDateFrom', delivery_date_from))
            
        if delivery_date_to is not None:
            
            _query_params.append(('deliveryDateTo', delivery_date_to))
            
        if hour_ending_from is not None:
            
            _query_params.append(('hourEndingFrom', hour_ending_from))
            
        if hour_ending_to is not None:
            
            _query_params.append(('hourEndingTo', hour_ending_to))
            
        if settlement_point_name is not None:
            
            _query_params.append(('settlementPointName', settlement_point_name))
            
        if qse_name is not None:
            
            _query_params.append(('qseName', qse_name))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if dir is not None:
            
            _query_params.append(('dir', dir))
            
        # process the header parameters
        if ocp_apim_subscription_key is not None:
            _header_params['Ocp-Apim-Subscription-Key'] = ocp_apim_subscription_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/np3-966-er/60_dam_energy_bids',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_data50(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        settlement_point_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        energy_only_bid_award_in_mw_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_award_in_mwto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        settlement_point_price_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        settlement_point_price_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        bid_id: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Report:
        """60 Day DAM Energy Bid Awards

        60 Day DAM Energy Bid Awards

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param settlement_point_name: Format - abc123.
        :type settlement_point_name: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param energy_only_bid_award_in_mw_from: Format - ####.###.
        :type energy_only_bid_award_in_mw_from: float
        :param energy_only_bid_award_in_mwto: Format - ####.###.
        :type energy_only_bid_award_in_mwto: float
        :param settlement_point_price_from: Format - ####.###.
        :type settlement_point_price_from: float
        :param settlement_point_price_to: Format - ####.###.
        :type settlement_point_price_to: float
        :param bid_id: Format - abc123.
        :type bid_id: str
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data50_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            settlement_point_name=settlement_point_name,
            qse_name=qse_name,
            energy_only_bid_award_in_mw_from=energy_only_bid_award_in_mw_from,
            energy_only_bid_award_in_mwto=energy_only_bid_award_in_mwto,
            settlement_point_price_from=settlement_point_price_from,
            settlement_point_price_to=settlement_point_price_to,
            bid_id=bid_id,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_data50_with_http_info(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        settlement_point_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        energy_only_bid_award_in_mw_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_award_in_mwto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        settlement_point_price_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        settlement_point_price_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        bid_id: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Report]:
        """60 Day DAM Energy Bid Awards

        60 Day DAM Energy Bid Awards

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param settlement_point_name: Format - abc123.
        :type settlement_point_name: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param energy_only_bid_award_in_mw_from: Format - ####.###.
        :type energy_only_bid_award_in_mw_from: float
        :param energy_only_bid_award_in_mwto: Format - ####.###.
        :type energy_only_bid_award_in_mwto: float
        :param settlement_point_price_from: Format - ####.###.
        :type settlement_point_price_from: float
        :param settlement_point_price_to: Format - ####.###.
        :type settlement_point_price_to: float
        :param bid_id: Format - abc123.
        :type bid_id: str
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data50_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            settlement_point_name=settlement_point_name,
            qse_name=qse_name,
            energy_only_bid_award_in_mw_from=energy_only_bid_award_in_mw_from,
            energy_only_bid_award_in_mwto=energy_only_bid_award_in_mwto,
            settlement_point_price_from=settlement_point_price_from,
            settlement_point_price_to=settlement_point_price_to,
            bid_id=bid_id,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_data50_without_preload_content(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        hour_ending_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        hour_ending_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        settlement_point_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        qse_name: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        energy_only_bid_award_in_mw_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        energy_only_bid_award_in_mwto: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        settlement_point_price_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        settlement_point_price_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        bid_id: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """60 Day DAM Energy Bid Awards

        60 Day DAM Energy Bid Awards

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param hour_ending_from: Format - mm:ss.
        :type hour_ending_from: str
        :param hour_ending_to: Format - mm:ss.
        :type hour_ending_to: str
        :param settlement_point_name: Format - abc123.
        :type settlement_point_name: str
        :param qse_name: Format - abc123.
        :type qse_name: str
        :param energy_only_bid_award_in_mw_from: Format - ####.###.
        :type energy_only_bid_award_in_mw_from: float
        :param energy_only_bid_award_in_mwto: Format - ####.###.
        :type energy_only_bid_award_in_mwto: float
        :param settlement_point_price_from: Format - ####.###.
        :type settlement_point_price_from: float
        :param settlement_point_price_to: Format - ####.###.
        :type settlement_point_price_to: float
        :param bid_id: Format - abc123.
        :type bid_id: str
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data50_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            hour_ending_from=hour_ending_from,
            hour_ending_to=hour_ending_to,
            settlement_point_name=settlement_point_name,
            qse_name=qse_name,
            energy_only_bid_award_in_mw_from=energy_only_bid_award_in_mw_from,
            energy_only_bid_award_in_mwto=energy_only_bid_award_in_mwto,
            settlement_point_price_from=settlement_point_price_from,
            settlement_point_price_to=settlement_point_price_to,
            bid_id=bid_id,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_data50_serialize(
        self,
        ocp_apim_subscription_key,
        delivery_date_from,
        delivery_date_to,
        hour_ending_from,
        hour_ending_to,
        settlement_point_name,
        qse_name,
        energy_only_bid_award_in_mw_from,
        energy_only_bid_award_in_mwto,
        settlement_point_price_from,
        settlement_point_price_to,
        bid_id,
        page,
        size,
        sort,
        dir,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if delivery_date_from is not None:
            
            _query_params.append(('deliveryDateFrom', delivery_date_from))
            
        if delivery_date_to is not None:
            
            _query_params.append(('deliveryDateTo', delivery_date_to))
            
        if hour_ending_from is not None:
            
            _query_params.append(('hourEndingFrom', hour_ending_from))
            
        if hour_ending_to is not None:
            
            _query_params.append(('hourEndingTo', hour_ending_to))
            
        if settlement_point_name is not None:
            
            _query_params.append(('settlementPointName', settlement_point_name))
            
        if qse_name is not None:
            
            _query_params.append(('qseName', qse_name))
            
        if energy_only_bid_award_in_mw_from is not None:
            
            _query_params.append(('energyOnlyBidAwardInMWFrom', energy_only_bid_award_in_mw_from))
            
        if energy_only_bid_award_in_mwto is not None:
            
            _query_params.append(('energyOnlyBidAwardInMWTo', energy_only_bid_award_in_mwto))
            
        if settlement_point_price_from is not None:
            
            _query_params.append(('settlementPointPriceFrom', settlement_point_price_from))
            
        if settlement_point_price_to is not None:
            
            _query_params.append(('settlementPointPriceTo', settlement_point_price_to))
            
        if bid_id is not None:
            
            _query_params.append(('bidId', bid_id))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if dir is not None:
            
            _query_params.append(('dir', dir))
            
        # process the header parameters
        if ocp_apim_subscription_key is not None:
            _header_params['Ocp-Apim-Subscription-Key'] = ocp_apim_subscription_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/np3-966-er/60_dam_energy_bid_awards',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


