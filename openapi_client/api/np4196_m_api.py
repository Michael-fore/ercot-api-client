# coding: utf-8

"""
    ERCOT Public API Client/Developer Documentation

    Client/Developer RESTFul web services documentation for ERCOT Market Information List (EMIL) products.

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictBool, StrictFloat, StrictInt, StrictStr
from typing import Optional, Union
from typing_extensions import Annotated
from openapi_client.models.report import Report

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class NP4196MApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def get_data24(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_hour_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_hour_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        settlement_point: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        spp_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        spp_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        spp_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        spp_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Report:
        """DAM Price Corrections for SPP

        DAM Price Corrections for SPP

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param price_correction_time_from: Format - mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param delivery_hour_from: Format - ###.
        :type delivery_hour_from: int
        :param delivery_hour_to: Format - ###.
        :type delivery_hour_to: int
        :param settlement_point: Format - abc123.
        :type settlement_point: str
        :param spp_original_from: Format - ####.###.
        :type spp_original_from: float
        :param spp_original_to: Format - ####.###.
        :type spp_original_to: float
        :param spp_corrected_from: Format - ####.###.
        :type spp_corrected_from: float
        :param spp_corrected_to: Format - ####.###.
        :type spp_corrected_to: float
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data24_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            delivery_hour_from=delivery_hour_from,
            delivery_hour_to=delivery_hour_to,
            settlement_point=settlement_point,
            spp_original_from=spp_original_from,
            spp_original_to=spp_original_to,
            spp_corrected_from=spp_corrected_from,
            spp_corrected_to=spp_corrected_to,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_data24_with_http_info(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_hour_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_hour_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        settlement_point: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        spp_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        spp_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        spp_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        spp_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Report]:
        """DAM Price Corrections for SPP

        DAM Price Corrections for SPP

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param price_correction_time_from: Format - mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param delivery_hour_from: Format - ###.
        :type delivery_hour_from: int
        :param delivery_hour_to: Format - ###.
        :type delivery_hour_to: int
        :param settlement_point: Format - abc123.
        :type settlement_point: str
        :param spp_original_from: Format - ####.###.
        :type spp_original_from: float
        :param spp_original_to: Format - ####.###.
        :type spp_original_to: float
        :param spp_corrected_from: Format - ####.###.
        :type spp_corrected_from: float
        :param spp_corrected_to: Format - ####.###.
        :type spp_corrected_to: float
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data24_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            delivery_hour_from=delivery_hour_from,
            delivery_hour_to=delivery_hour_to,
            settlement_point=settlement_point,
            spp_original_from=spp_original_from,
            spp_original_to=spp_original_to,
            spp_corrected_from=spp_corrected_from,
            spp_corrected_to=spp_corrected_to,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_data24_without_preload_content(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_hour_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_hour_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        settlement_point: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        spp_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        spp_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        spp_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        spp_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """DAM Price Corrections for SPP

        DAM Price Corrections for SPP

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param price_correction_time_from: Format - mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param delivery_hour_from: Format - ###.
        :type delivery_hour_from: int
        :param delivery_hour_to: Format - ###.
        :type delivery_hour_to: int
        :param settlement_point: Format - abc123.
        :type settlement_point: str
        :param spp_original_from: Format - ####.###.
        :type spp_original_from: float
        :param spp_original_to: Format - ####.###.
        :type spp_original_to: float
        :param spp_corrected_from: Format - ####.###.
        :type spp_corrected_from: float
        :param spp_corrected_to: Format - ####.###.
        :type spp_corrected_to: float
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data24_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            delivery_hour_from=delivery_hour_from,
            delivery_hour_to=delivery_hour_to,
            settlement_point=settlement_point,
            spp_original_from=spp_original_from,
            spp_original_to=spp_original_to,
            spp_corrected_from=spp_corrected_from,
            spp_corrected_to=spp_corrected_to,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_data24_serialize(
        self,
        ocp_apim_subscription_key,
        price_correction_time_from,
        price_correction_time_to,
        dst_flag,
        delivery_date_from,
        delivery_date_to,
        delivery_hour_from,
        delivery_hour_to,
        settlement_point,
        spp_original_from,
        spp_original_to,
        spp_corrected_from,
        spp_corrected_to,
        page,
        size,
        sort,
        dir,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if price_correction_time_from is not None:
            
            _query_params.append(('priceCorrectionTimeFrom', price_correction_time_from))
            
        if price_correction_time_to is not None:
            
            _query_params.append(('priceCorrectionTimeTo', price_correction_time_to))
            
        if dst_flag is not None:
            
            _query_params.append(('DSTFlag', dst_flag))
            
        if delivery_date_from is not None:
            
            _query_params.append(('deliveryDateFrom', delivery_date_from))
            
        if delivery_date_to is not None:
            
            _query_params.append(('deliveryDateTo', delivery_date_to))
            
        if delivery_hour_from is not None:
            
            _query_params.append(('deliveryHourFrom', delivery_hour_from))
            
        if delivery_hour_to is not None:
            
            _query_params.append(('deliveryHourTo', delivery_hour_to))
            
        if settlement_point is not None:
            
            _query_params.append(('settlementPoint', settlement_point))
            
        if spp_original_from is not None:
            
            _query_params.append(('SPPOriginalFrom', spp_original_from))
            
        if spp_original_to is not None:
            
            _query_params.append(('SPPOriginalTo', spp_original_to))
            
        if spp_corrected_from is not None:
            
            _query_params.append(('SPPCorrectedFrom', spp_corrected_from))
            
        if spp_corrected_to is not None:
            
            _query_params.append(('SPPCorrectedTo', spp_corrected_to))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if dir is not None:
            
            _query_params.append(('dir', dir))
            
        # process the header parameters
        if ocp_apim_subscription_key is not None:
            _header_params['Ocp-Apim-Subscription-Key'] = ocp_apim_subscription_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/np4-196-m/dam_price_corrections_spp',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_data25(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_hour_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_hour_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        as_type: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        mcpc_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        mcpc_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        mcpc_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        mcpc_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Report:
        """DAM Price Corrections for MCPC

        DAM Price Corrections for MCPC

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param delivery_hour_from: Format - ###.
        :type delivery_hour_from: int
        :param delivery_hour_to: Format - ###.
        :type delivery_hour_to: int
        :param as_type: Format - abc123.
        :type as_type: str
        :param mcpc_original_from: Format - ####.###.
        :type mcpc_original_from: float
        :param mcpc_original_to: Format - ####.###.
        :type mcpc_original_to: float
        :param mcpc_corrected_from: Format - ####.###.
        :type mcpc_corrected_from: float
        :param mcpc_corrected_to: Format - ####.###.
        :type mcpc_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data25_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            delivery_hour_from=delivery_hour_from,
            delivery_hour_to=delivery_hour_to,
            as_type=as_type,
            mcpc_original_from=mcpc_original_from,
            mcpc_original_to=mcpc_original_to,
            mcpc_corrected_from=mcpc_corrected_from,
            mcpc_corrected_to=mcpc_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_data25_with_http_info(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_hour_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_hour_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        as_type: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        mcpc_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        mcpc_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        mcpc_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        mcpc_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Report]:
        """DAM Price Corrections for MCPC

        DAM Price Corrections for MCPC

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param delivery_hour_from: Format - ###.
        :type delivery_hour_from: int
        :param delivery_hour_to: Format - ###.
        :type delivery_hour_to: int
        :param as_type: Format - abc123.
        :type as_type: str
        :param mcpc_original_from: Format - ####.###.
        :type mcpc_original_from: float
        :param mcpc_original_to: Format - ####.###.
        :type mcpc_original_to: float
        :param mcpc_corrected_from: Format - ####.###.
        :type mcpc_corrected_from: float
        :param mcpc_corrected_to: Format - ####.###.
        :type mcpc_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data25_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            delivery_hour_from=delivery_hour_from,
            delivery_hour_to=delivery_hour_to,
            as_type=as_type,
            mcpc_original_from=mcpc_original_from,
            mcpc_original_to=mcpc_original_to,
            mcpc_corrected_from=mcpc_corrected_from,
            mcpc_corrected_to=mcpc_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_data25_without_preload_content(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_hour_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_hour_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        as_type: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        mcpc_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        mcpc_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        mcpc_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        mcpc_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """DAM Price Corrections for MCPC

        DAM Price Corrections for MCPC

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param delivery_hour_from: Format - ###.
        :type delivery_hour_from: int
        :param delivery_hour_to: Format - ###.
        :type delivery_hour_to: int
        :param as_type: Format - abc123.
        :type as_type: str
        :param mcpc_original_from: Format - ####.###.
        :type mcpc_original_from: float
        :param mcpc_original_to: Format - ####.###.
        :type mcpc_original_to: float
        :param mcpc_corrected_from: Format - ####.###.
        :type mcpc_corrected_from: float
        :param mcpc_corrected_to: Format - ####.###.
        :type mcpc_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data25_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            delivery_hour_from=delivery_hour_from,
            delivery_hour_to=delivery_hour_to,
            as_type=as_type,
            mcpc_original_from=mcpc_original_from,
            mcpc_original_to=mcpc_original_to,
            mcpc_corrected_from=mcpc_corrected_from,
            mcpc_corrected_to=mcpc_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_data25_serialize(
        self,
        ocp_apim_subscription_key,
        delivery_date_from,
        delivery_date_to,
        delivery_hour_from,
        delivery_hour_to,
        as_type,
        mcpc_original_from,
        mcpc_original_to,
        mcpc_corrected_from,
        mcpc_corrected_to,
        price_correction_time_from,
        price_correction_time_to,
        dst_flag,
        page,
        size,
        sort,
        dir,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if delivery_date_from is not None:
            
            _query_params.append(('deliveryDateFrom', delivery_date_from))
            
        if delivery_date_to is not None:
            
            _query_params.append(('deliveryDateTo', delivery_date_to))
            
        if delivery_hour_from is not None:
            
            _query_params.append(('deliveryHourFrom', delivery_hour_from))
            
        if delivery_hour_to is not None:
            
            _query_params.append(('deliveryHourTo', delivery_hour_to))
            
        if as_type is not None:
            
            _query_params.append(('ASType', as_type))
            
        if mcpc_original_from is not None:
            
            _query_params.append(('MCPCOriginalFrom', mcpc_original_from))
            
        if mcpc_original_to is not None:
            
            _query_params.append(('MCPCOriginalTo', mcpc_original_to))
            
        if mcpc_corrected_from is not None:
            
            _query_params.append(('MCPCCorrectedFrom', mcpc_corrected_from))
            
        if mcpc_corrected_to is not None:
            
            _query_params.append(('MCPCCorrectedTo', mcpc_corrected_to))
            
        if price_correction_time_from is not None:
            
            _query_params.append(('priceCorrectionTimeFrom', price_correction_time_from))
            
        if price_correction_time_to is not None:
            
            _query_params.append(('priceCorrectionTimeTo', price_correction_time_to))
            
        if dst_flag is not None:
            
            _query_params.append(('DSTFlag', dst_flag))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if dir is not None:
            
            _query_params.append(('dir', dir))
            
        # process the header parameters
        if ocp_apim_subscription_key is not None:
            _header_params['Ocp-Apim-Subscription-Key'] = ocp_apim_subscription_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/np4-196-m/dam_price_corrections_mcpc',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_data26(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_hour_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_hour_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        electrical_bus: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        lmp_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Report:
        """DAM Price Corrections for EBLMP

        DAM Price Corrections for EBLMP

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param delivery_hour_from: Format - ###.
        :type delivery_hour_from: int
        :param delivery_hour_to: Format - ###.
        :type delivery_hour_to: int
        :param electrical_bus: Format - abc123.
        :type electrical_bus: str
        :param lmp_original_from: Format - ####.###.
        :type lmp_original_from: float
        :param lmp_original_to: Format - ####.###.
        :type lmp_original_to: float
        :param lmp_corrected_from: Format - ####.###.
        :type lmp_corrected_from: float
        :param lmp_corrected_to: Format - ####.###.
        :type lmp_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data26_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            delivery_hour_from=delivery_hour_from,
            delivery_hour_to=delivery_hour_to,
            electrical_bus=electrical_bus,
            lmp_original_from=lmp_original_from,
            lmp_original_to=lmp_original_to,
            lmp_corrected_from=lmp_corrected_from,
            lmp_corrected_to=lmp_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_data26_with_http_info(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_hour_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_hour_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        electrical_bus: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        lmp_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Report]:
        """DAM Price Corrections for EBLMP

        DAM Price Corrections for EBLMP

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param delivery_hour_from: Format - ###.
        :type delivery_hour_from: int
        :param delivery_hour_to: Format - ###.
        :type delivery_hour_to: int
        :param electrical_bus: Format - abc123.
        :type electrical_bus: str
        :param lmp_original_from: Format - ####.###.
        :type lmp_original_from: float
        :param lmp_original_to: Format - ####.###.
        :type lmp_original_to: float
        :param lmp_corrected_from: Format - ####.###.
        :type lmp_corrected_from: float
        :param lmp_corrected_to: Format - ####.###.
        :type lmp_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data26_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            delivery_hour_from=delivery_hour_from,
            delivery_hour_to=delivery_hour_to,
            electrical_bus=electrical_bus,
            lmp_original_from=lmp_original_from,
            lmp_original_to=lmp_original_to,
            lmp_corrected_from=lmp_corrected_from,
            lmp_corrected_to=lmp_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_data26_without_preload_content(
        self,
        ocp_apim_subscription_key: Annotated[StrictStr, Field(description="The subscription key assigned to your ERCOT Public API account.")],
        delivery_date_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_date_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-dd.")] = None,
        delivery_hour_from: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        delivery_hour_to: Annotated[Optional[StrictInt], Field(description="Format - ###.")] = None,
        electrical_bus: Annotated[Optional[StrictStr], Field(description="Format - abc123.")] = None,
        lmp_original_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_original_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_corrected_from: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        lmp_corrected_to: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Format - ####.###.")] = None,
        price_correction_time_from: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        price_correction_time_to: Annotated[Optional[StrictStr], Field(description="Format - yyyy-MM-ddTH24:mm:ss.")] = None,
        dst_flag: Annotated[Optional[StrictBool], Field(description="Format - true | false.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Format - ###. Page number of returned values in the collection.")] = None,
        size: Annotated[Optional[StrictInt], Field(description="Format - ###. Number of returned items per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines field by which to sort the returned resource values.")] = None,
        dir: Annotated[Optional[StrictStr], Field(description="Format - abc123. Defines sort order of returned values based on the primary business key of the resource.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """DAM Price Corrections for EBLMP

        DAM Price Corrections for EBLMP

        :param ocp_apim_subscription_key: The subscription key assigned to your ERCOT Public API account. (required)
        :type ocp_apim_subscription_key: str
        :param delivery_date_from: Format - yyyy-MM-dd.
        :type delivery_date_from: str
        :param delivery_date_to: Format - yyyy-MM-dd.
        :type delivery_date_to: str
        :param delivery_hour_from: Format - ###.
        :type delivery_hour_from: int
        :param delivery_hour_to: Format - ###.
        :type delivery_hour_to: int
        :param electrical_bus: Format - abc123.
        :type electrical_bus: str
        :param lmp_original_from: Format - ####.###.
        :type lmp_original_from: float
        :param lmp_original_to: Format - ####.###.
        :type lmp_original_to: float
        :param lmp_corrected_from: Format - ####.###.
        :type lmp_corrected_from: float
        :param lmp_corrected_to: Format - ####.###.
        :type lmp_corrected_to: float
        :param price_correction_time_from: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_from: str
        :param price_correction_time_to: Format - yyyy-MM-ddTH24:mm:ss.
        :type price_correction_time_to: str
        :param dst_flag: Format - true | false.
        :type dst_flag: bool
        :param page: Format - ###. Page number of returned values in the collection.
        :type page: int
        :param size: Format - ###. Number of returned items per page.
        :type size: int
        :param sort: Format - abc123. Defines field by which to sort the returned resource values.
        :type sort: str
        :param dir: Format - abc123. Defines sort order of returned values based on the primary business key of the resource.
        :type dir: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_data26_serialize(
            ocp_apim_subscription_key=ocp_apim_subscription_key,
            delivery_date_from=delivery_date_from,
            delivery_date_to=delivery_date_to,
            delivery_hour_from=delivery_hour_from,
            delivery_hour_to=delivery_hour_to,
            electrical_bus=electrical_bus,
            lmp_original_from=lmp_original_from,
            lmp_original_to=lmp_original_to,
            lmp_corrected_from=lmp_corrected_from,
            lmp_corrected_to=lmp_corrected_to,
            price_correction_time_from=price_correction_time_from,
            price_correction_time_to=price_correction_time_to,
            dst_flag=dst_flag,
            page=page,
            size=size,
            sort=sort,
            dir=dir,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Report",
            '400': "Exception",
            '403': "Exception",
            '404': "Exception",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_data26_serialize(
        self,
        ocp_apim_subscription_key,
        delivery_date_from,
        delivery_date_to,
        delivery_hour_from,
        delivery_hour_to,
        electrical_bus,
        lmp_original_from,
        lmp_original_to,
        lmp_corrected_from,
        lmp_corrected_to,
        price_correction_time_from,
        price_correction_time_to,
        dst_flag,
        page,
        size,
        sort,
        dir,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if delivery_date_from is not None:
            
            _query_params.append(('deliveryDateFrom', delivery_date_from))
            
        if delivery_date_to is not None:
            
            _query_params.append(('deliveryDateTo', delivery_date_to))
            
        if delivery_hour_from is not None:
            
            _query_params.append(('deliveryHourFrom', delivery_hour_from))
            
        if delivery_hour_to is not None:
            
            _query_params.append(('deliveryHourTo', delivery_hour_to))
            
        if electrical_bus is not None:
            
            _query_params.append(('electricalBus', electrical_bus))
            
        if lmp_original_from is not None:
            
            _query_params.append(('LMPOriginalFrom', lmp_original_from))
            
        if lmp_original_to is not None:
            
            _query_params.append(('LMPOriginalTo', lmp_original_to))
            
        if lmp_corrected_from is not None:
            
            _query_params.append(('LMPCorrectedFrom', lmp_corrected_from))
            
        if lmp_corrected_to is not None:
            
            _query_params.append(('LMPCorrectedTo', lmp_corrected_to))
            
        if price_correction_time_from is not None:
            
            _query_params.append(('priceCorrectionTimeFrom', price_correction_time_from))
            
        if price_correction_time_to is not None:
            
            _query_params.append(('priceCorrectionTimeTo', price_correction_time_to))
            
        if dst_flag is not None:
            
            _query_params.append(('DSTFlag', dst_flag))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if dir is not None:
            
            _query_params.append(('dir', dir))
            
        # process the header parameters
        if ocp_apim_subscription_key is not None:
            _header_params['Ocp-Apim-Subscription-Key'] = ocp_apim_subscription_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/np4-196-m/dam_price_corrections_eblmp',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


